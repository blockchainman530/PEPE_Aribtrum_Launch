{"version":3,"sources":["views/Home/components/CompositeImage.tsx","views/Home/components/SalesSection/data.ts","views/Home/components/PurpleWordHeading.tsx","views/Home/components/SalesSection/index.tsx","views/Home/components/CakeDataRow.tsx","views/Home/index.tsx","components/PageSection/svg/CurvedSvg.tsx","components/PageSection/CurvedDivider.tsx","components/PageSection/index.tsx"],"names":["Resolution","cakeSectionData","headingText","bodyText","reverse","primaryButton","to","text","external","secondaryButton","images","path","attributes","src","alt","floatingAnim","x","y","keyframes","Wrapper","styled","Box","maxHeight","DummyImg","img","ImageWrapper","getImageUrl","base","imageSrc","resolution","getSrcSet","MD","LG","CompositeImage","srcSet","map","image","PurpleWordHeading","props","theme","useTheme","split","firstWord","remainingWords","slice","join","scale","mb","style","color","colors","secondary","SalesSection","t","useTranslation","headingTranslatedText","bodyTranslatedText","flexDirection","alignItems","justifyContent","flex","ml","mr","alignSelf","href","bold","fontSize","height","width","StyledColumn","Flex","noMobileBorder","mediaQueries","md","inputSecondary","sm","Grid","div","CakeDataRow","totalSupply","useTotalSupply","burnedBalance","getBalanceNumber","useBurnedBalance","getCakeAddress","cakeSupply","mcap","usePriceCakeBusd","times","mcapString","formatLocalisedCompactNumber","toNumber","totalValueLocked","useTotalValue","console","log","my","Balance","decimals","lineHeight","value","gt","marketCap","cakeEmissions","PageSection","Container","lg","Home","useWeb3React","account","useFetchPublicPoolsData","innerProps","margin","maxWidth","background","index","hasCurvedDivider","sharedStyles","clipPath","clipFill","css","isDark","dark","light","ConcaveContainer","ConvexContainer","ConvexTop","id","clipPathUnits","d","ConvexBottom","ConcaveTop","ConcaveBottom","dividerFill","ComponentWrapper","CurvedDivider","dividerPosition","dividerComponent","concave","showConvexTop","showConvexBottom","showConcaveTop","showConcaveBottom","BackgroundColor","getPadding","ChildrenWrapper","children","svgFill","concaveDivider","containerProps"],"mappings":"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","file":"static/js/14.1d5bb8e1.chunk.js","sourcesContent":["import React from 'react'\r\nimport styled, { keyframes } from 'styled-components'\r\nimport { Box } from '@pancakeswap/uikit'\r\n\r\nconst floatingAnim = (x: string, y: string) => keyframes`\r\n  from {\r\n    transform: translate(0,  0px);\r\n  }\r\n  50% {\r\n    transform: translate(${x}, ${y});\r\n  }\r\n  to {\r\n    transform: translate(0, 0px);\r\n  }  \r\n`\r\n\r\nconst Wrapper = styled(Box)<{ maxHeight: string }>`\r\n  position: relative;\r\n  max-height: ${({ maxHeight }) => maxHeight};\r\n\r\n  & :nth-child(2) {\r\n    animation: ${floatingAnim('3px', '15px')} 3s ease-in-out infinite;\r\n    animation-delay: 1s;\r\n  }\r\n\r\n  & :nth-child(3) {\r\n    animation: ${floatingAnim('5px', '10px')} 3s ease-in-out infinite;\r\n    animation-delay: 0.66s;\r\n  }\r\n\r\n  & :nth-child(4) {\r\n    animation: ${floatingAnim('6px', '5px')} 3s ease-in-out infinite;\r\n    animation-delay: 0.33s;\r\n  }\r\n\r\n  & :nth-child(5) {\r\n    animation: ${floatingAnim('4px', '12px')} 3s ease-in-out infinite;\r\n    animation-delay: 0s;\r\n  }\r\n`\r\n\r\nconst DummyImg = styled.img<{ maxHeight: string }>`\r\n  max-height: ${({ maxHeight }) => maxHeight};\r\n  visibility: hidden;\r\n`\r\n\r\nconst ImageWrapper = styled(Box)`\r\n  height: 100%;\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n\r\n  img {\r\n    max-height: 100%;\r\n    width: auto;\r\n  }\r\n`\r\n\r\nenum Resolution {\r\n  MD = '1.5x',\r\n  LG = '2x',\r\n}\r\ninterface ImageAttributes {\r\n  src: string\r\n  alt: string\r\n}\r\n\r\nexport interface CompositeImageProps {\r\n  path: string\r\n  attributes: ImageAttributes[]\r\n}\r\n\r\ninterface ComponentProps extends CompositeImageProps {\r\n  animate?: boolean\r\n  maxHeight?: string\r\n}\r\n\r\nexport const getImageUrl = (base: string, imageSrc: string, resolution?: Resolution): string =>\r\n  `${base}${imageSrc}${resolution ? `@${resolution}.png` : '.png'}`\r\n\r\nexport const getSrcSet = (base: string, imageSrc: string) => {\r\n  return `${getImageUrl(base, imageSrc)} 512w, \r\n  ${getImageUrl(base, imageSrc, Resolution.MD)} 768w, \r\n  ${getImageUrl(base, imageSrc, Resolution.LG)} 1024w,`\r\n}\r\n\r\nconst CompositeImage: React.FC<ComponentProps> = ({ path, attributes, maxHeight = '512px' }) => {\r\n  return (\r\n    <Wrapper maxHeight={maxHeight}>\r\n      <DummyImg\r\n        src={getImageUrl(path, attributes[0].src)}\r\n        maxHeight={maxHeight}\r\n        srcSet={getSrcSet(path, attributes[0].src)}\r\n      />\r\n      {attributes.map((image) => (\r\n        <ImageWrapper key={image.src}>\r\n          <img src={getImageUrl(path, image.src)} srcSet={getSrcSet(path, image.src)} alt={image.alt} />\r\n        </ImageWrapper>\r\n      ))}\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default CompositeImage\r\n","import { SalesSectionProps } from '.'\r\n\r\nexport const swapSectionData: SalesSectionProps = {\r\n  headingText: 'Trade anything. No registration, no hassle.',\r\n  bodyText: 'Trade any token on Binance Smart Chain in seconds, just by connecting your wallet.',\r\n  reverse: false,\r\n  primaryButton: {\r\n    to: '/swap',\r\n    text: 'Trade Now',\r\n    external: false,\r\n  },\r\n  secondaryButton: {\r\n    to: 'https://docs.pancakeswap.finance/',\r\n    text: 'Learn',\r\n    external: true,\r\n  },\r\n  images: {\r\n    path: '/images/home/trade/',\r\n    attributes: [\r\n      { src: 'BNB', alt: 'BNB token' },\r\n      { src: 'BTC', alt: 'BTC token' },\r\n      { src: 'CAKE', alt: 'CAKE token' },\r\n    ],\r\n  },\r\n}\r\n\r\nexport const earnSectionData: SalesSectionProps = {\r\n  headingText: 'Earn passive income with crypto.',\r\n  bodyText: 'PancakeSwap makes it easy to make your crypto work for you.',\r\n  reverse: true,\r\n  primaryButton: {\r\n    to: '/farms',\r\n    text: 'Explore',\r\n    external: false,\r\n  },\r\n  secondaryButton: {\r\n    to: 'https://docs.pancakeswap.finance/products/yield-farming',\r\n    text: 'Learn',\r\n    external: true,\r\n  },\r\n  images: {\r\n    path: '/images/home/earn/',\r\n    attributes: [\r\n      { src: 'pie', alt: 'Pie chart' },\r\n      { src: 'stonks', alt: 'Stocks chart' },\r\n      { src: 'folder', alt: 'Folder with cake token' },\r\n    ],\r\n  },\r\n}\r\n\r\nexport const cakeSectionData: SalesSectionProps = {\r\n  headingText: 'PEPE makes our world worthy.',\r\n  bodyText:\r\n    'PEPE token is at the heart of the PepeSwap ecosystem. Buy it, win it, farm it, spend it, stake it... heck, you can even vote with it!',\r\n  reverse: false,\r\n  primaryButton: {\r\n    to: 'https://app.sushi.com/swap',\r\n    text: 'Buy PEPE',\r\n    external: false,\r\n  },\r\n  secondaryButton: {\r\n    to: 'https://docs.pancakeswap.finance/tokenomics/cake',\r\n    text: 'Learn',\r\n    external: true,\r\n  },\r\n\r\n  images: {\r\n    path: '/images/home/cake/',\r\n    attributes: [\r\n      // { src: 'bottom-right', alt: 'Small 3d pancake' },\r\n      // { src: 'top-right', alt: 'Small 3d pancake' },\r\n      { src: 'coin', alt: 'CAKE token' },\r\n      // { src: 'top-left', alt: 'Small 3d pancake' },\r\n    ],\r\n  },\r\n}\r\n","import React from 'react'\r\nimport { Heading, TextProps } from '@pancakeswap/uikit'\r\nimport useTheme from 'hooks/useTheme'\r\n\r\ninterface HeadingProps extends TextProps {\r\n  text: string\r\n}\r\n\r\nconst PurpleWordHeading: React.FC<HeadingProps> = ({ text, ...props }) => {\r\n  const { theme } = useTheme()\r\n  const split = text.split(' ')\r\n  const firstWord = split[0]\r\n  const remainingWords = split.slice(1).join(' ')\r\n  return (\r\n    <Heading scale=\"xl\" mb=\"24px\" {...props}>\r\n      <span style={{ color: theme.colors.secondary }}>{firstWord} </span>\r\n      {remainingWords}\r\n    </Heading>\r\n  )\r\n}\r\n\r\nexport default PurpleWordHeading\r\n","import React from 'react'\r\nimport { Flex, Text, Button, Link } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport CompositeImage, { CompositeImageProps } from '../CompositeImage'\r\nimport PurpleWordHeading from '../PurpleWordHeading'\r\n\r\ninterface SalesSectionButton {\r\n  to: string\r\n  text: string\r\n  external: boolean\r\n}\r\n\r\nexport interface SalesSectionProps {\r\n  headingText: string\r\n  bodyText: string\r\n  reverse: boolean\r\n  primaryButton: SalesSectionButton\r\n  secondaryButton: SalesSectionButton\r\n  images: CompositeImageProps\r\n}\r\n\r\nconst SalesSection: React.FC<SalesSectionProps> = (props) => {\r\n  const { t } = useTranslation()\r\n\r\n  const { headingText, bodyText, reverse, primaryButton, secondaryButton, images } = props\r\n\r\n  const headingTranslatedText = t(headingText)\r\n  const bodyTranslatedText = t(bodyText)\r\n\r\n  return (\r\n    <Flex flexDirection=\"column\">\r\n      <Flex\r\n        flexDirection={['column-reverse', null, null, reverse ? 'row-reverse' : 'row']}\r\n        alignItems={['flex-end', null, null, 'center']}\r\n        justifyContent=\"center\"\r\n      >\r\n        <Flex\r\n          flexDirection=\"column\"\r\n          flex=\"1\"\r\n          ml={[null, null, null, reverse && '64px']}\r\n          mr={[null, null, null, !reverse && '64px']}\r\n          alignSelf={['flex-start', null, null, 'center']}\r\n        >\r\n          <PurpleWordHeading text={headingTranslatedText} />\r\n          <Text color=\"textSubtle\" mb=\"24px\">\r\n            {bodyTranslatedText}\r\n          </Text>\r\n          <Flex>\r\n            <Link mr=\"16px\" external={primaryButton.external} href={primaryButton.to}>\r\n              <Button>\r\n                <Text color=\"card\" bold fontSize=\"16px\">\r\n                  {t(primaryButton.text)}\r\n                </Text>\r\n              </Button>\r\n            </Link>\r\n            {/* <Link external={secondaryButton.external} href={secondaryButton.to}>\r\n              {t(secondaryButton.text)}\r\n            </Link> */}\r\n          </Flex>\r\n        </Flex>\r\n        <Flex\r\n          height={['192px', null, null, '100%']}\r\n          width={['192px', null, null, '100%']}\r\n          flex={[null, null, null, '1']}\r\n          mb={['24px', null, null, '0']}\r\n        >\r\n          <CompositeImage {...images} />\r\n        </Flex>\r\n      </Flex>\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default SalesSection\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { useTotalSupply, useBurnedBalance } from 'hooks/useTokenBalance'\r\nimport { getCakeAddress } from 'utils/addressHelpers'\r\nimport { getBalanceNumber, formatLocalisedCompactNumber } from 'utils/formatBalance'\r\nimport { usePriceCakeBusd, useTotalValue } from 'state/farms/hooks'\r\nimport { Flex, Text, Heading, Skeleton } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport Balance from 'components/Balance'\r\n\r\nconst StyledColumn = styled(Flex)<{ noMobileBorder?: boolean }>`\r\n  flex-direction: column;\r\n  ${({ noMobileBorder, theme }) =>\r\n    noMobileBorder\r\n      ? `${theme.mediaQueries.md} {\r\n           padding: 0 16px;\r\n           border-left: 1px ${theme.colors.inputSecondary} solid;\r\n         }\r\n       `\r\n      : `border-left: 1px ${theme.colors.inputSecondary} solid;\r\n         padding: 0 8px;\r\n         ${theme.mediaQueries.sm} {\r\n           padding: 0 16px;\r\n         }\r\n       `}\r\n`\r\n\r\nconst Grid = styled.div`\r\n  display: grid;\r\n  grid-gap: 16px 8px;\r\n  margin-top: 24px;\r\n  grid-template-columns: repeat(2, auto);\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    grid-gap: 16px;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    grid-gap: 32px;\r\n    grid-template-columns: repeat(4, auto);\r\n  }\r\n`\r\n\r\nconst emissionsPerBlock = 15\r\n\r\nconst CakeDataRow = () => {\r\n  const { t } = useTranslation()\r\n  const totalSupply = useTotalSupply()\r\n  const burnedBalance = getBalanceNumber(useBurnedBalance(getCakeAddress()))\r\n  const cakeSupply = totalSupply ? getBalanceNumber(totalSupply) - burnedBalance : 0\r\n  const cakePriceBusd = usePriceCakeBusd()\r\n  const mcap = cakePriceBusd.times(cakeSupply)\r\n  const mcapString = formatLocalisedCompactNumber(mcap.toNumber())\r\n  const totalValueLocked = useTotalValue()\r\n  console.log('debug tvl', totalValueLocked.toNumber())\r\n  return (\r\n    <Grid>\r\n      <Flex flexDirection=\"column\" height={24} width={126} my=\"4px\" />\r\n      <Flex flexDirection=\"column\" height={24} width={126} my=\"4px\" />\r\n      <Flex flexDirection=\"column\" height={24} width={126} my=\"4px\" />\r\n      <Flex flexDirection=\"column\" height={24} width={126} my=\"4px\" />\r\n\r\n      <Flex flexDirection=\"column\">\r\n        <Text color=\"textSubtle\">{t('Total Value Locked(TVL)')}</Text>\r\n          {totalValueLocked && totalValueLocked.toNumber() ? (\r\n            <Balance decimals={0} lineHeight=\"1.1\" fontSize=\"24px\" bold value={totalValueLocked.toNumber()} />\r\n          ) : (\r\n            <Skeleton height={24} width={126} my=\"4px\" />\r\n          )}\r\n      </Flex>\r\n      <Flex flexDirection=\"column\">\r\n        <Text color=\"textSubtle\">{t('Total supply')}</Text>\r\n        {cakeSupply ? (\r\n          <Balance decimals={0} lineHeight=\"1.1\" fontSize=\"24px\" bold value={cakeSupply} />\r\n        ) : (\r\n          <Skeleton height={24} width={126} my=\"4px\" />\r\n        )}\r\n      </Flex>\r\n      <StyledColumn noMobileBorder>\r\n        <Text color=\"textSubtle\">{t('Market cap')}</Text>\r\n        {mcap?.gt(0) && mcapString ? (\r\n          <Heading scale=\"lg\">{t('$%marketCap%', { marketCap: mcapString })}</Heading>\r\n        ) : (\r\n          <Skeleton height={24} width={126} my=\"4px\" />\r\n        )}\r\n      </StyledColumn>\r\n      <StyledColumn>\r\n        <Text color=\"textSubtle\">{t('Current emissions')}</Text>\r\n        <Heading scale=\"lg\">{t('%cakeEmissions%/block', { cakeEmissions: emissionsPerBlock })}</Heading>\r\n      </StyledColumn>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default CakeDataRow\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport PageSection from 'components/PageSection'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport useTheme from 'hooks/useTheme'\r\nimport Container from 'components/Layout/Container'\r\nimport { useFetchPublicPoolsData } from 'state/pools/hooks'\r\nimport Hero from './components/Hero'\r\nimport { swapSectionData, earnSectionData, cakeSectionData } from './components/SalesSection/data'\r\nimport MetricsSection from './components/MetricsSection'\r\nimport SalesSection from './components/SalesSection'\r\nimport WinSection from './components/WinSection'\r\nimport FarmsPoolsRow from './components/FarmsPoolsRow'\r\nimport Footer from './components/Footer'\r\nimport CakeDataRow from './components/CakeDataRow'\r\nimport { WedgeTopLeft, InnerWedgeWrapper, OuterWedgeWrapper, WedgeTopRight } from './components/WedgeSvgs'\r\nimport UserBanner from './components/UserBanner'\r\n\r\nconst StyledHeroSection = styled(PageSection)`\r\n  padding-top: 16px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    padding-top: 48px;\r\n  }\r\n`\r\n\r\nconst UserBannerWrapper = styled(Container)`\r\n  z-index: 1;\r\n  position: absolute;\r\n  width: 100%;\r\n  top: 0px;\r\n  left: 50%;\r\n  transform: translate(-50%, 0);\r\n  padding-left: 0px;\r\n  padding-right: 0px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    padding-left: 24px;\r\n    padding-right: 24px;\r\n  }\r\n`\r\n\r\nconst Home: React.FC = () => {\r\n  const { theme } = useTheme()\r\n  const { account } = useWeb3React()\r\n  useFetchPublicPoolsData()\r\n\r\n  const HomeSectionContainerStyles = { margin: '0', width: '100%', maxWidth: '968px' }\r\n\r\n  return (\r\n    <>\r\n      {/* <StyledHeroSection\r\n        innerProps={{ style: { margin: '0', width: '100%' } }}\r\n        background={\r\n          theme.isDark\r\n            ? 'radial-gradient(103.12% 50% at 50% 50%, #21193A 0%, #191326 100%)'\r\n            : 'linear-gradient(139.73deg, #E6FDFF 0%, #F3EFFF 100%)'\r\n        }\r\n        index={2}\r\n        hasCurvedDivider={false}\r\n      >\r\n        {account && (\r\n          <UserBannerWrapper>\r\n            <UserBanner />\r\n          </UserBannerWrapper>\r\n        )}\r\n        <Hero />\r\n      </StyledHeroSection>\r\n      <PageSection\r\n        innerProps={{ style: { margin: '0', width: '100%' } }}\r\n        background={\r\n          theme.isDark\r\n            ? 'linear-gradient(180deg, #09070C 22%, #201335 100%)'\r\n            : 'linear-gradient(180deg, #FFFFFF 22%, #D7CAEC 100%)'\r\n        }\r\n        index={2}\r\n        hasCurvedDivider={false}\r\n      >\r\n        <MetricsSection />\r\n      </PageSection>\r\n      <PageSection\r\n        innerProps={{ style: HomeSectionContainerStyles }}\r\n        background={theme.colors.background}\r\n        index={2}\r\n        hasCurvedDivider={false}\r\n      >\r\n        <OuterWedgeWrapper>\r\n          <InnerWedgeWrapper top fill={theme.isDark ? '#201335' : '#D8CBED'}>\r\n            <WedgeTopLeft />\r\n          </InnerWedgeWrapper>\r\n        </OuterWedgeWrapper>\r\n        <SalesSection {...swapSectionData} />\r\n      </PageSection>\r\n      <PageSection\r\n        innerProps={{ style: HomeSectionContainerStyles }}\r\n        background={theme.colors.gradients.cardHeader}\r\n        index={2}\r\n        hasCurvedDivider={false}\r\n      >\r\n        <OuterWedgeWrapper>\r\n          <InnerWedgeWrapper width=\"150%\" top fill={theme.colors.background}>\r\n            <WedgeTopRight />\r\n          </InnerWedgeWrapper>\r\n        </OuterWedgeWrapper>\r\n        <SalesSection {...earnSectionData} />\r\n        <FarmsPoolsRow />\r\n      </PageSection> */}\r\n      {/* <PageSection\r\n        innerProps={{ style: HomeSectionContainerStyles }}\r\n        background={\r\n          theme.isDark\r\n            ? 'linear-gradient(180deg, #0B4576 0%, #091115 100%)'\r\n            : 'linear-gradient(180deg, #6FB6F1 0%, #EAF2F6 100%)'\r\n        }\r\n        index={2}\r\n        hasCurvedDivider={false}\r\n      >\r\n        <WinSection />\r\n      </PageSection> */}\r\n      <PageSection\r\n        innerProps={{ style: HomeSectionContainerStyles }}\r\n        background={theme.colors.background}\r\n        index={2}\r\n        hasCurvedDivider={false}\r\n      >\r\n        <SalesSection {...cakeSectionData} />\r\n        <CakeDataRow />\r\n      </PageSection>\r\n      {/* <PageSection\r\n        innerProps={{ style: HomeSectionContainerStyles }}\r\n        background=\"linear-gradient(180deg, #7645D9 0%, #5121B1 100%)\"\r\n        index={2}\r\n        hasCurvedDivider={false}\r\n      >\r\n        <Footer />\r\n      </PageSection> */}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Home\r\n","import React from 'react'\r\nimport styled, { css, DefaultTheme } from 'styled-components'\r\nimport { Box } from '@pancakeswap/uikit'\r\nimport { ClipFill } from '../types'\r\n\r\ninterface CurveProps {\r\n  clipFill?: ClipFill\r\n}\r\n\r\ninterface ContainerProps extends CurveProps {\r\n  clipPath: string\r\n}\r\n\r\nconst sharedStyles = (theme: DefaultTheme, clipPath: string, clipFill?: ClipFill) => css`\r\n  width: 100%;\r\n  height: 20px;\r\n  clip-path: url(${clipPath});\r\n\r\n  background: ${() => {\r\n    if (theme.isDark) {\r\n      return clipFill?.dark || clipFill?.light || theme.colors.background\r\n    }\r\n    return clipFill?.light || theme.colors.background\r\n  }};\r\n\r\n  & svg {\r\n    display: block;\r\n  }\r\n`\r\n\r\nconst ConcaveContainer = styled(Box)<ContainerProps>`\r\n  ${({ theme, clipPath, clipFill }) => sharedStyles(theme, clipPath, clipFill)}\r\n  transform: ${({ clipPath }) => (clipPath === '#bottomConcaveCurve' ? 'translate(0, -13px)' : 'translate(0, 1px)')};\r\n`\r\n\r\nconst ConvexContainer = styled(Box)<ContainerProps>`\r\n  ${({ theme, clipPath, clipFill }) => sharedStyles(theme, clipPath, clipFill)}\r\n  transform: ${({ clipPath }) => (clipPath === '#bottomConvexCurve' ? 'translate(0, -13px)' : 'translate(0, -1px)')};\r\n`\r\n\r\nexport const ConvexTop: React.FC<CurveProps> = ({ clipFill }) => (\r\n  <ConvexContainer clipFill={clipFill} clipPath=\"#topConvexCurve\">\r\n    <svg width=\"0\" height=\"0\">\r\n      <defs>\r\n        <clipPath id=\"topConvexCurve\" clipPathUnits=\"objectBoundingBox\">\r\n          <path d=\"M 0,1 L 0,0 L 1,0 L 1,1 C 0.75 0, .25 0, 0 1 Z\" />\r\n        </clipPath>\r\n      </defs>\r\n    </svg>\r\n  </ConvexContainer>\r\n)\r\n\r\nexport const ConvexBottom: React.FC<CurveProps> = ({ clipFill }) => (\r\n  <ConvexContainer clipFill={clipFill} clipPath=\"#bottomConvexCurve\">\r\n    <svg width=\"0\" height=\"0\">\r\n      <defs>\r\n        <clipPath id=\"bottomConvexCurve\" clipPathUnits=\"objectBoundingBox\">\r\n          <path d=\"M 0,0 L 0,1 L 1,1 L 1,0 C .75 1, .25 1, 0 0 Z\" />\r\n        </clipPath>\r\n      </defs>\r\n    </svg>\r\n  </ConvexContainer>\r\n)\r\n\r\nexport const ConcaveTop: React.FC<CurveProps> = ({ clipFill }) => (\r\n  <ConcaveContainer clipFill={clipFill} clipPath=\"#topConcaveCurve\">\r\n    <svg width=\"0\" height=\"0\">\r\n      <defs>\r\n        <clipPath id=\"topConcaveCurve\" clipPathUnits=\"objectBoundingBox\">\r\n          <path d=\"M 0,0 L 0,1 L 1,1 L 1,0 C .75 1, .25 1, 0 0 Z\" />\r\n        </clipPath>\r\n      </defs>\r\n    </svg>\r\n  </ConcaveContainer>\r\n)\r\n\r\nexport const ConcaveBottom: React.FC<CurveProps> = ({ clipFill }) => (\r\n  <ConcaveContainer clipFill={clipFill} clipPath=\"#bottomConcaveCurve\">\r\n    <svg width=\"0\" height=\"0\">\r\n      <defs>\r\n        <clipPath id=\"bottomConcaveCurve\" clipPathUnits=\"objectBoundingBox\">\r\n          <path d=\"M 0,1 L 0,0 L 1,0 L 1,1 C .75 0.1, .25 0.1, 0 1 Z\" />\r\n        </clipPath>\r\n      </defs>\r\n    </svg>\r\n  </ConcaveContainer>\r\n)\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { ConcaveTop, ConcaveBottom, ConvexTop, ConvexBottom } from './svg/CurvedSvg'\r\nimport { DividerFill, ClipFill } from './types'\r\n\r\ninterface CurvedDividerProps extends WrapperProps {\r\n  svgFill?: string\r\n  dividerComponent?: React.ReactNode\r\n  dividerPosition?: 'top' | 'bottom'\r\n  concave?: boolean\r\n  clipFill?: ClipFill\r\n}\r\ninterface WrapperProps {\r\n  index: number\r\n  dividerFill?: DividerFill\r\n}\r\n\r\nconst Wrapper = styled.div<WrapperProps>`\r\n  background: ${({ theme, dividerFill }) => {\r\n    if (theme.isDark) {\r\n      return dividerFill?.dark || dividerFill?.light || 'none'\r\n    }\r\n    return dividerFill?.light || dividerFill?.dark || 'none'\r\n  }};\r\n  z-index: ${({ index }) => index};\r\n  position: relative;\r\n  display: flex;\r\n  align-items: center;\r\n  width: 100%;\r\n`\r\n\r\nconst ComponentWrapper = styled.div<WrapperProps>`\r\n  z-index: ${({ index }) => index + 1};\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n`\r\n\r\nconst CurvedDivider: React.FC<CurvedDividerProps> = ({\r\n  index,\r\n  dividerPosition,\r\n  dividerComponent,\r\n  concave,\r\n  clipFill,\r\n  dividerFill,\r\n}) => {\r\n  const showConvexTop = dividerPosition === 'top' && !concave\r\n  const showConvexBottom = dividerPosition === 'bottom' && !concave\r\n  const showConcaveTop = dividerPosition === 'top' && concave\r\n  const showConcaveBottom = dividerPosition === 'bottom' && concave\r\n\r\n  const getConcaveDivider = () => {\r\n    return (\r\n      <>\r\n        {showConcaveTop && <ConcaveTop clipFill={clipFill} />}\r\n        {showConcaveBottom && <ConcaveBottom clipFill={clipFill} />}\r\n      </>\r\n    )\r\n  }\r\n\r\n  const getConvexDivider = () => {\r\n    return (\r\n      <>\r\n        {showConvexTop && <ConvexTop clipFill={clipFill} />}\r\n        {showConvexBottom && <ConvexBottom clipFill={clipFill} />}\r\n      </>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Wrapper index={index} dividerFill={dividerFill}>\r\n      {dividerComponent && <ComponentWrapper index={index}>{dividerComponent}</ComponentWrapper>}\r\n      {getConcaveDivider()}\r\n      {getConvexDivider()}\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default CurvedDivider\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { BoxProps, Box, Flex, FlexProps } from '@pancakeswap/uikit'\r\nimport Container from 'components/Layout/Container'\r\nimport CurvedDivider from './CurvedDivider'\r\nimport { ClipFill, DividerFill } from './types'\r\n\r\ninterface PageSectionProps extends BackgroundColorProps {\r\n  svgFill?: string\r\n  dividerComponent?: React.ReactNode\r\n  hasCurvedDivider?: boolean\r\n  dividerPosition?: 'top' | 'bottom'\r\n  concaveDivider?: boolean\r\n  containerProps?: BoxProps\r\n  innerProps?: BoxProps\r\n  clipFill?: ClipFill\r\n  dividerFill?: DividerFill\r\n}\r\n\r\ninterface BackgroundColorProps extends FlexProps {\r\n  index: number\r\n  background?: string\r\n  getPadding?: () => string\r\n}\r\n\r\nconst BackgroundColor = styled(Flex)<BackgroundColorProps>`\r\n  position: relative;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  z-index: ${({ index }) => index - 1};\r\n  background: ${({ background, theme }) => background || theme.colors.background};\r\n  padding: ${({ getPadding }) => getPadding()};\r\n`\r\n\r\nconst ChildrenWrapper = styled(Container)`\r\n  min-height: auto;\r\n  padding-top: 16px;\r\n  padding-bottom: 16px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    padding-top: 32px;\r\n    padding-bottom: 32px;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    padding-top: 48px;\r\n    padding-bottom: 48px;\r\n  }\r\n`\r\n\r\nconst PageSection: React.FC<PageSectionProps> = ({\r\n  children,\r\n  background,\r\n  svgFill,\r\n  index = 1,\r\n  dividerComponent,\r\n  dividerPosition = 'bottom',\r\n  hasCurvedDivider = true,\r\n  concaveDivider = false,\r\n  clipFill,\r\n  dividerFill,\r\n  containerProps,\r\n  innerProps,\r\n  ...props\r\n}) => {\r\n  const getPadding = () => {\r\n    // No curved divider\r\n    if (!hasCurvedDivider) {\r\n      return '48px 0'\r\n    }\r\n    // Bottom curved divider\r\n    // Less bottom padding, as the divider is present there\r\n    if (dividerPosition === 'bottom') {\r\n      return '48px 0 14px'\r\n    }\r\n    // Top curved divider\r\n    // Less top padding, as the divider is present there\r\n    if (dividerPosition === 'top') {\r\n      return '14px 0 48px'\r\n    }\r\n    return '48px 0'\r\n  }\r\n\r\n  return (\r\n    <Box {...containerProps}>\r\n      {hasCurvedDivider && dividerPosition === 'top' && (\r\n        <CurvedDivider\r\n          svgFill={svgFill}\r\n          index={index}\r\n          concave={concaveDivider}\r\n          dividerPosition={dividerPosition}\r\n          dividerComponent={dividerComponent}\r\n          clipFill={clipFill}\r\n          dividerFill={dividerFill}\r\n        />\r\n      )}\r\n      <BackgroundColor background={background} index={index} getPadding={getPadding} {...props}>\r\n        <ChildrenWrapper {...innerProps}>{children}</ChildrenWrapper>\r\n      </BackgroundColor>\r\n      {hasCurvedDivider && dividerPosition === 'bottom' && (\r\n        <CurvedDivider\r\n          svgFill={svgFill}\r\n          index={index}\r\n          concave={concaveDivider}\r\n          dividerPosition={dividerPosition}\r\n          dividerComponent={dividerComponent}\r\n          clipFill={clipFill}\r\n          dividerFill={dividerFill}\r\n        />\r\n      )}\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default PageSection\r\n"],"sourceRoot":""}
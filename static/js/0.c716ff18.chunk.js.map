{"version":3,"sources":["components/Layout/Row.tsx","components/Layout/Column.tsx","components/Logo/DoubleLogo.tsx","components/Logo/ListLogo.tsx","utils/getTokenLogoURL.ts","components/Logo/CurrencyLogo.tsx","components/Card/index.tsx","components/Loader/Dots.tsx","utils/currencyId.ts","hooks/useTotalSupply.ts","components/Logo/Logo.tsx","views/Page.tsx","components/App/AppHeader.tsx","components/App/AppBody.tsx","hooks/useHttpLocations.ts","hooks/ENS/useENSContentHash.ts","components/SearchModal/CommonBases.tsx","components/Loader/CircleLoader.tsx","components/SearchModal/ImportRow.tsx","components/SearchModal/CurrencyList.tsx","components/SearchModal/sorting.ts","components/SearchModal/CurrencySearch.tsx","components/SearchModal/ImportToken.tsx","components/SearchModal/types.ts","components/SearchModal/ManageLists.tsx","components/SearchModal/ManageTokens.tsx","components/SearchModal/Manage.tsx","components/SearchModal/ImportList.tsx","components/SearchModal/CurrencySearchModal.tsx"],"names":["Row","styled","Box","width","align","justify","padding","border","borderRadius","RowBetween","AutoRow","div","gap","RowFixed","Column","ColumnCenter","AutoColumn","Wrapper","margin","DoubleCurrencyLogo","currency0","currency1","size","CurrencyLogo","currency","toString","style","marginRight","StyledListLogo","Logo","ListLogo","logoURI","alt","srcs","useHttpLocations","getTokenLogoURL","address","StyledLogo","uriLocations","WrappedTokenInfo","undefined","useMemo","ETHER","Token","symbol","Card","theme","colors","background","LightCard","backgroundAlt","LightGreyCard","cardBorder","dropdown","Dots","span","currencyId","Error","useTotalSupply","token","contract","useTokenContract","totalSupply","useSingleCallResult","result","TokenAmount","BAD_SRCS","rest","useState","refresh","src","find","s","onError","i","StyledPage","mediaQueries","xs","sm","lg","Page","children","props","flexGrow","AppHeaderContainer","Flex","cardDivider","AppHeader","title","subtitle","helper","backTo","noConfig","useExpertModeManager","expertMode","alignItems","mr","as","Link","to","flexDirection","scale","mb","QuestionHelper","text","color","fontSize","show","GlobalSettings","BodyWrapper","AppBody","uri","ens","parseENSAddress","resolvedContentHash","ensName","ensNodeArgument","namehash","error","registrarContract","useENSRegistrarContract","resolverAddressResult","resolverAddress","resolverContract","useENSResolverContract","isZero","contenthash","loading","useENSContentHash","uriToHttp","contenthashToUri","BaseWrapper","disable","CommonBases","chainId","onSelect","selectedCurrency","t","useTranslation","ml","onClick","currencyEquals","SUGGESTED_BASES","map","selected","rotate","keyframes","StyledSVG","svg","stroke","primary","CircleLoader","viewBox","fill","xmlns","d","strokeWidth","strokeLinecap","strokeLinejoin","TokenSection","dim","CheckIcon","CheckmarkCircleIcon","success","NameOverflow","ImportRow","showImportView","setImportToken","useActiveWeb3React","inactiveTokenList","useCombinedInactiveList","list","isAdded","useIsUserAddedToken","isActive","useIsTokenActive","opacity","name","small","minWidth","currencyKey","StyledBalanceText","Text","FixedContentRow","Balance","balance","toExact","toSignificant","MenuItem","disabled","CurrencyRow","isSelected","otherSelected","account","key","selectedTokenList","useCombinedActiveList","isOnSelectedList","isTokenOnList","customAdded","useCurrencyBalance","className","bold","ellipsis","maxWidth","justifySelf","CurrencyList","height","currencies","onCurrencySelect","otherCurrency","fixedListRef","showETH","breakIndex","itemData","formatted","Currency","slice","length","inactiveTokens","useAllInactiveTokens","useCallback","data","index","Boolean","wrappedCurrency","showImport","Object","keys","includes","itemKey","ref","itemCount","itemSize","useTokenComparator","inverted","balances","useAllTokenBalances","comparator","tokenA","tokenB","balanceA","balanceB","balanceComp","greaterThan","equalTo","toLowerCase","getTokenComparator","swapSound","Audio","CurrencySearch","otherSelectedCurrency","showCommonBases","fixedList","useRef","searchQuery","setSearchQuery","debouncedQuery","useDebounce","invertSearchOrder","allTokens","useAllTokens","searchToken","useToken","searchTokenIsAdded","useAudioModeManager","audioPlay","trim","tokenComparator","filteredTokens","filterTokens","values","sortedTokens","sort","filteredSortedTokens","useSortedTokensByQuery","handleCurrencySelect","play","inputRef","useEffect","current","focus","handleInput","event","input","target","value","checksummedInput","isAddress","scrollTo","handleEnter","e","useFoundOnInactiveList","filteredInactiveTokens","id","placeholder","autoComplete","onChange","onKeyDown","concat","textAlign","ImportToken","CurrencyModalView","tokens","confirmed","setConfirmed","addToken","useAddUserToken","variant","substring","gridTemplateRows","gridGap","outline","startIcon","justifyContent","href","getBscScanLink","external","type","checked","userSelect","RowWrapper","active","tertiary","listUrlRowHTMLId","listUrl","replace","ListRow","memo","version","listsByUrl","useSelector","state","lists","byUrl","dispatch","useDispatch","pending","pendingUpdate","useIsListActive","handleAcceptListUpdate","acceptListUpdate","handleRemoveList","window","confirm","removeList","handleEnableList","enableList","handleDisableList","disableList","useTooltip","major","minor","patch","placement","trigger","targetRef","tooltip","tooltipVisible","flex","mt","textTransform","ListContainer","ManageLists","setModalView","setImportList","setListUrl","listUrlInput","setListUrlInput","useAllLists","activeListUrls","useActiveListUrls","activeCopy","setActiveCopy","fetchList","useFetchListCallback","validUrl","sortedLists","filter","UNSUPPORTED_LIST_URLS","u1","u2","l1","l2","tempList","setTempList","addError","setAddError","a","then","catch","fetchTempList","isImported","handleImport","importList","textOverflow","overflow","paddingTop","marginLeft","Footer","ManageTokens","userAddedTokens","useUserAddedTokens","removeToken","useRemoveUserAddedToken","handleRemoveAll","tokenList","isAddressValid","isWarning","importToken","StyledButtonMenu","ButtonMenu","Manage","showLists","setShowLists","activeIndex","onItemClick","prev","TextDot","ImportList","listURL","onImport","useTheme","adding","loadingRequestId","handleAddList","message","failure","StyledModalContainer","ModalContainer","StyledModalBody","ModalBody","CurrencySearchModal","onDismiss","search","modalView","prevView","usePrevious","config","onBack","manage"],"mappings":"sQAGMA,EAAMC,YAAOC,IAAPD,CAAH,kLAQE,gBAAGE,EAAH,EAAGA,MAAH,cAAeA,QAAf,IAAeA,IAAS,UAGlB,gBAAGC,EAAH,EAAGA,MAAH,cAAeA,QAAf,IAAeA,IAAS,YACpB,gBAAGC,EAAH,EAAGA,QAAH,cAAiBA,QAAjB,IAAiBA,IAAW,gBACpC,qBAAGC,WACJ,qBAAGC,UACI,qBAAGC,gBAGTC,EAAaR,YAAOD,EAAPC,CAAH,+DASVS,GALUT,IAAOU,IAAV,wEAKGV,YAAOD,EAAPC,CAAH,wIAER,gBAAGW,EAAH,EAAGA,IAAH,OAAaA,GAAG,WAAQA,MACf,gBAAGP,EAAH,EAAGA,QAAH,OAAiBA,GAAWA,KAGnC,qBAAGO,QAIJC,EAAWZ,YAAOD,EAAPC,CAAH,mEAET,gBAAGW,EAAH,EAAGA,IAAH,OAAaA,GAAG,WAAQA,MAGrBZ,O,8HC3CTc,EAASb,IAAOU,IAAV,yGAKCI,EAAed,YAAOa,EAAPb,CAAH,oEAKZe,EAAaf,IAAOU,IAAV,oHAML,gBAAGC,EAAH,EAAGA,IAAH,OAAsB,OAARA,EAAgB,MAAmB,OAARA,GAAgB,SAAoB,OAARA,GAAgB,QAAWA,KAC/F,gBAAGP,EAAH,EAAGA,QAAH,OAAiBA,GAAWA,KAGhCS,O,qLCjBTG,EAAUhB,IAAOU,IAAV,4FAGK,qBAAGO,QAAuB,SAU7B,SAASC,EAAT,GAKc,IAJ3BC,EAI0B,EAJ1BA,UACAC,EAG0B,EAH1BA,UAG0B,IAF1BC,YAE0B,MAFnB,GAEmB,MAD1BJ,cAC0B,SAC1B,OACE,eAACD,EAAD,CAASC,OAAQA,EAAjB,UACGE,GAAa,cAACG,EAAA,EAAD,CAAcC,SAAUJ,EAAWE,KAAI,UAAKA,EAAKG,WAAV,MAA0BC,MAAO,CAAEC,YAAa,SACpGN,GAAa,cAACE,EAAA,EAAD,CAAcC,SAAUH,EAAWC,KAAI,UAAKA,EAAKG,WAAV,W,wBCtBrDG,EAAiB3B,YAAO4B,IAAP5B,CAAH,2DACT,qBAAGqB,QACF,qBAAGA,QAGA,SAASQ,EAAT,GAUX,IATFC,EASC,EATDA,QACAL,EAQC,EARDA,MAQC,IAPDJ,YAOC,MAPM,OAON,EANDU,EAMC,EANDA,IAOMC,EAAiBC,YAAiBH,GAExC,OAAO,cAACH,EAAD,CAAgBI,IAAKA,EAAKV,KAAMA,EAAMW,KAAMA,EAAMP,MAAOA,M,wICpBnDS,EAHS,SAACC,GAAD,gFAC6CA,EAD7C,c,gBCSlBC,EAAapC,YAAO4B,IAAP5B,CAAH,2DACL,qBAAGqB,QACF,qBAAGA,QAGA,SAASC,EAAT,GAQX,IAAD,EAPDC,EAOC,EAPDA,SAOC,IANDF,YAMC,MANM,OAMN,EALDI,EAKC,EALDA,MAMMY,EAAeJ,YAAiBV,aAAoBe,IAAmBf,EAASO,aAAUS,GAE1FP,EAAiBQ,mBAAQ,WAC7B,OAAIjB,IAAakB,IAAc,GAE3BlB,aAAoBmB,IAClBnB,aAAoBe,IAChB,GAAN,mBAAWD,GAAX,CAAyBH,EAAgBX,EAASY,WAE7C,CAACD,EAAgBX,EAASY,UAE5B,KACN,CAACZ,EAAUc,IAEd,OAAId,IAAakB,IACR,cAAC,IAAD,CAAavC,MAAOmB,EAAMI,MAAOA,IAGnC,cAACW,EAAD,CAAYf,KAAMA,EAAMW,KAAMA,EAAMD,IAAG,2BAAKR,QAAL,IAAKA,OAAL,EAAKA,EAAUoB,cAAf,QAAyB,QAAzB,SAAyClB,MAAOA,M,uICtC1FmB,EAAO5C,YAAOC,IAAPD,CAAH,0KAMC,gBAAGE,EAAH,EAAGA,MAAH,cAAeA,QAAf,IAAeA,IAAS,UAGtB,qBAAGG,WACJ,qBAAGC,UACI,qBAAGC,gBACA,qBAAGsC,MAAkBC,OAAOC,cAEnCH,MAER,IAAMI,EAAYhD,YAAO4C,EAAP5C,CAAH,sDACA,qBAAG6C,MAAkBC,OAAOG,iBAGrCC,EAAgBlD,YAAO4C,EAAP5C,CAAH,gFACJ,qBAAG6C,MAAkBC,OAAOK,cAC5B,qBAAGN,MAAkBC,OAAOC,cAG1B/C,YAAO4C,EAAP5C,CAAH,sDACC,qBAAG6C,MAAkBC,OAAOM,a,+CC3B5CC,E,KAAOrD,EAAOsD,KAAV,oUAqBKD,O,iCCvBf,8CAEO,SAASE,EAAWhC,GACzB,GAAIA,IAAakB,IAAO,MAAO,MAC/B,GAAIlB,aAAoBmB,IAAO,OAAOnB,EAASY,QAC/C,MAAM,IAAIqB,MAAM,sB,iCCJlB,4BAceC,IARf,SAAwBC,GAAyC,IAAD,IACxDC,EAAWC,YAAgB,OAACF,QAAD,IAACA,OAAD,EAACA,EAAOvB,SAAS,GAE5C0B,EAAsB,UAAGC,YAAoBH,EAAU,sBAAjC,iBAAG,EAA8CI,cAAjD,aAAG,EAAuD,GAEtF,OAAOL,GAASG,EAAc,IAAIG,IAAYN,EAAOG,EAAYrC,iBAAce,I,kGCT3E0B,EAA6C,GA+BpCrC,IAtBmB,SAAC,GAA4B,IAA1BI,EAAyB,EAAzBA,KAAMD,EAAmB,EAAnBA,IAAQmC,EAAW,iBAC5D,EAAoBC,mBAAiB,GAA5BC,EAAT,oBAEMC,EAA0BrC,EAAKsC,MAAK,SAACC,GAAD,OAAQN,EAASM,MAE3D,OAAIF,EAEA,+CACMH,GADN,IAEEnC,IAAKA,EACLsC,IAAKA,EACLG,QAAS,WACHH,IAAKJ,EAASI,IAAO,GACzBD,GAAQ,SAACK,GAAD,OAAOA,EAAI,SAMpB,cAAC,IAAD,eAAcP,M,yGC1BjBQ,EAAa1E,IAAOU,IAAV,qYAQA,qBAAGmC,MAAkBC,OAAOC,cAExC,qBAAGF,MAAkB8B,aAAaC,MAIlC,qBAAG/B,MAAkB8B,aAAaE,MAKlC,qBAAGhC,MAAkB8B,aAAaG,MAgBvBC,IAV8C,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,SAAaC,EAAY,iBACvF,OACE,eAACP,EAAD,2BAAgBO,GAAhB,cAEGD,EACD,cAAC,IAAD,CAAME,SAAU,U,4LClBhBC,EAAqBnF,YAAOoF,IAAPpF,CAAH,8MAOQ,qBAAG6C,MAAkBC,OAAOuC,eAsC7CC,EAnCoB,SAAC,GAA2D,IAAzDC,EAAwD,EAAxDA,MAAOC,EAAiD,EAAjDA,SAAUC,EAAuC,EAAvCA,OAAQC,EAA+B,EAA/BA,OAA+B,IAAvBC,gBAAuB,SAC5F,EAAqBC,cAAdC,EAAP,oBAEA,OACE,eAACV,EAAD,WACE,eAAC,IAAD,CAAMW,WAAW,SAASC,GAAIJ,EAAW,EAAI,OAA7C,UACGD,GACC,cAAC,IAAD,CAAYM,GAAIC,IAAMC,GAAIR,EAA1B,SACE,cAAC,IAAD,CAAexF,MAAM,WAGzB,eAAC,IAAD,CAAMiG,cAAc,SAApB,UACE,cAAC,IAAD,CAASC,MAAM,KAAKC,GAAG,MAAvB,SACGd,IAEH,eAAC,IAAD,CAAMO,WAAW,SAAjB,UACGL,GAAU,cAACa,EAAA,EAAD,CAAgBC,KAAMd,EAAQM,GAAG,QAC5C,cAAC,KAAD,CAAMS,MAAM,aAAaC,SAAS,OAAlC,SACGjB,cAKPG,GACA,cAAC,IAAD,CAAMG,WAAW,SAAjB,SACE,cAAC,KAAD,CAAiBY,KAAMb,EAAvB,SACE,cAACc,EAAA,EAAD,YCjDCC,EAAc5G,YAAO4C,IAAP5C,CAAH,6IAYT,SAAS6G,EAAT,GAA+D,IAA5C7B,EAA2C,EAA3CA,SAChC,OAAO,cAAC4B,EAAD,UAAc5B,M,0ICXR,SAAS/C,EAAiB6E,GACvC,IAAMC,EAAMvE,mBAAQ,kBAAOsE,EAAME,YAAgBF,QAAOvE,IAAY,CAACuE,IAC/DG,ECCO,SAA2BC,GAA4E,IAAD,MAC7GC,EAAkB3E,mBAAQ,WAC9B,IAAK0E,EAAS,MAAO,MAAC3E,GACtB,IACE,OAAO2E,EAAU,CAACE,mBAASF,IAAY,MAAC3E,GACxC,MAAO8E,GACP,MAAO,MAAC9E,MAET,CAAC2E,IACEI,EAAoBC,aAAwB,GAC5CC,EAAwB1D,YAAoBwD,EAAmB,WAAYH,GAC3EM,EAAe,UAAGD,EAAsBzD,cAAzB,aAAG,EAA+B,GACjD2D,EAAmBC,YACvBF,GAAmBG,YAAOH,QAAmBlF,EAAYkF,GACzD,GAEII,EAAc/D,YAAoB4D,EAAkB,cAAeP,GAEzE,MAAO,CACLU,YAAW,oBAAEA,EAAY9D,cAAd,aAAE,EAAqB,UAAvB,QAA6B,KACxC+D,QAASN,EAAsBM,SAAWD,EAAYC,SDrB5BC,CAAiB,OAAChB,QAAD,IAACA,OAAD,EAACA,EAAKG,SACnD,OAAO1E,mBAAQ,WACb,OAAIuE,EACKE,EAAoBY,YAAcG,YAAUC,YAAiBhB,EAAoBY,cAAgB,GAEnGf,EAAMkB,YAAUlB,GAAO,KAC7B,CAACC,EAAKE,EAAoBY,YAAaf,M,6OEFtCoB,EAAclI,IAAOU,IAAV,uPACK,gBAAGmC,EAAH,EAAGA,MAAH,SAAUsF,QAAyB,cAAgBtF,EAAMC,OAAOM,YAOxE,qBAAG+E,SAA0B,aACnB,gBAAGtF,EAAH,EAAGA,MAAH,SAAUsF,SAA0BtF,EAAMC,OAAOC,cAGnD,gBAAGF,EAAH,EAAGA,MAAH,SAAUsF,SAAyBtF,EAAMC,OAAOM,YACzD,qBAAG+E,SAAyB,SAG1B,SAASC,EAAT,GAQX,IAPFC,EAOC,EAPDA,QACAC,EAMC,EANDA,SACAC,EAKC,EALDA,iBAMQC,EAAMC,cAAND,EACR,OACE,eAAC,IAAD,CAAY7H,IAAI,KAAhB,UACE,eAAC,IAAD,WACE,cAAC,KAAD,CAAM8F,SAAS,OAAf,SAAuB+B,EAAE,kBACzB,cAAClC,EAAA,EAAD,CAAgBC,KAAMiC,EAAE,uDAAwDE,GAAG,WAErF,eAAC,IAAD,CAAS/H,IAAI,OAAb,UACE,eAACuH,EAAD,CACES,QAAS,WACFJ,GAAqBK,YAAeL,EAAkB9F,MACzD6F,EAAS7F,MAGb0F,QAASI,IAAqB9F,IANhC,UAQE,cAAC,IAAD,CAAclB,SAAUkB,IAAOhB,MAAO,CAAEC,YAAa,KACrD,cAAC,KAAD,sBAEA2G,EAAUQ,IAAgBR,GAAW,IAAIS,KAAI,SAACpF,GAC9C,IAAMqF,EAAWR,aAA4B7F,KAAS6F,EAAiBpG,UAAYuB,EAAMvB,QACzF,OACE,eAAC+F,EAAD,CAAaS,QAAS,kBAAOI,GAAYT,EAAS5E,IAAQyE,QAASY,EAAnE,UACE,cAAC,IAAD,CAAcxH,SAAUmC,EAAOjC,MAAO,CAAEC,YAAa,KACrD,cAAC,KAAD,UAAOgC,EAAMf,WAFmEe,EAAMvB,kB,iGCxD9F6G,EAASC,YAAH,sHASNC,EAAYlJ,IAAOmJ,IAAV,iIACGH,GACN,qBAAG3H,QACJ,qBAAGA,QAEA,gBAAG+H,EAAH,EAAGA,OAAQvG,EAAX,EAAWA,MAAX,cAAuBuG,QAAvB,IAAuBA,IAAUvG,EAAMC,OAAOuG,WAQ7C,SAASC,EAAT,GAQX,IAAD,IAPDjI,YAOC,MAPM,OAON,EAND+H,EAMC,EANDA,OACGlF,EAKF,iBACD,OACE,cAACgF,EAAD,yBAAWK,QAAQ,YAAYC,KAAK,OAAOC,MAAM,6BAA6BpI,KAAMA,EAAM+H,OAAQA,GAAYlF,GAA9G,aACE,sBACEwF,EAAE,6HACFC,YAAY,MACZC,cAAc,QACdC,eAAe,a,yBC3BjBC,EAAe9J,IAAOU,IAAV,0MAQL,qBAAGqJ,IAAiB,MAAQ,OAGnCC,EAAYhK,YAAOiK,IAAPjK,CAAH,mGAIH,qBAAG6C,MAAkBC,OAAOoH,WAGlCC,EAAenK,IAAOU,IAAV,8IAQH,SAAS0J,EAAT,GAYX,IAAD,IAXD1G,EAWC,EAXDA,MACAjC,EAUC,EAVDA,MACAsI,EASC,EATDA,IACAM,EAQC,EARDA,eACAC,EAOC,EAPDA,eASQjC,EAAYkC,cAAZlC,QAEAG,EAAMC,cAAND,EAGFgC,EAAoBC,cACpBC,EAAOrC,IAAO,OAAImC,QAAJ,IAAIA,GAAJ,UAAIA,EAAoBnC,UAAxB,iBAAI,EAA+B3E,EAAMvB,gBAAzC,aAAI,EAA+CuI,MAGjEC,EAAUC,YAAoBlH,GAC9BmH,EAAWC,YAAiBpH,GAElC,OACE,eAACoG,EAAD,CAAcrI,MAAOA,EAArB,UACE,cAACH,EAAA,EAAD,CAAcC,SAAUmC,EAAOrC,KAAK,OAAOI,MAAO,CAAEsJ,QAAShB,EAAM,MAAQ,OAC3E,eAAC,IAAD,CAAYpJ,IAAI,MAAMc,MAAO,CAAEsJ,QAAShB,EAAM,MAAQ,KAAtD,UACE,eAAC,IAAD,WACE,cAAC,KAAD,UAAOrG,EAAMf,SACb,cAAC,KAAD,CAAM6D,MAAM,eAAekC,GAAG,MAA9B,SACE,cAACyB,EAAD,CAAc5E,MAAO7B,EAAMsH,KAA3B,SAAkCtH,EAAMsH,YAG3CN,GAAQA,EAAK5I,SACZ,eAAC,IAAD,WACE,eAAC,KAAD,CAAMmJ,OAAK,EAAClF,GAAG,MAAMS,MAAM,aAA3B,UACGgC,EAAE,OADL,IACckC,EAAKM,QAEnB,cAAC,IAAD,CAAUlJ,QAAS4I,EAAK5I,QAAST,KAAK,eAI1CwJ,GAAaF,EAab,eAAC,IAAD,CAAUlJ,MAAO,CAAEyJ,SAAU,eAA7B,UACE,cAAClB,EAAD,IACA,cAAC,KAAD,CAAMxD,MAAM,UAAZ,uBAdF,cAAC,IAAD,CACEtG,MAAM,cACNyI,QAAS,WACH2B,GACFA,EAAe5G,GAEjB2G,KANJ,SASG7B,EAAE,eC1Eb,SAAS2C,EAAY5J,GACnB,OAAOA,aAAoBmB,IAAQnB,EAASY,QAAUZ,IAAakB,IAAQ,QAAU,GAGvF,IAAM2I,EAAoBpL,YAAOqL,KAAPrL,CAAH,yHAOjBsL,EAAkBtL,IAAOU,IAAV,gIAQrB,SAAS6K,GAAT,GAA4D,IAAzCC,EAAwC,EAAxCA,QACjB,OAAO,cAACJ,EAAD,CAAmB7F,MAAOiG,EAAQC,UAAlC,SAA8CD,EAAQE,cAAc,KAG7E,IAAMC,GAAW3L,YAAOQ,IAAPR,CAAH,+QAMF,qBAAG4L,UAA4B,aACvB,qBAAGA,UAA2B,UAE1B,gBAAG/I,EAAH,EAAGA,MAAH,SAAU+I,UAA4B/I,EAAMC,OAAOC,cAE9D,gBAAG6I,EAAH,EAAGA,SAAU7C,EAAb,EAAaA,SAAb,OAA6B6C,GAAY7C,EAAW,GAAM,KAGvE,SAAS8C,GAAT,GAYI,IAXFtK,EAWC,EAXDA,SACA+G,EAUC,EAVDA,SACAwD,EASC,EATDA,WACAC,EAQC,EARDA,cACAtK,EAOC,EAPDA,MAQQuK,EAAYzB,cAAZyB,QACFC,EAAMd,EAAY5J,GAClB2K,EAAoBC,cACpBC,EAAmBC,YAAcH,EAAmB3K,GACpD+K,EAAc1B,YAAoBrJ,GAClCiK,EAAUe,YAAkB,OAACP,QAAD,IAACA,SAAWzJ,EAAWhB,GAGzD,OACE,eAACoK,GAAD,CACElK,MAAOA,EACP+K,UAAS,qBAAgBP,GACzBtD,QAAS,kBAAOmD,EAAa,KAAOxD,KACpCsD,SAAUE,EACV/C,SAAUgD,EALZ,UAOE,cAAC,IAAD,CAAcxK,SAAUA,EAAUF,KAAK,SACvC,eAACR,EAAA,EAAD,WACE,cAAC,KAAD,CAAM4L,MAAI,EAAV,SAAYlL,EAASoB,SACrB,eAAC,KAAD,CAAM6D,MAAM,aAAayE,OAAK,EAACyB,UAAQ,EAACC,SAAS,QAAjD,WACIP,GAAoBE,GAAe,uBADvC,IAC2D/K,EAASyJ,WAGtE,cAAC,IAAD,CAAUvJ,MAAO,CAAEmL,YAAa,YAAhC,SACGpB,EAAU,cAACD,GAAD,CAASC,QAASA,IAAcQ,EAAU,cAAC1C,EAAD,IAAmB,UAMjE,SAASuD,GAAT,GAsBX,IArBFC,EAqBC,EArBDA,OACAC,EAoBC,EApBDA,WACAxE,EAmBC,EAnBDA,iBACAyE,EAkBC,EAlBDA,iBACAC,EAiBC,EAjBDA,cACAC,EAgBC,EAhBDA,aACAC,EAeC,EAfDA,QACA9C,EAcC,EAdDA,eACAC,EAaC,EAbDA,eACA8C,EAYC,EAZDA,WAaMC,EAAqC7K,mBAAQ,WACjD,IAAI8K,EAAsCH,EAAO,CAAII,IAAS9K,OAAb,mBAAuBsK,IAAcA,EAItF,YAHmBxK,IAAf6K,IACFE,EAAS,sBAAOA,EAAUE,MAAM,EAAGJ,IAA1B,MAAuC7K,GAAvC,YAAqD+K,EAAUE,MAAMJ,EAAYE,EAAUG,WAE/FH,IACN,CAACF,EAAYL,EAAYI,IAEpB9E,EAAYkC,cAAZlC,QAEAG,EAAMC,cAAND,EAEFkF,EAEFC,cAEE5N,EAAM6N,uBACV,YAA6B,IAA1BC,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,MAAOrM,EAAY,EAAZA,MACRF,EAAqBsM,EAAKC,GAC1BhC,EAAaiC,QAAQxF,GAAoBK,YAAeL,EAAkBhH,IAC1EwK,EAAgBgC,QAAQd,GAAiBrE,YAAeqE,EAAe1L,IAGvEmC,EAAQsK,YAAgBzM,EAAU8G,GAElC4F,EAAaP,GAAkBhK,GAASwK,OAAOC,KAAKT,GAAgBU,SAAS1K,EAAMvB,SAEzF,OAAI2L,IAAUV,GAAeS,EAkBzBI,GAAcvK,EAEd,cAAC0G,EAAD,CAAW3I,MAAOA,EAAOiC,MAAOA,EAAO2G,eAAgBA,EAAgBC,eAAgBA,EAAgBP,KAAG,IAI5G,cAAC8B,GAAD,CACEpK,MAAOA,EACPF,SAAUA,EACVuK,WAAYA,EACZxD,SAlCiB,kBAAM0E,EAAiBzL,IAmCxCwK,cAAeA,IA3Bf,cAACT,EAAD,CAAiB7J,MAAOA,EAAxB,SACE,cAAC,IAAD,CAAepB,QAAQ,WAAWE,aAAa,MAA/C,SACE,eAAC,IAAD,WACE,cAAC,KAAD,CAAM0K,OAAK,EAAX,SAAazC,EAAE,gDACf,cAAClC,EAAA,EAAD,CACEC,KAAMiC,EACJ,sGAEFE,GAAG,iBAuBjB,CACEL,EACAqF,EACAV,EACAC,EACA1E,EACA+B,EACAD,EACA+C,EACA5E,IAIE6F,EAAUT,uBAAY,SAACE,EAAeD,GAAhB,OAA8B1C,EAAY0C,EAAKC,MAAS,IAEpF,OACE,cAAC,IAAD,CACEhB,OAAQA,EACRwB,IAAKpB,EACLhN,MAAM,OACNmN,SAAUA,EACVkB,UAAWlB,EAASI,OACpBe,SAAU,GACVH,QAASA,EAPX,SASGtO,I,cC7JQ0O,OAXf,SAA4BC,GAC1B,IAAMC,EAAWC,cACXC,EAAarM,mBAAQ,kBAxB7B,SAA4BmM,GAG1B,OAAO,SAAoBG,EAAeC,GAKxC,IArBuBC,EAAwBC,EAwBzCC,GAxBiBF,EAqBNL,EAASG,EAAO3M,SArBc8M,EAsB9BN,EAASI,EAAO5M,SArB/B6M,GAAYC,EACPD,EAASG,YAAYF,IAAa,EAAID,EAASI,QAAQH,GAAY,EAAI,EAE5ED,GAAYA,EAASG,YAAY,MAC3B,EAENF,GAAYA,EAASE,YAAY,KAC5B,EAEF,GAeL,OAAoB,IAAhBD,EAA0BA,EAE1BJ,EAAOnM,QAAUoM,EAAOpM,OAEnBmM,EAAOnM,OAAO0M,cAAgBN,EAAOpM,OAAO0M,eAAiB,EAAI,EAEnEP,EAAOnM,QAAcoM,EAAOpM,QAAX,EAAyB,GAMlB2M,CAAkB,OAACX,QAAD,IAACA,IAAY,MAAK,CAACA,IACtE,OAAOnM,mBAAQ,WACb,OAAIkM,EACK,SAACI,EAAeC,GAAhB,OAAgE,EAA9BF,EAAWC,EAAQC,IAEvDF,IACN,CAACH,EAAUG,KCpBVU,GAAY,IAAIC,MAAM,YAkJbC,OAhJf,YAOyB,IANvBlH,EAMsB,EANtBA,iBACAyE,EAKsB,EALtBA,iBACA0C,EAIsB,EAJtBA,sBACAC,EAGsB,EAHtBA,gBACAtF,EAEsB,EAFtBA,eACAC,EACsB,EADtBA,eAEQ9B,EAAMC,cAAND,EACAH,EAAYkC,cAAZlC,QAGFuH,EAAYC,mBAElB,EAAsC1L,mBAAiB,IAAvD,mBAAO2L,EAAP,KAAoBC,EAApB,KACMC,EAAiBC,YAAYH,EAAa,KAEhD,EAA4B3L,oBAAkB,GAAvC+L,EAAP,oBAEMC,EAAYC,cAGZC,EAAcC,YAASN,GACvBO,EAAqB3F,YAAoByF,GAE/C,EAAoBG,cAAbC,EAAP,oBAEMtD,EAAmB3K,mBAAQ,WAC/B,IAAM+B,EAAIyL,EAAeX,cAAcqB,OACvC,MAAa,KAANnM,GAAkB,MAANA,GAAmB,OAANA,GAAoB,QAANA,IAC7C,CAACyL,IAEEW,EAAkBlC,GAAmByB,GAErCU,EAA0BpO,mBAAQ,WACtC,OAAOqO,aAAa3C,OAAO4C,OAAOX,GAAYH,KAC7C,CAACG,EAAWH,IAETe,EAAwBvO,mBAAQ,WACpC,OAAOoO,EAAeI,KAAKL,KAC1B,CAACC,EAAgBD,IAEdM,EAAuBC,aAAuBH,EAAcf,GAE5DmB,EAAuBvD,uBAC3B,SAACrM,GACCyL,EAAiBzL,GACbkP,GACFlB,GAAU6B,SAGd,CAACX,EAAWzD,IAIRqE,EAAWxB,mBAEjByB,qBAAU,WACRD,EAASE,QAAQC,UAChB,IAEH,IAAMC,EAAc7D,uBAAY,SAAC8D,GAAW,IAAD,EACnCC,EAAQD,EAAME,OAAOC,MACrBC,EAAmBC,YAAUJ,GACnC5B,EAAe+B,GAAoBH,GACnC,UAAA/B,EAAU2B,eAAV,SAAmBS,SAAS,KAC3B,IAEGC,EAAcrE,uBAClB,SAACsE,GACC,GAAc,UAAVA,EAAEjG,IAEJ,GAAU,QADA+D,EAAeX,cAAcqB,OAErCS,EAAqB1O,UAChB,GAAIwO,EAAqBxD,OAAS,EAAG,CAAC,IAAD,GAExC,UAAAwD,EAAqB,GAAGtO,cAAxB,eAAgC0M,iBAAkBW,EAAeU,OAAOrB,eACxC,IAAhC4B,EAAqBxD,QAErB0D,EAAqBF,EAAqB,OAKlD,CAACA,EAAsBE,EAAsBnB,IAIzCtC,EAAiByE,YAAuBnC,GACxCoC,EAAkClB,aAAuBxD,EAAgBsC,GAE/E,OACE,mCACE,gCACE,eAAC,IAAD,CAAYrP,IAAI,OAAhB,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CACE0R,GAAG,qBACHC,YAAa9J,EAAE,gCACfpC,MAAM,KACNmM,aAAa,MACbV,MAAO/B,EACPxB,IAAK+C,EACLmB,SAAUf,EACVgB,UAAWR,MAGdtC,GACC,cAACvH,EAAD,CAAaC,QAASA,EAASC,SAAU6I,EAAsB5I,iBAAkBA,OAGpF8H,IAAgBE,EACf,cAAC1P,EAAA,EAAD,CAAQY,MAAO,CAAEpB,QAAS,SAAUyM,OAAQ,QAA5C,SACE,cAAC1C,EAAD,CAAW1G,MAAO2M,EAAahG,eAAgBA,EAAgBC,eAAgBA,OAE3D,OAApB2G,QAAoB,IAApBA,OAAA,EAAAA,EAAsBxD,QAAS,IAA2B,OAAtB2E,QAAsB,IAAtBA,OAAA,EAAAA,EAAwB3E,QAAS,EACvE,cAAC,IAAD,CAAKxM,OAAO,aAAZ,SACE,cAAC4L,GAAD,CACEC,OAAQ,IACRK,QAASA,EACTJ,WACEqF,EAAyBnB,EAAqByB,OAAON,GAA0BnB,EAEjF7D,WAAYM,GAAkBuD,EAAuBA,EAAqBxD,YAASlL,EACnFyK,iBAAkBmE,EAClBlE,cAAeyC,EACfnH,iBAAkBA,EAClB2E,aAAc0C,EACdvF,eAAgBA,EAChBC,eAAgBA,MAIpB,cAACzJ,EAAA,EAAD,CAAQY,MAAO,CAAEpB,QAAS,OAAQyM,OAAQ,QAA1C,SACE,cAAC,KAAD,CAAMtG,MAAM,aAAamM,UAAU,SAAStM,GAAG,OAA/C,SACGmC,EAAE,+BCxDFoK,IC7GHC,GD6GGD,GA7Ff,YAAqE,IAA9CE,EAA6C,EAA7CA,OAAQ3B,EAAqC,EAArCA,qBACrB9I,EAAYkC,cAAZlC,QAEAG,EAAMC,cAAND,EAER,EAAkCrE,oBAAS,GAA3C,mBAAO4O,EAAP,KAAkBC,EAAlB,KAEMC,EAAWC,cAGX1I,EAAoBC,cAE1B,OACE,eAAC,IAAD,CAAY9J,IAAI,KAAhB,UACE,cAAC,KAAD,CAASwS,QAAQ,UAAjB,SACE,eAAC,KAAD,WACG3K,EACC,mLAEF,uBACA,uBACCA,EAAE,+EAINsK,EAAOhK,KAAI,SAACpF,GAAW,IAAD,IACfgH,EAAOrC,IAAO,OAAImC,QAAJ,IAAIA,GAAJ,UAAIA,EAAoBnC,UAAxB,iBAAI,EAA+B3E,EAAMvB,gBAAzC,aAAI,EAA+CuI,MACjEvI,EAAUuB,EAAMvB,QAAN,UACTuB,EAAMvB,QAAQiR,UAAU,EAAG,GADlB,cAC0B1P,EAAMvB,QAAQiR,UAAU1P,EAAMvB,QAAQsL,OAAS,IACrF,KACJ,OACE,eAAC,IAAD,CAA0B4F,iBAAiB,cAAcC,QAAQ,MAAjE,eACY/Q,IAATmI,EACC,eAAC,KAAD,CACEyI,QAAQ,UACRI,SAAO,EACPnN,MAAM,KACNoN,UAAW9I,EAAK5I,SAAW,cAAC,IAAD,CAAUA,QAAS4I,EAAK5I,QAAST,KAAK,SAJnE,UAMGmH,EAAE,OANL,IAMckC,EAAKM,QAGnB,cAAC,KAAD,CAAKmI,QAAQ,UAAUI,SAAO,EAACnN,MAAM,KAAKoN,UAAW,cAAC,IAAD,CAAWhN,MAAM,YAAtE,SACGgC,EAAE,oBAGP,eAAC,IAAD,CAAM1C,WAAW,SAAjB,UACE,cAAC,KAAD,CAAMC,GAAG,MAAT,SAAgBrC,EAAMsH,OACtB,eAAC,KAAD,eAAQtH,EAAMf,OAAd,UAED0F,GACC,eAAC,IAAD,CAAMoL,eAAe,gBAAgBvT,MAAM,OAA3C,UACE,cAAC,KAAD,CAAM6F,GAAG,MAAT,SAAgB5D,IAChB,eAAC,IAAD,CAAMuR,KAAMC,YAAejQ,EAAMvB,QAAS,UAAWkG,GAAUuL,UAAQ,EAAvE,cACIpL,EAAE,mBADN,YAtBK9E,EAAMvB,YA+BrB,eAAC,IAAD,CAAMsR,eAAe,gBAAgB3N,WAAW,SAAhD,UACE,eAAC,IAAD,CAAMA,WAAW,SAAS6C,QAAS,kBAAMqK,GAAcD,IAAvD,UACE,cAAC,IAAD,CACE3M,MAAM,KACN4E,KAAK,YACL6I,KAAK,WACLC,QAASf,EACTP,SAAU,kBAAMQ,GAAcD,MAEhC,cAAC,KAAD,CAAMrK,GAAG,MAAMjH,MAAO,CAAEsS,WAAY,QAApC,SACGvL,EAAE,qBAGP,cAAC,IAAD,CACE2K,QAAQ,SACRvH,UAAWmH,EACXpK,QAAS,WACPmK,EAAOhK,KAAI,SAACpF,GAAD,OAAWuP,EAASvP,MAC3ByN,GACFA,EAAqB2B,EAAO,KAGhCtG,UAAU,wBATZ,SAWGhE,EAAE,mB,8FCtGDqK,O,mBAAAA,I,mBAAAA,I,6BAAAA,I,4BAAAA,Q,KAOGA,I,SCkBf,IAAM7R,GAAUhB,YAAOa,IAAPb,CAAH,+DAKPgU,GAAahU,YAAOD,IAAPC,CAAH,4LACM,gBAAGiU,EAAH,EAAGA,OAAQpR,EAAX,EAAWA,MAAX,OAAwBoR,EAAM,UAAMpR,EAAMC,OAAOoH,QAAnB,MAAiC,iBAEnE,gBAAG+J,EAAH,EAAGA,OAAQpR,EAAX,EAAWA,MAAX,OAAwBoR,EAASpR,EAAMC,OAAOoH,QAAUrH,EAAMC,OAAOoR,YAOvF,SAASC,GAAiBC,GACxB,MAAM,YAAN,OAAmBA,EAAQC,QAAQ,MAAO,MAG5C,IAAMC,GAAUC,gBAAK,YAAoD,IAvB/CC,EAuBcJ,EAAgC,EAAhCA,QAChCK,EAAaC,cAAkD,SAACC,GAAD,OAAWA,EAAMC,MAAMC,SACtFC,EAAWC,eACjB,EAAkDN,EAAWL,GAA5C1J,EAAjB,EAAQ6G,QAA8ByD,EAAtC,EAAuBC,cAEjBpK,EAAWqK,YAAgBd,GAEzB5L,EAAMC,cAAND,EAEF2M,EAAyBvH,uBAAY,WACpCoH,GACLF,EAASM,aAAiBhB,MACzB,CAACU,EAAUV,EAASY,IAEjBK,EAAmBzH,uBAAY,WAE/B0H,OAAOC,QAAQ,sDACjBT,EAASU,aAAWpB,MAErB,CAACU,EAAUV,IAERqB,EAAmB7H,uBAAY,WACnCkH,EAASY,aAAWtB,MACnB,CAACU,EAAUV,IAERuB,EAAoB/H,uBAAY,WACpCkH,EAASc,aAAYxB,MACpB,CAACU,EAAUV,IAEd,EAA+CyB,aAC7C,gCACE,cAAC,KAAD,UAAOnL,IAtDa8J,EAsDY9J,EAAK8J,QArDnC,IAAN,OAAWA,EAAQsB,MAAnB,YAA4BtB,EAAQuB,MAApC,YAA6CvB,EAAQwB,UAsDjD,cAAC,IAAD,CAAcpC,UAAQ,EAACF,KAAI,gDAA2CU,GAAtE,SACG5L,EAAE,SAEL,cAAC,IAAD,CAAQ2K,QAAQ,SAAS/M,MAAM,KAAKuC,QAAS0M,EAAkBzJ,SAA6C,IAAnCsC,OAAOC,KAAKsG,GAAYhH,OAAjG,SACGjF,EAAE,YAEJwM,GACC,cAAC,IAAD,CAAQ7B,QAAQ,OAAOxK,QAASwM,EAAwB1T,MAAO,CAAEgF,SAAU,QAA3E,SACG+B,EAAE,oBAIT,CAAEyN,UAAW,YAAaC,QAAS,UAf7BC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,QAASC,EAA5B,EAA4BA,eAkB5B,OAAK3L,EAGH,eAACsJ,GAAD,CAAYC,OAAQpJ,EAAwBwH,GAAI8B,GAAiBC,GAAjE,UACGiC,GAAkBD,EAClB1L,EAAK5I,QACJ,cAAC,IAAD,CAAUT,KAAK,OAAOI,MAAO,CAAEC,YAAa,QAAUI,QAAS4I,EAAK5I,QAASC,IAAG,UAAK2I,EAAKM,KAAV,gBAEhF,qBAAKvJ,MAAO,CAAEvB,MAAO,OAAQ4M,OAAQ,OAAQpL,YAAa,UAE5D,eAACb,EAAA,EAAD,CAAQY,MAAO,CAAE6U,KAAM,KAAvB,UACE,cAAC,IAAD,UACE,cAAC,KAAD,CAAM7J,MAAI,EAAV,SAAY/B,EAAKM,SAEnB,eAAC,IAAD,CAAUuL,GAAG,MAAb,UACE,eAAC,KAAD,CAAM9P,SAAS,OAAOV,GAAG,MAAMyQ,cAAc,YAA7C,UACG9L,EAAKoI,OAAOrF,OADf,IACwBjF,EAAE,aAE1B,sBAAM8F,IAAK6H,EAAX,SACE,cAAC,IAAD,CAAS3P,MAAM,OAAOtG,MAAM,iBAIlC,cAAC,KAAD,CACE4T,QAASjJ,EACT2H,SAAU,WACJ3H,EACF8K,IAEAF,SA1B2BrB,GAHnB,QAqCdqC,GAAgBzW,IAAOU,IAAV,sFAqKJgW,I,SAAAA,GA/Jf,YAQI,IAPFC,EAOC,EAPDA,aACAC,EAMC,EANDA,cACAC,EAKC,EALDA,WAMA,EAAwC1S,mBAAiB,IAAzD,mBAAO2S,EAAP,KAAqBC,EAArB,KAEQvO,EAAMC,cAAND,EAEFoM,EAAQoC,cAGRC,EAAiBC,cACvB,EAAoC/S,qBAApC,mBAAOgT,EAAP,KAAmBC,EAAnB,KACA9F,qBAAU,YACH6F,GAAcF,GACjBG,EAAcH,KAEf,CAACE,EAAYF,IAEhB,IAAMxF,EAAc7D,uBAAY,SAACsE,GAC/B6E,EAAgB7E,EAAEN,OAAOC,SACxB,IAEGwF,EAAYC,eAEZC,EAAoB/U,mBAAQ,WAChC,OAAOwF,aAAU8O,GAAcrJ,OAAS,GAAKM,QAAQ/G,aAAgB8P,MACpE,CAACA,IAEEU,EAAchV,mBAAQ,WAE1B,OADiB0L,OAAOC,KAAKyG,GAE1B6C,QAAO,SAACrD,GAEP,OAAOrG,QAAQ6G,EAAMR,GAAS7C,WAAamG,KAAsBtJ,SAASgG,MAE3EpD,MAAK,SAAC2G,EAAIC,GACT,IAAiBC,EAAOjD,EAAM+C,GAAtBpG,QACSuG,EAAOlD,EAAMgD,GAAtBrG,QAGR,OAAc,OAAV4F,QAAU,IAAVA,OAAA,EAAAA,EAAY/I,SAASuJ,OAAO,OAACR,QAAD,IAACA,OAAD,EAACA,EAAY/I,SAASwJ,KAC5C,IAEN,OAACT,QAAD,IAACA,OAAD,EAACA,EAAY/I,SAASuJ,MAAtB,OAA6BR,QAA7B,IAA6BA,OAA7B,EAA6BA,EAAY/I,SAASwJ,IAC7C,EAGLC,GAAMC,EACDD,EAAG7M,KAAKqE,cAAgByI,EAAG9M,KAAKqE,eAClC,EACDwI,EAAG7M,KAAKqE,gBAAkByI,EAAG9M,KAAKqE,cAClC,EACA,EAEFwI,GAAY,EACZC,EAAW,EACR,OAEV,CAAClD,EAAOuC,IAGX,EAAgChT,qBAAhC,mBAAO4T,EAAP,KAAiBC,EAAjB,KACA,EAAgC7T,qBAAhC,mBAAO8T,EAAP,KAAiBC,EAAjB,KAEA5G,qBAAU,WAAM,8CACd,uBAAA6G,EAAA,sDACEd,EAAUP,GAAc,GACrBsB,MAAK,SAAC1N,GAAD,OAAUsN,EAAYtN,MAC3B2N,OAAM,kBAAMH,EAAY,2BAH7B,4CADc,sBAOVX,EAPW,WAAD,wBAQZe,IAEAN,OAAYzV,GACS,KAAjBuU,GACFoB,EAAY,8BAKK,KAAjBpB,GACFoB,OAAY3V,KAEb,CAAC8U,EAAWP,EAAcS,IAG7B,IAAMgB,EAAarK,OAAOC,KAAKyG,GAAOxG,SAAS0I,GAGzC0B,EAAe5K,uBAAY,WAC1BmK,IACLnB,EAAcmB,GACdpB,EAAa9D,GAAkB4F,YAC/B5B,EAAWC,MACV,CAACA,EAAcF,EAAeC,EAAYF,EAAcoB,IAE3D,OACE,eAAC/W,GAAD,WACE,eAAC,IAAD,CAAYL,IAAI,OAAhB,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CACE0R,GAAG,iBACHjM,MAAM,KACNkM,YAAa9J,EAAE,mCACfqJ,MAAOiF,EACPtE,SAAUf,MAGbwG,EACC,cAAC,KAAD,CAAMzR,MAAM,UAAU/E,MAAO,CAAEiX,aAAc,WAAYC,SAAU,UAAnE,SACGV,IAED,QAELF,GACC,cAAC,IAAD,CAAYtW,MAAO,CAAEmX,WAAY,GAAjC,SACE,cAAChW,EAAA,EAAD,CAAMvC,QAAQ,YAAd,SACE,eAAC,IAAD,WACE,eAAC,IAAD,WACG0X,EAASjW,SAAW,cAAC,IAAD,CAAUA,QAASiW,EAASjW,QAAST,KAAK,SAC/D,eAAC,IAAD,CAAYV,IAAI,MAAMc,MAAO,CAAEoX,WAAY,QAA3C,UACE,cAAC,KAAD,CAAMpM,MAAI,EAAV,SAAYsL,EAAS/M,OACrB,eAAC,KAAD,CAAMxE,MAAM,aAAayE,OAAK,EAACuL,cAAc,YAA7C,UACGuB,EAASjF,OAAOrF,OADnB,IAC4BjF,EAAE,mBAIjC+P,EACC,eAAC,IAAD,WACE,cAAC,IAAD,CAAerY,MAAM,OAAO6F,GAAG,SAC/B,cAAC,KAAD,UAAOyC,EAAE,eAGX,cAAC,IAAD,CAAQtI,MAAM,cAAcyI,QAAS6P,EAArC,SACGhQ,EAAE,mBAOf,cAACiO,GAAD,UACE,cAAC,IAAD,CAAY9V,IAAI,KAAhB,SACG6W,EAAY1O,KAAI,SAACsL,GAAD,OACf,cAAC,GAAD,CAAuBA,QAASA,GAAlBA,c,UC7QpBpT,GAAUhB,IAAOU,IAAV,4HAOPoY,GAAS9Y,IAAOU,IAAV,gKASG,SAASqY,GAAT,GAMX,IALFpC,EAKC,EALDA,aACArM,EAIC,EAJDA,eAKQjC,EAAYkC,cAAZlC,QAEAG,EAAMC,cAAND,EAER,EAAsCrE,mBAAiB,IAAvD,mBAAO2L,EAAP,KAAoBC,EAApB,KAGMsB,EAAWxB,mBACX4B,EAAc7D,uBAAY,SAAC8D,GAC/B,IAAMC,EAAQD,EAAME,OAAOC,MACrBC,EAAmBC,YAAUJ,GACnC5B,EAAe+B,GAAoBH,KAClC,IAGGtB,EAAcC,YAASR,GAGvBkJ,EAA2BC,eAC3BC,EAAcC,cAEdC,EAAkBxL,uBAAY,WAC9BvF,GAAW2Q,GACbA,EAAgBlQ,KAAI,SAACpF,GACnB,OAAOwV,EAAY7Q,EAAS3E,EAAMvB,cAGrC,CAAC+W,EAAaF,EAAiB3Q,IAE5BgR,EAAY7W,mBAAQ,WACxB,OACE6F,GACA2Q,EAAgBlQ,KAAI,SAACpF,GAAD,OAClB,eAAC,IAAD,CAAgCxD,MAAM,OAAtC,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAcqB,SAAUmC,EAAOrC,KAAK,SACpC,cAAC,IAAD,CAAMuS,UAAQ,EAACF,KAAMC,YAAejQ,EAAMvB,QAAS,UAAWkG,GAAU7B,MAAM,aAAakC,GAAG,OAA9F,SACGhF,EAAMf,YAGX,eAAC,IAAD,WACE,cAAC,IAAD,CAAYwQ,QAAQ,OAAOxK,QAAS,kBAAMuQ,EAAY7Q,EAAS3E,EAAMvB,UAArE,SACE,cAAC,IAAD,MAEF,cAAC,IAAD,CAAcuR,KAAMC,YAAejQ,EAAMvB,QAAS,UAAWkG,UAXhD3E,EAAMvB,cAgB1B,CAAC6W,EAAiB3Q,EAAS6Q,IAExBI,EAAiC,KAAhBxJ,GAAsBiC,YAAUjC,GAEvD,OACE,cAAC,GAAD,UACE,eAACjP,EAAA,EAAD,CAAQY,MAAO,CAAEvB,MAAO,OAAQoW,KAAM,OAAtC,UACE,eAAC,IAAD,CAAY3V,IAAI,OAAhB,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CACE0R,GAAG,qBACHjM,MAAM,KACNkM,YAAY,SACZT,MAAO/B,EACPyC,aAAa,MACbjE,IAAK+C,EACLmB,SAAUf,EACV8H,WAAYD,OAGdA,GAAkB,cAAC,KAAD,CAAM9S,MAAM,UAAZ,SAAuBgC,EAAE,+BAC5C6H,GACC,cAACjG,EAAD,CACE1G,MAAO2M,EACPhG,eAAgB,kBAAMsM,EAAa9D,GAAkB2G,cACrDlP,eAAgBA,EAChB7I,MAAO,CAAEqL,OAAQ,oBAItBuM,EACD,eAACP,GAAD,WACE,eAAC,KAAD,CAAMrM,MAAI,EAACjG,MAAM,aAAjB,iBACGwS,QADH,IACGA,OADH,EACGA,EAAiBvL,OADpB,IACwD,IAA3BuL,EAAgBvL,OAAejF,EAAE,gBAAkBA,EAAE,oBAEjFwQ,EAAgBvL,OAAS,GACxB,cAAC,IAAD,CAAQ0F,QAAQ,WAAWxK,QAASyQ,EAApC,SACG5Q,EAAE,uBCnHjB,IAAMiR,GAAmBzZ,YAAO0Z,IAAP1Z,CAAH,8CAIP,SAAS2Z,GAAT,GAUX,IATFhD,EASC,EATDA,aACAC,EAQC,EARDA,cACAtM,EAOC,EAPDA,eACAuM,EAMC,EANDA,WAOA,EAAkC1S,oBAAS,GAA3C,mBAAOyV,EAAP,KAAkBC,EAAlB,KAEQrR,EAAMC,cAAND,EAER,OACE,eAAC,KAAD,WACE,eAACiR,GAAD,CACEK,YAAaF,EAAY,EAAI,EAC7BG,YAAa,kBAAMF,GAAa,SAACG,GAAD,OAAWA,MAC3C5T,MAAM,KACN+M,QAAQ,SACR9M,GAAG,OALL,UAOE,cAAC,IAAD,CAAgBnG,MAAM,MAAtB,SAA6BsI,EAAE,WAC/B,cAAC,IAAD,CAAgBtI,MAAM,MAAtB,SAA6BsI,EAAE,eAEhCoR,EACC,cAAC,GAAD,CAAajD,aAAcA,EAAcC,cAAeA,EAAeC,WAAYA,IAEnF,cAACkC,GAAD,CAAcpC,aAAcA,EAAcrM,eAAgBA,O,mBCtB5DtJ,GAAUhB,IAAOU,IAAV,qEAKPuZ,GAAUja,IAAOU,IAAV,8GAGS,qBAAGmC,MAAkBC,OAAOyD,QA4GnC2T,I,SAAAA,GAxGf,YAA+D,IAAD,EAAxCC,EAAwC,EAAxCA,QAASzP,EAA+B,EAA/BA,KAAM0P,EAAyB,EAAzBA,SAC3BvX,EAAUwX,eAAVxX,MACFiS,EAAWC,eAETvM,EAAMC,cAAND,EAGR,EAAkCrE,oBAAS,GAA3C,mBAAO4O,EAAP,KAAkBC,EAAlB,KAEM4B,EAAQoC,cACRK,EAAYC,eAGZgD,EAASvM,QAAO,UAAC6G,EAAMuF,UAAP,aAAC,EAAgBI,kBACvC,EAAgCpW,mBAAwB,MAAxD,mBAAO8T,EAAP,KAAiBC,EAAjB,KAEMsC,EAAgB5M,uBAAY,WAC5B0M,IACJpC,EAAY,MACZb,EAAU8C,GACP/B,MAAK,WACJtD,EAASY,aAAWyE,IACpBC,OAED/B,OAAM,SAAChR,GACN6Q,EAAY7Q,EAAMoT,SAClB3F,EAASU,aAAW2E,UAEvB,CAACG,EAAQxF,EAAUuC,EAAW8C,EAASC,IAE1C,OACE,cAAC,GAAD,UACE,cAAC,IAAD,CAAYzZ,IAAI,KAAhB,SACE,eAAC,IAAD,CAAYA,IAAI,KAAhB,UACE,cAACiC,EAAA,EAAD,CAAMvC,QAAQ,YAAd,SACE,cAAC,IAAD,UACE,eAAC,IAAD,WACGqK,EAAK5I,SAAW,cAAC,IAAD,CAAUA,QAAS4I,EAAK5I,QAAST,KAAK,SACvD,eAAC,IAAD,CAAYV,IAAI,KAAKc,MAAO,CAAEoX,WAAY,QAA1C,UACE,eAAC,IAAD,WACE,cAAC,KAAD,CAAMpM,MAAI,EAAC1G,GAAG,MAAd,SACG2E,EAAKM,OAER,cAACiP,GAAD,IACA,eAAC,KAAD,CAAMhP,OAAK,EAACzE,MAAM,aAAakC,GAAG,MAAlC,UACGgC,EAAKoI,OAAOrF,OADf,gBAIF,cAAC,IAAD,CACExC,OAAK,EACL2I,UAAQ,EACRlH,UAAQ,EACRC,SAAS,MACT+G,KAAI,gDAA2CyG,GALjD,SAOGA,cAOX,cAAC,KAAD,CAAShH,QAAQ,SAAjB,SACE,eAAC,IAAD,CAAMhN,cAAc,SAApB,UACE,cAAC,KAAD,CAAMM,SAAS,OAAOkM,UAAU,SAASnM,MAAO3D,EAAMC,OAAO4X,QAASrU,GAAG,OAAzE,SACGmC,EAAE,6BAEL,cAAC,KAAD,CAAMhC,MAAO3D,EAAMC,OAAO4X,QAASrU,GAAG,MAAtC,SACGmC,EACC,6NAGJ,cAAC,KAAD,CAAMiE,MAAI,EAACjG,MAAO3D,EAAMC,OAAO4X,QAASrU,GAAG,OAA3C,SACG,WAEH,eAAC,IAAD,CAAMP,WAAW,SAAjB,UACE,cAAC,IAAD,CACEkF,KAAK,YACL6I,KAAK,WACLC,QAASf,EACTP,SAAU,kBAAMQ,GAAcD,IAC9B3M,MAAM,OAER,cAAC,KAAD,CAAMsC,GAAG,OAAOjH,MAAO,CAAEsS,WAAY,QAArC,SACGvL,EAAE,0BAMX,cAAC,IAAD,CAAQoD,UAAWmH,EAAWpK,QAAS6R,EAAvC,SACGhS,EAAE,YAEJyP,EACC,cAAC,KAAD,CAAMzR,MAAM,UAAU/E,MAAO,CAAEiX,aAAc,WAAYC,SAAU,UAAnE,SACGV,IAED,aC5GRa,GAAS9Y,IAAOU,IAAV,+FAEU,qBAAGmC,MAAkBC,OAAOG,iBAI5C0X,GAAuB3a,YAAO4a,KAAP5a,CAAH,mEAKpB6a,GAAkB7a,YAAO8a,KAAP9a,CAAH,qDAWN,SAAS+a,GAAT,GAMe,IAAD,MAL3BC,iBAK2B,MALf,kBAAM,MAKS,EAJ3BhO,EAI2B,EAJ3BA,iBACAzE,EAG2B,EAH3BA,iBACAmH,EAE2B,EAF3BA,sBAE2B,IAD3BC,uBAC2B,SAC3B,EAAkCxL,mBAA4B0O,GAAkBoI,QAAhF,mBAAOC,EAAP,KAAkBvE,EAAlB,KAEMxF,EAAuBvD,uBAC3B,SAACrM,GACCyZ,IACAhO,EAAiBzL,KAEnB,CAACyZ,EAAWhO,IAIRmO,EAAWC,YAAYF,GAG7B,EAAsC/W,qBAAtC,mBAAOqV,EAAP,KAAoBlP,EAApB,KAGA,EAAoCnG,qBAApC,mBAAOsU,EAAP,KAAmB7B,EAAnB,KACA,EAA8BzS,qBAA9B,mBAAOgW,EAAP,KAAgBtD,EAAhB,KAEQrO,EAAMC,cAAND,EAEF6S,GAAM,mBACTxI,GAAkBoI,OAAS,CAAE1V,MAAOiD,EAAE,kBAAmB8S,YAAQ/Y,IADxD,cAETsQ,GAAkB0I,OAAS,CAAEhW,MAAOiD,EAAE,UAAW8S,OAAQ,kBAAM3E,EAAa9D,GAAkBoI,WAFrF,cAGTpI,GAAkB2G,YAAc,CAC/BjU,MAAOiD,EAAE,iBACT8S,OAAQ,kBACN3E,EAAawE,GAAYA,IAAatI,GAAkB2G,YAAc2B,EAAWtI,GAAkBoI,WAN7F,cAQTpI,GAAkB4F,WAAa,CAAElT,MAAOiD,EAAE,eAAgB8S,OAAQ,kBAAM3E,EAAa9D,GAAkBoI,WAR9F,GAWZ,OACE,eAACN,GAAD,CAAsBzP,SAAS,QAA/B,UACE,eAAC,KAAD,WACE,eAAC,KAAD,WACGmQ,EAAOH,GAAWI,QAAU,cAAC,KAAD,CAAiBA,OAAQD,EAAOH,GAAWI,SACxE,cAAC,IAAD,UAAUD,EAAOH,GAAW3V,WAE9B,cAAC,KAAD,CAAkByV,UAAWA,OAE/B,eAACH,GAAD,WACGK,IAAcrI,GAAkBoI,OAC/B,cAAC,GAAD,CACEjO,iBAAkBmE,EAClB5I,iBAAkBA,EAClBmH,sBAAuBA,EACvBC,gBAAiBA,EACjBtF,eAAgB,kBAAMsM,EAAa9D,GAAkB2G,cACrDlP,eAAgBA,IAEhB4Q,IAAcrI,GAAkB2G,aAAeA,EACjD,cAAC,GAAD,CAAa1G,OAAQ,CAAC0G,GAAcrI,qBAAsBA,IACxD+J,IAAcrI,GAAkB4F,YAAcA,GAAc0B,EAC9D,cAAC,GAAD,CAAYzP,KAAM+N,EAAY0B,QAASA,EAASC,SAAU,kBAAMzD,EAAa9D,GAAkB0I,WAC7FL,IAAcrI,GAAkB0I,OAClC,cAAC5B,GAAD,CACEhD,aAAcA,EACdrM,eAAgBA,EAChBsM,cAAeA,EACfC,WAAYA,IAGd,GAEDqE,IAAcrI,GAAkBoI,QAC/B,cAAC,GAAD,UACE,cAAC,IAAD,CACE7U,MAAM,KACN+M,QAAQ,OACRxK,QAAS,kBAAMgO,EAAa9D,GAAkB0I,SAC9C/O,UAAU,2BAJZ,SAMGhE,EAAE","file":"static/js/0.c716ff18.chunk.js","sourcesContent":["import styled from 'styled-components'\r\nimport { Box } from '@pancakeswap/uikit'\r\n\r\nconst Row = styled(Box)<{\r\n  width?: string\r\n  align?: string\r\n  justify?: string\r\n  padding?: string\r\n  border?: string\r\n  borderRadius?: string\r\n}>`\r\n  width: ${({ width }) => width ?? '100%'};\r\n  display: flex;\r\n  padding: 0;\r\n  align-items: ${({ align }) => align ?? 'center'};\r\n  justify-content: ${({ justify }) => justify ?? 'flex-start'};\r\n  padding: ${({ padding }) => padding};\r\n  border: ${({ border }) => border};\r\n  border-radius: ${({ borderRadius }) => borderRadius};\r\n`\r\n\r\nexport const RowBetween = styled(Row)`\r\n  justify-content: space-between;\r\n`\r\n\r\nexport const RowFlat = styled.div`\r\n  display: flex;\r\n  align-items: flex-end;\r\n`\r\n\r\nexport const AutoRow = styled(Row)<{ gap?: string; justify?: string }>`\r\n  flex-wrap: wrap;\r\n  margin: ${({ gap }) => gap && `-${gap}`};\r\n  justify-content: ${({ justify }) => justify && justify};\r\n\r\n  & > * {\r\n    margin: ${({ gap }) => gap} !important;\r\n  }\r\n`\r\n\r\nexport const RowFixed = styled(Row)<{ gap?: string; justify?: string }>`\r\n  width: fit-content;\r\n  margin: ${({ gap }) => gap && `-${gap}`};\r\n`\r\n\r\nexport default Row\r\n","import styled from 'styled-components'\r\n\r\nconst Column = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-start;\r\n`\r\nexport const ColumnCenter = styled(Column)`\r\n  width: 100%;\r\n  align-items: center;\r\n`\r\n\r\nexport const AutoColumn = styled.div<{\r\n  gap?: 'sm' | 'md' | 'lg' | string\r\n  justify?: 'stretch' | 'center' | 'start' | 'end' | 'flex-start' | 'flex-end' | 'space-between'\r\n}>`\r\n  display: grid;\r\n  grid-auto-rows: auto;\r\n  grid-row-gap: ${({ gap }) => (gap === 'sm' && '8px') || (gap === 'md' && '12px') || (gap === 'lg' && '24px') || gap};\r\n  justify-items: ${({ justify }) => justify && justify};\r\n`\r\n\r\nexport default Column\r\n","import { Currency } from '@pancakeswap/sdk'\r\nimport React from 'react'\r\nimport styled from 'styled-components'\r\nimport CurrencyLogo from './CurrencyLogo'\r\n\r\nconst Wrapper = styled.div<{ margin: boolean }>`\r\n  display: flex;\r\n  flex-direction: row;\r\n  margin-right: ${({ margin }) => margin && '4px'};\r\n`\r\n\r\ninterface DoubleCurrencyLogoProps {\r\n  margin?: boolean\r\n  size?: number\r\n  currency0?: Currency\r\n  currency1?: Currency\r\n}\r\n\r\nexport default function DoubleCurrencyLogo({\r\n  currency0,\r\n  currency1,\r\n  size = 20,\r\n  margin = false,\r\n}: DoubleCurrencyLogoProps) {\r\n  return (\r\n    <Wrapper margin={margin}>\r\n      {currency0 && <CurrencyLogo currency={currency0} size={`${size.toString()}px`} style={{ marginRight: '4px' }} />}\r\n      {currency1 && <CurrencyLogo currency={currency1} size={`${size.toString()}px`} />}\r\n    </Wrapper>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport useHttpLocations from '../../hooks/useHttpLocations'\r\nimport Logo from './Logo'\r\n\r\nconst StyledListLogo = styled(Logo)<{ size: string }>`\r\n  width: ${({ size }) => size};\r\n  height: ${({ size }) => size};\r\n`\r\n\r\nexport default function ListLogo({\r\n  logoURI,\r\n  style,\r\n  size = '24px',\r\n  alt,\r\n}: {\r\n  logoURI: string\r\n  size?: string\r\n  style?: React.CSSProperties\r\n  alt?: string\r\n}) {\r\n  const srcs: string[] = useHttpLocations(logoURI)\r\n\r\n  return <StyledListLogo alt={alt} size={size} srcs={srcs} style={style} />\r\n}\r\n","const getTokenLogoURL = (address: string) =>\r\n  `https://assets.trustwalletapp.com/blockchains/smartchain/assets/${address}/logo.png`\r\n\r\nexport default getTokenLogoURL\r\n","import { Currency, ETHER, Token } from '@pancakeswap/sdk'\r\nimport { BinanceIcon } from '@pancakeswap/uikit'\r\nimport React, { useMemo } from 'react'\r\nimport styled from 'styled-components'\r\nimport useHttpLocations from '../../hooks/useHttpLocations'\r\nimport { WrappedTokenInfo } from '../../state/lists/hooks'\r\nimport getTokenLogoURL from '../../utils/getTokenLogoURL'\r\nimport Logo from './Logo'\r\n\r\nconst StyledLogo = styled(Logo)<{ size: string }>`\r\n  width: ${({ size }) => size};\r\n  height: ${({ size }) => size};\r\n`\r\n\r\nexport default function CurrencyLogo({\r\n  currency,\r\n  size = '24px',\r\n  style,\r\n}: {\r\n  currency?: Currency\r\n  size?: string\r\n  style?: React.CSSProperties\r\n}) {\r\n  const uriLocations = useHttpLocations(currency instanceof WrappedTokenInfo ? currency.logoURI : undefined)\r\n\r\n  const srcs: string[] = useMemo(() => {\r\n    if (currency === ETHER) return []\r\n\r\n    if (currency instanceof Token) {\r\n      if (currency instanceof WrappedTokenInfo) {\r\n        return [...uriLocations, getTokenLogoURL(currency.address)]\r\n      }\r\n      return [getTokenLogoURL(currency.address)]\r\n    }\r\n    return []\r\n  }, [currency, uriLocations])\r\n\r\n  if (currency === ETHER) {\r\n    return <BinanceIcon width={size} style={style} />\r\n  }\r\n\r\n  return <StyledLogo size={size} srcs={srcs} alt={`${currency?.symbol ?? 'token'} logo`} style={style} />\r\n}\r\n","import styled from 'styled-components'\r\nimport { Box } from '@pancakeswap/uikit'\r\n\r\nconst Card = styled(Box)<{\r\n  width?: string\r\n  padding?: string\r\n  border?: string\r\n  borderRadius?: string\r\n}>`\r\n  width: ${({ width }) => width ?? '100%'};\r\n  border-radius: 16px;\r\n  padding: 1.25rem;\r\n  padding: ${({ padding }) => padding};\r\n  border: ${({ border }) => border};\r\n  border-radius: ${({ borderRadius }) => borderRadius};\r\n  background-color: ${({ theme }) => theme.colors.background};\r\n`\r\nexport default Card\r\n\r\nexport const LightCard = styled(Card)`\r\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\r\n`\r\n\r\nexport const LightGreyCard = styled(Card)`\r\n  border: 1px solid ${({ theme }) => theme.colors.cardBorder};\r\n  background-color: ${({ theme }) => theme.colors.background};\r\n`\r\n\r\nexport const GreyCard = styled(Card)`\r\n  background-color: ${({ theme }) => theme.colors.dropdown};\r\n`\r\n","import styled from 'styled-components'\r\n\r\nconst Dots = styled.span`\r\n  &::after {\r\n    display: inline-block;\r\n    animation: ellipsis 1.25s infinite;\r\n    content: '.';\r\n    width: 1em;\r\n    text-align: left;\r\n  }\r\n  @keyframes ellipsis {\r\n    0% {\r\n      content: '.';\r\n    }\r\n    33% {\r\n      content: '..';\r\n    }\r\n    66% {\r\n      content: '...';\r\n    }\r\n  }\r\n`\r\n\r\nexport default Dots\r\n","import { Currency, ETHER, Token } from '@pancakeswap/sdk'\r\n\r\nexport function currencyId(currency: Currency): string {\r\n  if (currency === ETHER) return 'BNB'\r\n  if (currency instanceof Token) return currency.address\r\n  throw new Error('invalid currency')\r\n}\r\n\r\nexport default currencyId\r\n","import { BigNumber } from '@ethersproject/bignumber'\r\nimport { Token, TokenAmount } from '@pancakeswap/sdk'\r\nimport { useTokenContract } from './useContract'\r\nimport { useSingleCallResult } from '../state/multicall/hooks'\r\n\r\n// returns undefined if input token is undefined, or fails to get token contract,\r\n// or contract total supply cannot be fetched\r\nfunction useTotalSupply(token?: Token): TokenAmount | undefined {\r\n  const contract = useTokenContract(token?.address, false)\r\n\r\n  const totalSupply: BigNumber = useSingleCallResult(contract, 'totalSupply')?.result?.[0]\r\n\r\n  return token && totalSupply ? new TokenAmount(token, totalSupply.toString()) : undefined\r\n}\r\n\r\nexport default useTotalSupply\r\n","import React, { useState } from 'react'\r\nimport { HelpIcon } from '@pancakeswap/uikit'\r\n\r\nconst BAD_SRCS: { [tokenAddress: string]: true } = {}\r\n\r\nexport interface LogoProps extends React.ImgHTMLAttributes<HTMLImageElement> {\r\n  srcs: string[]\r\n}\r\n\r\n/**\r\n * Renders an image by sequentially trying a list of URIs, and then eventually a fallback triangle alert\r\n */\r\nconst Logo: React.FC<LogoProps> = ({ srcs, alt, ...rest }) => {\r\n  const [, refresh] = useState<number>(0)\r\n\r\n  const src: string | undefined = srcs.find((s) => !BAD_SRCS[s])\r\n\r\n  if (src) {\r\n    return (\r\n      <img\r\n        {...rest}\r\n        alt={alt}\r\n        src={src}\r\n        onError={() => {\r\n          if (src) BAD_SRCS[src] = true\r\n          refresh((i) => i + 1)\r\n        }}\r\n      />\r\n    )\r\n  }\r\n\r\n  return <HelpIcon {...rest} />\r\n}\r\n\r\nexport default Logo\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Flex } from '@pancakeswap/uikit'\r\nimport SubNav from 'components/Menu/SubNav'\r\n\r\nconst StyledPage = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  width: 100%;\r\n  padding: 16px;\r\n  padding-bottom: 0;\r\n  min-height: calc(100vh - 64px);\r\n  background: ${({ theme }) => theme.colors.background};\r\n\r\n  ${({ theme }) => theme.mediaQueries.xs} {\r\n    background-size: auto;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    padding: 24px;\r\n    padding-bottom: 0;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    padding-top: 32px;\r\n    min-height: calc(100vh - 64px);\r\n  }\r\n`\r\n\r\nconst Page: React.FC<React.HTMLAttributes<HTMLDivElement>> = ({ children, ...props }) => {\r\n  return (\r\n    <StyledPage {...props}>\r\n      {/* <SubNav /> */}\r\n      {children}\r\n      <Flex flexGrow={1} />\r\n    </StyledPage>\r\n  )\r\n}\r\n\r\nexport default Page\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Text, Flex, Heading, IconButton, ArrowBackIcon, NotificationDot } from '@pancakeswap/uikit'\r\nimport { Link } from 'react-router-dom'\r\nimport { useExpertModeManager } from 'state/user/hooks'\r\nimport GlobalSettings from 'components/Menu/GlobalSettings'\r\nimport Transactions from './Transactions'\r\nimport QuestionHelper from '../QuestionHelper'\r\n\r\ninterface Props {\r\n  title: string\r\n  subtitle: string\r\n  helper?: string\r\n  backTo?: string\r\n  noConfig?: boolean\r\n}\r\n\r\nconst AppHeaderContainer = styled(Flex)`\r\n  margin-top: 20px;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  padding: 6px 12px;\r\n  width: 100%;\r\n  margin-bottom: 10px;\r\n  // border-bottom: 1px solid ${({ theme }) => theme.colors.cardDivider};\r\n`\r\n\r\nconst AppHeader: React.FC<Props> = ({ title, subtitle, helper, backTo, noConfig = false }) => {\r\n  const [expertMode] = useExpertModeManager()\r\n\r\n  return (\r\n    <AppHeaderContainer>\r\n      <Flex alignItems=\"center\" mr={noConfig ? 0 : '16px'}>\r\n        {backTo && (\r\n          <IconButton as={Link} to={backTo}>\r\n            <ArrowBackIcon width=\"32px\" />\r\n          </IconButton>\r\n        )}\r\n        <Flex flexDirection=\"column\">\r\n          <Heading scale=\"lg\" mb=\"8px\">\r\n            {title}\r\n          </Heading>\r\n          <Flex alignItems=\"center\">\r\n            {helper && <QuestionHelper text={helper} mr=\"4px\" />}\r\n            <Text color=\"textSubtle\" fontSize=\"16px\">\r\n              {subtitle}\r\n            </Text>\r\n          </Flex>\r\n        </Flex>\r\n      </Flex>\r\n      {!noConfig && (\r\n        <Flex alignItems=\"center\">\r\n          <NotificationDot show={expertMode}>\r\n            <GlobalSettings />\r\n          </NotificationDot>\r\n          {/* <Transactions /> */}\r\n        </Flex>\r\n      )}\r\n    </AppHeaderContainer>\r\n  )\r\n}\r\n\r\nexport default AppHeader\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Card } from '@pancakeswap/uikit'\r\n\r\nexport const BodyWrapper = styled(Card)`\r\n  border-radius: 24px;\r\n  margin-top: 3%;\r\n  max-width: 500px;\r\n  padding: 16px;\r\n  width: 100%;\r\n  z-index: 1;\r\n`\r\n\r\n/**\r\n * The styled container element that wraps the content of most pages and the tabs.\r\n */\r\nexport default function AppBody({ children }: { children: React.ReactNode }) {\r\n  return <BodyWrapper>{children}</BodyWrapper>\r\n}\r\n","import { useMemo } from 'react'\r\nimport contenthashToUri from 'utils/contenthashToUri'\r\nimport { parseENSAddress } from 'utils/ENS/parseENSAddress'\r\nimport uriToHttp from 'utils/uriToHttp'\r\nimport useENSContentHash from './ENS/useENSContentHash'\r\n\r\nexport default function useHttpLocations(uri: string | undefined): string[] {\r\n  const ens = useMemo(() => (uri ? parseENSAddress(uri) : undefined), [uri])\r\n  const resolvedContentHash = useENSContentHash(ens?.ensName)\r\n  return useMemo(() => {\r\n    if (ens) {\r\n      return resolvedContentHash.contenthash ? uriToHttp(contenthashToUri(resolvedContentHash.contenthash)) : []\r\n    }\r\n    return uri ? uriToHttp(uri) : []\r\n  }, [ens, resolvedContentHash.contenthash, uri])\r\n}\r\n","import { namehash } from 'ethers/lib/utils'\r\nimport { useMemo } from 'react'\r\nimport { useSingleCallResult } from '../../state/multicall/hooks'\r\nimport isZero from '../../utils/isZero'\r\nimport { useENSRegistrarContract, useENSResolverContract } from '../useContract'\r\n\r\n/**\r\n * Does a lookup for an ENS name to find its contenthash.\r\n */\r\nexport default function useENSContentHash(ensName?: string | null): { loading: boolean; contenthash: string | null } {\r\n  const ensNodeArgument = useMemo(() => {\r\n    if (!ensName) return [undefined]\r\n    try {\r\n      return ensName ? [namehash(ensName)] : [undefined]\r\n    } catch (error) {\r\n      return [undefined]\r\n    }\r\n  }, [ensName])\r\n  const registrarContract = useENSRegistrarContract(false)\r\n  const resolverAddressResult = useSingleCallResult(registrarContract, 'resolver', ensNodeArgument)\r\n  const resolverAddress = resolverAddressResult.result?.[0]\r\n  const resolverContract = useENSResolverContract(\r\n    resolverAddress && isZero(resolverAddress) ? undefined : resolverAddress,\r\n    false,\r\n  )\r\n  const contenthash = useSingleCallResult(resolverContract, 'contenthash', ensNodeArgument)\r\n\r\n  return {\r\n    contenthash: contenthash.result?.[0] ?? null,\r\n    loading: resolverAddressResult.loading || contenthash.loading,\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { ChainId, Currency, currencyEquals, ETHER, Token } from '@pancakeswap/sdk'\r\nimport { Text } from '@pancakeswap/uikit'\r\nimport styled from 'styled-components'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\nimport { SUGGESTED_BASES } from '../../config/constants'\r\nimport { AutoColumn } from '../Layout/Column'\r\nimport QuestionHelper from '../QuestionHelper'\r\nimport { AutoRow } from '../Layout/Row'\r\nimport { CurrencyLogo } from '../Logo'\r\n\r\nconst BaseWrapper = styled.div<{ disable?: boolean }>`\r\n  border: 1px solid ${({ theme, disable }) => (disable ? 'transparent' : theme.colors.dropdown)};\r\n  border-radius: 10px;\r\n  display: flex;\r\n  padding: 6px;\r\n\r\n  align-items: center;\r\n  :hover {\r\n    cursor: ${({ disable }) => !disable && 'pointer'};\r\n    background-color: ${({ theme, disable }) => !disable && theme.colors.background};\r\n  }\r\n\r\n  background-color: ${({ theme, disable }) => disable && theme.colors.dropdown};\r\n  opacity: ${({ disable }) => disable && '0.4'};\r\n`\r\n\r\nexport default function CommonBases({\r\n  chainId,\r\n  onSelect,\r\n  selectedCurrency,\r\n}: {\r\n  chainId?: ChainId\r\n  selectedCurrency?: Currency | null\r\n  onSelect: (currency: Currency) => void\r\n}) {\r\n  const { t } = useTranslation()\r\n  return (\r\n    <AutoColumn gap=\"md\">\r\n      <AutoRow>\r\n        <Text fontSize=\"14px\">{t('Common bases')}</Text>\r\n        <QuestionHelper text={t('These tokens are commonly paired with other tokens.')} ml=\"4px\" />\r\n      </AutoRow>\r\n      <AutoRow gap=\"auto\">\r\n        <BaseWrapper\r\n          onClick={() => {\r\n            if (!selectedCurrency || !currencyEquals(selectedCurrency, ETHER)) {\r\n              onSelect(ETHER)\r\n            }\r\n          }}\r\n          disable={selectedCurrency === ETHER}\r\n        >\r\n          <CurrencyLogo currency={ETHER} style={{ marginRight: 8 }} />\r\n          <Text>BNB</Text>\r\n        </BaseWrapper>\r\n        {(chainId ? SUGGESTED_BASES[chainId] : []).map((token: Token) => {\r\n          const selected = selectedCurrency instanceof Token && selectedCurrency.address === token.address\r\n          return (\r\n            <BaseWrapper onClick={() => !selected && onSelect(token)} disable={selected} key={token.address}>\r\n              <CurrencyLogo currency={token} style={{ marginRight: 8 }} />\r\n              <Text>{token.symbol}</Text>\r\n            </BaseWrapper>\r\n          )\r\n        })}\r\n      </AutoRow>\r\n    </AutoColumn>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport styled, { keyframes } from 'styled-components'\r\n\r\nconst rotate = keyframes`\r\n  from {\r\n    transform: rotate(0deg);\r\n  }\r\n  to {\r\n    transform: rotate(360deg);\r\n  }\r\n`\r\n\r\nconst StyledSVG = styled.svg<{ size: string; stroke?: string }>`\r\n  animation: 2s ${rotate} linear infinite;\r\n  height: ${({ size }) => size};\r\n  width: ${({ size }) => size};\r\n  path {\r\n    stroke: ${({ stroke, theme }) => stroke ?? theme.colors.primary};\r\n  }\r\n`\r\n\r\n/**\r\n * Takes in custom size and stroke for circle color, default to primary color as fill,\r\n * need ...rest for layered styles on top\r\n */\r\nexport default function CircleLoader({\r\n  size = '16px',\r\n  stroke,\r\n  ...rest\r\n}: {\r\n  size?: string\r\n  stroke?: string\r\n  [k: string]: any\r\n}) {\r\n  return (\r\n    <StyledSVG viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" size={size} stroke={stroke} {...rest}>\r\n      <path\r\n        d=\"M12 2C6.47715 2 2 6.47715 2 12C2 17.5228 6.47715 22 12 22C17.5228 22 22 17.5228 22 12C22 9.27455 20.9097 6.80375 19.1414 5\"\r\n        strokeWidth=\"2.5\"\r\n        strokeLinecap=\"round\"\r\n        strokeLinejoin=\"round\"\r\n      />\r\n    </StyledSVG>\r\n  )\r\n}\r\n","import React, { CSSProperties } from 'react'\r\nimport { Token } from '@pancakeswap/sdk'\r\nimport { Button, Text, CheckmarkCircleIcon } from '@pancakeswap/uikit'\r\nimport { AutoRow, RowFixed } from 'components/Layout/Row'\r\nimport { AutoColumn } from 'components/Layout/Column'\r\nimport CurrencyLogo from 'components/Logo/CurrencyLogo'\r\nimport { ListLogo } from 'components/Logo'\r\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\r\nimport { useCombinedInactiveList } from 'state/lists/hooks'\r\nimport styled from 'styled-components'\r\nimport { useIsUserAddedToken, useIsTokenActive } from 'hooks/Tokens'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\nconst TokenSection = styled.div<{ dim?: boolean }>`\r\n  padding: 4px 20px;\r\n  height: 56px;\r\n  display: grid;\r\n  grid-template-columns: auto minmax(auto, 1fr) auto;\r\n  grid-gap: 16px;\r\n  align-items: center;\r\n\r\n  opacity: ${({ dim }) => (dim ? '0.4' : '1')};\r\n`\r\n\r\nconst CheckIcon = styled(CheckmarkCircleIcon)`\r\n  height: 16px;\r\n  width: 16px;\r\n  margin-right: 6px;\r\n  stroke: ${({ theme }) => theme.colors.success};\r\n`\r\n\r\nconst NameOverflow = styled.div`\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  max-width: 140px;\r\n  font-size: 12px;\r\n`\r\n\r\nexport default function ImportRow({\r\n  token,\r\n  style,\r\n  dim,\r\n  showImportView,\r\n  setImportToken,\r\n}: {\r\n  token: Token\r\n  style?: CSSProperties\r\n  dim?: boolean\r\n  showImportView: () => void\r\n  setImportToken: (token: Token) => void\r\n}) {\r\n  // globals\r\n  const { chainId } = useActiveWeb3React()\r\n\r\n  const { t } = useTranslation()\r\n\r\n  // check if token comes from list\r\n  const inactiveTokenList = useCombinedInactiveList()\r\n  const list = chainId && inactiveTokenList?.[chainId]?.[token.address]?.list\r\n\r\n  // check if already active on list or local storage tokens\r\n  const isAdded = useIsUserAddedToken(token)\r\n  const isActive = useIsTokenActive(token)\r\n\r\n  return (\r\n    <TokenSection style={style}>\r\n      <CurrencyLogo currency={token} size=\"24px\" style={{ opacity: dim ? '0.6' : '1' }} />\r\n      <AutoColumn gap=\"4px\" style={{ opacity: dim ? '0.6' : '1' }}>\r\n        <AutoRow>\r\n          <Text>{token.symbol}</Text>\r\n          <Text color=\"textDisabled\" ml=\"8px\">\r\n            <NameOverflow title={token.name}>{token.name}</NameOverflow>\r\n          </Text>\r\n        </AutoRow>\r\n        {list && list.logoURI && (\r\n          <RowFixed>\r\n            <Text small mr=\"4px\" color=\"textSubtle\">\r\n              {t('via')} {list.name}\r\n            </Text>\r\n            <ListLogo logoURI={list.logoURI} size=\"12px\" />\r\n          </RowFixed>\r\n        )}\r\n      </AutoColumn>\r\n      {!isActive && !isAdded ? (\r\n        <Button\r\n          width=\"fit-content\"\r\n          onClick={() => {\r\n            if (setImportToken) {\r\n              setImportToken(token)\r\n            }\r\n            showImportView()\r\n          }}\r\n        >\r\n          {t('Import')}\r\n        </Button>\r\n      ) : (\r\n        <RowFixed style={{ minWidth: 'fit-content' }}>\r\n          <CheckIcon />\r\n          <Text color=\"success\">Active</Text>\r\n        </RowFixed>\r\n      )}\r\n    </TokenSection>\r\n  )\r\n}\r\n","import React, { CSSProperties, MutableRefObject, useCallback, useMemo } from 'react'\r\nimport { Currency, CurrencyAmount, currencyEquals, ETHER, Token } from '@pancakeswap/sdk'\r\nimport { Text } from '@pancakeswap/uikit'\r\nimport styled from 'styled-components'\r\nimport { FixedSizeList } from 'react-window'\r\nimport { wrappedCurrency } from 'utils/wrappedCurrency'\r\nimport { LightGreyCard } from 'components/Card'\r\nimport QuestionHelper from 'components/QuestionHelper'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\r\nimport { useCombinedActiveList } from '../../state/lists/hooks'\r\nimport { useCurrencyBalance } from '../../state/wallet/hooks'\r\nimport { useIsUserAddedToken, useAllInactiveTokens } from '../../hooks/Tokens'\r\nimport Column from '../Layout/Column'\r\nimport { RowFixed, RowBetween } from '../Layout/Row'\r\nimport { CurrencyLogo } from '../Logo'\r\nimport CircleLoader from '../Loader/CircleLoader'\r\nimport { isTokenOnList } from '../../utils'\r\nimport ImportRow from './ImportRow'\r\n\r\nfunction currencyKey(currency: Currency): string {\r\n  return currency instanceof Token ? currency.address : currency === ETHER ? 'ETHER' : ''\r\n}\r\n\r\nconst StyledBalanceText = styled(Text)`\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  max-width: 5rem;\r\n  text-overflow: ellipsis;\r\n`\r\n\r\nconst FixedContentRow = styled.div`\r\n  padding: 4px 20px;\r\n  height: 56px;\r\n  display: grid;\r\n  grid-gap: 16px;\r\n  align-items: center;\r\n`\r\n\r\nfunction Balance({ balance }: { balance: CurrencyAmount }) {\r\n  return <StyledBalanceText title={balance.toExact()}>{balance.toSignificant(4)}</StyledBalanceText>\r\n}\r\n\r\nconst MenuItem = styled(RowBetween)<{ disabled: boolean; selected: boolean }>`\r\n  padding: 4px 20px;\r\n  height: 56px;\r\n  display: grid;\r\n  grid-template-columns: auto minmax(auto, 1fr) minmax(0, 72px);\r\n  grid-gap: 8px;\r\n  cursor: ${({ disabled }) => !disabled && 'pointer'};\r\n  pointer-events: ${({ disabled }) => disabled && 'none'};\r\n  :hover {\r\n    background-color: ${({ theme, disabled }) => !disabled && theme.colors.background};\r\n  }\r\n  opacity: ${({ disabled, selected }) => (disabled || selected ? 0.5 : 1)};\r\n`\r\n\r\nfunction CurrencyRow({\r\n  currency,\r\n  onSelect,\r\n  isSelected,\r\n  otherSelected,\r\n  style,\r\n}: {\r\n  currency: Currency\r\n  onSelect: () => void\r\n  isSelected: boolean\r\n  otherSelected: boolean\r\n  style: CSSProperties\r\n}) {\r\n  const { account } = useActiveWeb3React()\r\n  const key = currencyKey(currency)\r\n  const selectedTokenList = useCombinedActiveList()\r\n  const isOnSelectedList = isTokenOnList(selectedTokenList, currency)\r\n  const customAdded = useIsUserAddedToken(currency)\r\n  const balance = useCurrencyBalance(account ?? undefined, currency)\r\n\r\n  // only show add or remove buttons if not on selected list\r\n  return (\r\n    <MenuItem\r\n      style={style}\r\n      className={`token-item-${key}`}\r\n      onClick={() => (isSelected ? null : onSelect())}\r\n      disabled={isSelected}\r\n      selected={otherSelected}\r\n    >\r\n      <CurrencyLogo currency={currency} size=\"24px\" />\r\n      <Column>\r\n        <Text bold>{currency.symbol}</Text>\r\n        <Text color=\"textSubtle\" small ellipsis maxWidth=\"200px\">\r\n          {!isOnSelectedList && customAdded && 'Added by user •'} {currency.name}\r\n        </Text>\r\n      </Column>\r\n      <RowFixed style={{ justifySelf: 'flex-end' }}>\r\n        {balance ? <Balance balance={balance} /> : account ? <CircleLoader /> : null}\r\n      </RowFixed>\r\n    </MenuItem>\r\n  )\r\n}\r\n\r\nexport default function CurrencyList({\r\n  height,\r\n  currencies,\r\n  selectedCurrency,\r\n  onCurrencySelect,\r\n  otherCurrency,\r\n  fixedListRef,\r\n  showETH,\r\n  showImportView,\r\n  setImportToken,\r\n  breakIndex,\r\n}: {\r\n  height: number\r\n  currencies: Currency[]\r\n  selectedCurrency?: Currency | null\r\n  onCurrencySelect: (currency: Currency) => void\r\n  otherCurrency?: Currency | null\r\n  fixedListRef?: MutableRefObject<FixedSizeList | undefined>\r\n  showETH: boolean\r\n  showImportView: () => void\r\n  setImportToken: (token: Token) => void\r\n  breakIndex: number | undefined\r\n}) {\r\n  const itemData: (Currency | undefined)[] = useMemo(() => {\r\n    let formatted: (Currency | undefined)[] = showETH ? [Currency.ETHER, ...currencies] : currencies\r\n    if (breakIndex !== undefined) {\r\n      formatted = [...formatted.slice(0, breakIndex), undefined, ...formatted.slice(breakIndex, formatted.length)]\r\n    }\r\n    return formatted\r\n  }, [breakIndex, currencies, showETH])\r\n\r\n  const { chainId } = useActiveWeb3React()\r\n\r\n  const { t } = useTranslation()\r\n\r\n  const inactiveTokens: {\r\n    [address: string]: Token\r\n  } = useAllInactiveTokens()\r\n\r\n  const Row = useCallback(\r\n    ({ data, index, style }) => {\r\n      const currency: Currency = data[index]\r\n      const isSelected = Boolean(selectedCurrency && currencyEquals(selectedCurrency, currency))\r\n      const otherSelected = Boolean(otherCurrency && currencyEquals(otherCurrency, currency))\r\n      const handleSelect = () => onCurrencySelect(currency)\r\n\r\n      const token = wrappedCurrency(currency, chainId)\r\n\r\n      const showImport = inactiveTokens && token && Object.keys(inactiveTokens).includes(token.address)\r\n\r\n      if (index === breakIndex || !data) {\r\n        return (\r\n          <FixedContentRow style={style}>\r\n            <LightGreyCard padding=\"8px 12px\" borderRadius=\"8px\">\r\n              <RowBetween>\r\n                <Text small>{t('Expanded results from inactive Token Lists')}</Text>\r\n                <QuestionHelper\r\n                  text={t(\r\n                    \"Tokens from inactive lists. Import specific tokens below or click 'Manage' to activate more lists.\",\r\n                  )}\r\n                  ml=\"4px\"\r\n                />\r\n              </RowBetween>\r\n            </LightGreyCard>\r\n          </FixedContentRow>\r\n        )\r\n      }\r\n\r\n      if (showImport && token) {\r\n        return (\r\n          <ImportRow style={style} token={token} showImportView={showImportView} setImportToken={setImportToken} dim />\r\n        )\r\n      }\r\n      return (\r\n        <CurrencyRow\r\n          style={style}\r\n          currency={currency}\r\n          isSelected={isSelected}\r\n          onSelect={handleSelect}\r\n          otherSelected={otherSelected}\r\n        />\r\n      )\r\n    },\r\n    [\r\n      chainId,\r\n      inactiveTokens,\r\n      onCurrencySelect,\r\n      otherCurrency,\r\n      selectedCurrency,\r\n      setImportToken,\r\n      showImportView,\r\n      breakIndex,\r\n      t,\r\n    ],\r\n  )\r\n\r\n  const itemKey = useCallback((index: number, data: any) => currencyKey(data[index]), [])\r\n\r\n  return (\r\n    <FixedSizeList\r\n      height={height}\r\n      ref={fixedListRef as any}\r\n      width=\"100%\"\r\n      itemData={itemData}\r\n      itemCount={itemData.length}\r\n      itemSize={56}\r\n      itemKey={itemKey}\r\n    >\r\n      {Row}\r\n    </FixedSizeList>\r\n  )\r\n}\r\n","import { Token, TokenAmount } from '@pancakeswap/sdk'\r\nimport { useMemo } from 'react'\r\nimport { useAllTokenBalances } from '../../state/wallet/hooks'\r\n\r\n// compare two token amounts with highest one coming first\r\nfunction balanceComparator(balanceA?: TokenAmount, balanceB?: TokenAmount) {\r\n  if (balanceA && balanceB) {\r\n    return balanceA.greaterThan(balanceB) ? -1 : balanceA.equalTo(balanceB) ? 0 : 1\r\n  }\r\n  if (balanceA && balanceA.greaterThan('0')) {\r\n    return -1\r\n  }\r\n  if (balanceB && balanceB.greaterThan('0')) {\r\n    return 1\r\n  }\r\n  return 0\r\n}\r\n\r\nfunction getTokenComparator(balances: {\r\n  [tokenAddress: string]: TokenAmount | undefined\r\n}): (tokenA: Token, tokenB: Token) => number {\r\n  return function sortTokens(tokenA: Token, tokenB: Token): number {\r\n    // -1 = a is first\r\n    // 1 = b is first\r\n\r\n    // sort by balances\r\n    const balanceA = balances[tokenA.address]\r\n    const balanceB = balances[tokenB.address]\r\n\r\n    const balanceComp = balanceComparator(balanceA, balanceB)\r\n    if (balanceComp !== 0) return balanceComp\r\n\r\n    if (tokenA.symbol && tokenB.symbol) {\r\n      // sort by symbol\r\n      return tokenA.symbol.toLowerCase() < tokenB.symbol.toLowerCase() ? -1 : 1\r\n    }\r\n    return tokenA.symbol ? -1 : tokenB.symbol ? -1 : 0\r\n  }\r\n}\r\n\r\nfunction useTokenComparator(inverted: boolean): (tokenA: Token, tokenB: Token) => number {\r\n  const balances = useAllTokenBalances()\r\n  const comparator = useMemo(() => getTokenComparator(balances ?? {}), [balances])\r\n  return useMemo(() => {\r\n    if (inverted) {\r\n      return (tokenA: Token, tokenB: Token) => comparator(tokenA, tokenB) * -1\r\n    }\r\n    return comparator\r\n  }, [inverted, comparator])\r\n}\r\n\r\nexport default useTokenComparator\r\n","import React, { KeyboardEvent, RefObject, useCallback, useMemo, useRef, useState, useEffect } from 'react'\r\nimport { Currency, ETHER, Token } from '@pancakeswap/sdk'\r\nimport { Text, Input, Box } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { FixedSizeList } from 'react-window'\r\nimport { useAudioModeManager } from 'state/user/hooks'\r\nimport useDebounce from 'hooks/useDebounce'\r\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\r\nimport { useAllTokens, useToken, useIsUserAddedToken, useFoundOnInactiveList } from '../../hooks/Tokens'\r\nimport { isAddress } from '../../utils'\r\nimport Column, { AutoColumn } from '../Layout/Column'\r\nimport Row from '../Layout/Row'\r\nimport CommonBases from './CommonBases'\r\nimport CurrencyList from './CurrencyList'\r\nimport { filterTokens, useSortedTokensByQuery } from './filtering'\r\nimport useTokenComparator from './sorting'\r\n\r\nimport ImportRow from './ImportRow'\r\n\r\ninterface CurrencySearchProps {\r\n  selectedCurrency?: Currency | null\r\n  onCurrencySelect: (currency: Currency) => void\r\n  otherSelectedCurrency?: Currency | null\r\n  showCommonBases?: boolean\r\n  showImportView: () => void\r\n  setImportToken: (token: Token) => void\r\n}\r\n\r\nconst swapSound = new Audio('swap.mp3')\r\n\r\nfunction CurrencySearch({\r\n  selectedCurrency,\r\n  onCurrencySelect,\r\n  otherSelectedCurrency,\r\n  showCommonBases,\r\n  showImportView,\r\n  setImportToken,\r\n}: CurrencySearchProps) {\r\n  const { t } = useTranslation()\r\n  const { chainId } = useActiveWeb3React()\r\n\r\n  // refs for fixed size lists\r\n  const fixedList = useRef<FixedSizeList>()\r\n\r\n  const [searchQuery, setSearchQuery] = useState<string>('')\r\n  const debouncedQuery = useDebounce(searchQuery, 200)\r\n\r\n  const [invertSearchOrder] = useState<boolean>(false)\r\n\r\n  const allTokens = useAllTokens()\r\n\r\n  // if they input an address, use it\r\n  const searchToken = useToken(debouncedQuery)\r\n  const searchTokenIsAdded = useIsUserAddedToken(searchToken)\r\n\r\n  const [audioPlay] = useAudioModeManager()\r\n\r\n  const showETH: boolean = useMemo(() => {\r\n    const s = debouncedQuery.toLowerCase().trim()\r\n    return s === '' || s === 'b' || s === 'bn' || s === 'bnb'\r\n  }, [debouncedQuery])\r\n\r\n  const tokenComparator = useTokenComparator(invertSearchOrder)\r\n\r\n  const filteredTokens: Token[] = useMemo(() => {\r\n    return filterTokens(Object.values(allTokens), debouncedQuery)\r\n  }, [allTokens, debouncedQuery])\r\n\r\n  const sortedTokens: Token[] = useMemo(() => {\r\n    return filteredTokens.sort(tokenComparator)\r\n  }, [filteredTokens, tokenComparator])\r\n\r\n  const filteredSortedTokens = useSortedTokensByQuery(sortedTokens, debouncedQuery)\r\n\r\n  const handleCurrencySelect = useCallback(\r\n    (currency: Currency) => {\r\n      onCurrencySelect(currency)\r\n      if (audioPlay) {\r\n        swapSound.play()\r\n      }\r\n    },\r\n    [audioPlay, onCurrencySelect],\r\n  )\r\n\r\n  // manage focus on modal show\r\n  const inputRef = useRef<HTMLInputElement>()\r\n\r\n  useEffect(() => {\r\n    inputRef.current.focus()\r\n  }, [])\r\n\r\n  const handleInput = useCallback((event) => {\r\n    const input = event.target.value\r\n    const checksummedInput = isAddress(input)\r\n    setSearchQuery(checksummedInput || input)\r\n    fixedList.current?.scrollTo(0)\r\n  }, [])\r\n\r\n  const handleEnter = useCallback(\r\n    (e: KeyboardEvent<HTMLInputElement>) => {\r\n      if (e.key === 'Enter') {\r\n        const s = debouncedQuery.toLowerCase().trim()\r\n        if (s === 'bnb') {\r\n          handleCurrencySelect(ETHER)\r\n        } else if (filteredSortedTokens.length > 0) {\r\n          if (\r\n            filteredSortedTokens[0].symbol?.toLowerCase() === debouncedQuery.trim().toLowerCase() ||\r\n            filteredSortedTokens.length === 1\r\n          ) {\r\n            handleCurrencySelect(filteredSortedTokens[0])\r\n          }\r\n        }\r\n      }\r\n    },\r\n    [filteredSortedTokens, handleCurrencySelect, debouncedQuery],\r\n  )\r\n\r\n  // if no results on main list, show option to expand into inactive\r\n  const inactiveTokens = useFoundOnInactiveList(debouncedQuery)\r\n  const filteredInactiveTokens: Token[] = useSortedTokensByQuery(inactiveTokens, debouncedQuery)\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <AutoColumn gap=\"16px\">\r\n          <Row>\r\n            <Input\r\n              id=\"token-search-input\"\r\n              placeholder={t('Search name or paste address')}\r\n              scale=\"lg\"\r\n              autoComplete=\"off\"\r\n              value={searchQuery}\r\n              ref={inputRef as RefObject<HTMLInputElement>}\r\n              onChange={handleInput}\r\n              onKeyDown={handleEnter}\r\n            />\r\n          </Row>\r\n          {showCommonBases && (\r\n            <CommonBases chainId={chainId} onSelect={handleCurrencySelect} selectedCurrency={selectedCurrency} />\r\n          )}\r\n        </AutoColumn>\r\n        {searchToken && !searchTokenIsAdded ? (\r\n          <Column style={{ padding: '20px 0', height: '100%' }}>\r\n            <ImportRow token={searchToken} showImportView={showImportView} setImportToken={setImportToken} />\r\n          </Column>\r\n        ) : filteredSortedTokens?.length > 0 || filteredInactiveTokens?.length > 0 ? (\r\n          <Box margin=\"24px -24px\">\r\n            <CurrencyList\r\n              height={390}\r\n              showETH={showETH}\r\n              currencies={\r\n                filteredInactiveTokens ? filteredSortedTokens.concat(filteredInactiveTokens) : filteredSortedTokens\r\n              }\r\n              breakIndex={inactiveTokens && filteredSortedTokens ? filteredSortedTokens.length : undefined}\r\n              onCurrencySelect={handleCurrencySelect}\r\n              otherCurrency={otherSelectedCurrency}\r\n              selectedCurrency={selectedCurrency}\r\n              fixedListRef={fixedList}\r\n              showImportView={showImportView}\r\n              setImportToken={setImportToken}\r\n            />\r\n          </Box>\r\n        ) : (\r\n          <Column style={{ padding: '20px', height: '100%' }}>\r\n            <Text color=\"textSubtle\" textAlign=\"center\" mb=\"20px\">\r\n              {t('No results found.')}\r\n            </Text>\r\n          </Column>\r\n        )}\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default CurrencySearch\r\n","import React, { useState } from 'react'\r\nimport { Token, Currency } from '@pancakeswap/sdk'\r\nimport { Button, Text, ErrorIcon, Flex, Message, Checkbox, Link, Tag, Grid } from '@pancakeswap/uikit'\r\nimport { AutoColumn } from 'components/Layout/Column'\r\nimport { useAddUserToken } from 'state/user/hooks'\r\nimport { getBscScanLink } from 'utils'\r\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\r\nimport { useCombinedInactiveList } from 'state/lists/hooks'\r\nimport { ListLogo } from 'components/Logo'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\ninterface ImportProps {\r\n  tokens: Token[]\r\n  handleCurrencySelect?: (currency: Currency) => void\r\n}\r\n\r\nfunction ImportToken({ tokens, handleCurrencySelect }: ImportProps) {\r\n  const { chainId } = useActiveWeb3React()\r\n\r\n  const { t } = useTranslation()\r\n\r\n  const [confirmed, setConfirmed] = useState(false)\r\n\r\n  const addToken = useAddUserToken()\r\n\r\n  // use for showing import source on inactive tokens\r\n  const inactiveTokenList = useCombinedInactiveList()\r\n\r\n  return (\r\n    <AutoColumn gap=\"lg\">\r\n      <Message variant=\"warning\">\r\n        <Text>\r\n          {t(\r\n            'Anyone can create a BEP20 token on BSC with any name, including creating fake versions of existing tokens and tokens that claim to represent projects that do not have a token.',\r\n          )}\r\n          <br />\r\n          <br />\r\n          {t('If you purchase an arbitrary token, you may be unable to sell it back.')}\r\n        </Text>\r\n      </Message>\r\n\r\n      {tokens.map((token) => {\r\n        const list = chainId && inactiveTokenList?.[chainId]?.[token.address]?.list\r\n        const address = token.address\r\n          ? `${token.address.substring(0, 6)}...${token.address.substring(token.address.length - 4)}`\r\n          : null\r\n        return (\r\n          <Grid key={token.address} gridTemplateRows=\"1fr 1fr 1fr\" gridGap=\"4px\">\r\n            {list !== undefined ? (\r\n              <Tag\r\n                variant=\"success\"\r\n                outline\r\n                scale=\"sm\"\r\n                startIcon={list.logoURI && <ListLogo logoURI={list.logoURI} size=\"12px\" />}\r\n              >\r\n                {t('via')} {list.name}\r\n              </Tag>\r\n            ) : (\r\n              <Tag variant=\"failure\" outline scale=\"sm\" startIcon={<ErrorIcon color=\"failure\" />}>\r\n                {t('Unknown Source')}\r\n              </Tag>\r\n            )}\r\n            <Flex alignItems=\"center\">\r\n              <Text mr=\"8px\">{token.name}</Text>\r\n              <Text>({token.symbol})</Text>\r\n            </Flex>\r\n            {chainId && (\r\n              <Flex justifyContent=\"space-between\" width=\"100%\">\r\n                <Text mr=\"4px\">{address}</Text>\r\n                <Link href={getBscScanLink(token.address, 'address', chainId)} external>\r\n                  ({t('View on BscScan')})\r\n                </Link>\r\n              </Flex>\r\n            )}\r\n          </Grid>\r\n        )\r\n      })}\r\n\r\n      <Flex justifyContent=\"space-between\" alignItems=\"center\">\r\n        <Flex alignItems=\"center\" onClick={() => setConfirmed(!confirmed)}>\r\n          <Checkbox\r\n            scale=\"sm\"\r\n            name=\"confirmed\"\r\n            type=\"checkbox\"\r\n            checked={confirmed}\r\n            onChange={() => setConfirmed(!confirmed)}\r\n          />\r\n          <Text ml=\"8px\" style={{ userSelect: 'none' }}>\r\n            {t('I understand')}\r\n          </Text>\r\n        </Flex>\r\n        <Button\r\n          variant=\"danger\"\r\n          disabled={!confirmed}\r\n          onClick={() => {\r\n            tokens.map((token) => addToken(token))\r\n            if (handleCurrencySelect) {\r\n              handleCurrencySelect(tokens[0])\r\n            }\r\n          }}\r\n          className=\".token-dismiss-button\"\r\n        >\r\n          {t('Import')}\r\n        </Button>\r\n      </Flex>\r\n    </AutoColumn>\r\n  )\r\n}\r\n\r\nexport default ImportToken\r\n","export enum CurrencyModalView {\r\n  search,\r\n  manage,\r\n  importToken,\r\n  importList,\r\n}\r\n\r\nexport default CurrencyModalView\r\n","import React, { memo, useCallback, useMemo, useState, useEffect } from 'react'\r\nimport { Button, Text, CheckmarkIcon, CogIcon, Input, Toggle, LinkExternal, useTooltip } from '@pancakeswap/uikit'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport styled from 'styled-components'\r\nimport { TokenList, Version } from '@uniswap/token-lists'\r\nimport Card from 'components/Card'\r\nimport { UNSUPPORTED_LIST_URLS } from 'config/constants/lists'\r\nimport { parseENSAddress } from 'utils/ENS/parseENSAddress'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport useFetchListCallback from '../../hooks/useFetchListCallback'\r\n\r\nimport { AppDispatch, AppState } from '../../state'\r\nimport { acceptListUpdate, removeList, disableList, enableList } from '../../state/lists/actions'\r\nimport { useIsListActive, useAllLists, useActiveListUrls } from '../../state/lists/hooks'\r\nimport uriToHttp from '../../utils/uriToHttp'\r\n\r\nimport Column, { AutoColumn } from '../Layout/Column'\r\nimport { ListLogo } from '../Logo'\r\nimport Row, { RowFixed, RowBetween } from '../Layout/Row'\r\nimport { CurrencyModalView } from './types'\r\n\r\nfunction listVersionLabel(version: Version): string {\r\n  return `v${version.major}.${version.minor}.${version.patch}`\r\n}\r\n\r\nconst Wrapper = styled(Column)`\r\n  width: 100%;\r\n  height: 100%;\r\n`\r\n\r\nconst RowWrapper = styled(Row)<{ active: boolean }>`\r\n  background-color: ${({ active, theme }) => (active ? `${theme.colors.success}19` : 'transparent')};\r\n  border: solid 1px;\r\n  border-color: ${({ active, theme }) => (active ? theme.colors.success : theme.colors.tertiary)};\r\n  transition: 200ms;\r\n  align-items: center;\r\n  padding: 1rem;\r\n  border-radius: 20px;\r\n`\r\n\r\nfunction listUrlRowHTMLId(listUrl: string) {\r\n  return `list-row-${listUrl.replace(/\\./g, '-')}`\r\n}\r\n\r\nconst ListRow = memo(function ListRow({ listUrl }: { listUrl: string }) {\r\n  const listsByUrl = useSelector<AppState, AppState['lists']['byUrl']>((state) => state.lists.byUrl)\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  const { current: list, pendingUpdate: pending } = listsByUrl[listUrl]\r\n\r\n  const isActive = useIsListActive(listUrl)\r\n\r\n  const { t } = useTranslation()\r\n\r\n  const handleAcceptListUpdate = useCallback(() => {\r\n    if (!pending) return\r\n    dispatch(acceptListUpdate(listUrl))\r\n  }, [dispatch, listUrl, pending])\r\n\r\n  const handleRemoveList = useCallback(() => {\r\n    // eslint-disable-next-line no-alert\r\n    if (window.confirm('Please confirm you would like to remove this list')) {\r\n      dispatch(removeList(listUrl))\r\n    }\r\n  }, [dispatch, listUrl])\r\n\r\n  const handleEnableList = useCallback(() => {\r\n    dispatch(enableList(listUrl))\r\n  }, [dispatch, listUrl])\r\n\r\n  const handleDisableList = useCallback(() => {\r\n    dispatch(disableList(listUrl))\r\n  }, [dispatch, listUrl])\r\n\r\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\r\n    <div>\r\n      <Text>{list && listVersionLabel(list.version)}</Text>\r\n      <LinkExternal external href={`https://tokenlists.org/token-list?url=${listUrl}`}>\r\n        {t('See')}\r\n      </LinkExternal>\r\n      <Button variant=\"danger\" scale=\"xs\" onClick={handleRemoveList} disabled={Object.keys(listsByUrl).length === 1}>\r\n        {t('Remove')}\r\n      </Button>\r\n      {pending && (\r\n        <Button variant=\"text\" onClick={handleAcceptListUpdate} style={{ fontSize: '12px' }}>\r\n          {t('Update list')}\r\n        </Button>\r\n      )}\r\n    </div>,\r\n    { placement: 'right-end', trigger: 'click' },\r\n  )\r\n\r\n  if (!list) return null\r\n\r\n  return (\r\n    <RowWrapper active={isActive} key={listUrl} id={listUrlRowHTMLId(listUrl)}>\r\n      {tooltipVisible && tooltip}\r\n      {list.logoURI ? (\r\n        <ListLogo size=\"40px\" style={{ marginRight: '1rem' }} logoURI={list.logoURI} alt={`${list.name} list logo`} />\r\n      ) : (\r\n        <div style={{ width: '24px', height: '24px', marginRight: '1rem' }} />\r\n      )}\r\n      <Column style={{ flex: '1' }}>\r\n        <Row>\r\n          <Text bold>{list.name}</Text>\r\n        </Row>\r\n        <RowFixed mt=\"4px\">\r\n          <Text fontSize=\"12px\" mr=\"6px\" textTransform=\"lowercase\">\r\n            {list.tokens.length} {t('Tokens')}\r\n          </Text>\r\n          <span ref={targetRef}>\r\n            <CogIcon color=\"text\" width=\"12px\" />\r\n          </span>\r\n        </RowFixed>\r\n      </Column>\r\n      <Toggle\r\n        checked={isActive}\r\n        onChange={() => {\r\n          if (isActive) {\r\n            handleDisableList()\r\n          } else {\r\n            handleEnableList()\r\n          }\r\n        }}\r\n      />\r\n    </RowWrapper>\r\n  )\r\n})\r\n\r\nconst ListContainer = styled.div`\r\n  padding: 1rem 0;\r\n  height: 100%;\r\n  overflow: auto;\r\n`\r\n\r\nfunction ManageLists({\r\n  setModalView,\r\n  setImportList,\r\n  setListUrl,\r\n}: {\r\n  setModalView: (view: CurrencyModalView) => void\r\n  setImportList: (list: TokenList) => void\r\n  setListUrl: (url: string) => void\r\n}) {\r\n  const [listUrlInput, setListUrlInput] = useState<string>('')\r\n\r\n  const { t } = useTranslation()\r\n\r\n  const lists = useAllLists()\r\n\r\n  // sort by active but only if not visible\r\n  const activeListUrls = useActiveListUrls()\r\n  const [activeCopy, setActiveCopy] = useState<string[] | undefined>()\r\n  useEffect(() => {\r\n    if (!activeCopy && activeListUrls) {\r\n      setActiveCopy(activeListUrls)\r\n    }\r\n  }, [activeCopy, activeListUrls])\r\n\r\n  const handleInput = useCallback((e) => {\r\n    setListUrlInput(e.target.value)\r\n  }, [])\r\n\r\n  const fetchList = useFetchListCallback()\r\n\r\n  const validUrl: boolean = useMemo(() => {\r\n    return uriToHttp(listUrlInput).length > 0 || Boolean(parseENSAddress(listUrlInput))\r\n  }, [listUrlInput])\r\n\r\n  const sortedLists = useMemo(() => {\r\n    const listUrls = Object.keys(lists)\r\n    return listUrls\r\n      .filter((listUrl) => {\r\n        // only show loaded lists, hide unsupported lists\r\n        return Boolean(lists[listUrl].current) && !UNSUPPORTED_LIST_URLS.includes(listUrl)\r\n      })\r\n      .sort((u1, u2) => {\r\n        const { current: l1 } = lists[u1]\r\n        const { current: l2 } = lists[u2]\r\n\r\n        // first filter on active lists\r\n        if (activeCopy?.includes(u1) && !activeCopy?.includes(u2)) {\r\n          return -1\r\n        }\r\n        if (!activeCopy?.includes(u1) && activeCopy?.includes(u2)) {\r\n          return 1\r\n        }\r\n\r\n        if (l1 && l2) {\r\n          return l1.name.toLowerCase() < l2.name.toLowerCase()\r\n            ? -1\r\n            : l1.name.toLowerCase() === l2.name.toLowerCase()\r\n            ? 0\r\n            : 1\r\n        }\r\n        if (l1) return -1\r\n        if (l2) return 1\r\n        return 0\r\n      })\r\n  }, [lists, activeCopy])\r\n\r\n  // temporary fetched list for import flow\r\n  const [tempList, setTempList] = useState<TokenList>()\r\n  const [addError, setAddError] = useState<string | undefined>()\r\n\r\n  useEffect(() => {\r\n    async function fetchTempList() {\r\n      fetchList(listUrlInput, false)\r\n        .then((list) => setTempList(list))\r\n        .catch(() => setAddError('Error importing list'))\r\n    }\r\n    // if valid url, fetch details for card\r\n    if (validUrl) {\r\n      fetchTempList()\r\n    } else {\r\n      setTempList(undefined)\r\n      if (listUrlInput !== '') {\r\n        setAddError('Enter valid list location')\r\n      }\r\n    }\r\n\r\n    // reset error\r\n    if (listUrlInput === '') {\r\n      setAddError(undefined)\r\n    }\r\n  }, [fetchList, listUrlInput, validUrl])\r\n\r\n  // check if list is already imported\r\n  const isImported = Object.keys(lists).includes(listUrlInput)\r\n\r\n  // set list values and have parent modal switch to import list view\r\n  const handleImport = useCallback(() => {\r\n    if (!tempList) return\r\n    setImportList(tempList)\r\n    setModalView(CurrencyModalView.importList)\r\n    setListUrl(listUrlInput)\r\n  }, [listUrlInput, setImportList, setListUrl, setModalView, tempList])\r\n\r\n  return (\r\n    <Wrapper>\r\n      <AutoColumn gap=\"14px\">\r\n        <Row>\r\n          <Input\r\n            id=\"list-add-input\"\r\n            scale=\"lg\"\r\n            placeholder={t('https:// or ipfs:// or ENS name')}\r\n            value={listUrlInput}\r\n            onChange={handleInput}\r\n          />\r\n        </Row>\r\n        {addError ? (\r\n          <Text color=\"failure\" style={{ textOverflow: 'ellipsis', overflow: 'hidden' }}>\r\n            {addError}\r\n          </Text>\r\n        ) : null}\r\n      </AutoColumn>\r\n      {tempList && (\r\n        <AutoColumn style={{ paddingTop: 0 }}>\r\n          <Card padding=\"12px 20px\">\r\n            <RowBetween>\r\n              <RowFixed>\r\n                {tempList.logoURI && <ListLogo logoURI={tempList.logoURI} size=\"40px\" />}\r\n                <AutoColumn gap=\"4px\" style={{ marginLeft: '20px' }}>\r\n                  <Text bold>{tempList.name}</Text>\r\n                  <Text color=\"textSubtle\" small textTransform=\"lowercase\">\r\n                    {tempList.tokens.length} {t('Tokens')}\r\n                  </Text>\r\n                </AutoColumn>\r\n              </RowFixed>\r\n              {isImported ? (\r\n                <RowFixed>\r\n                  <CheckmarkIcon width=\"16px\" mr=\"10px\" />\r\n                  <Text>{t('Loaded')}</Text>\r\n                </RowFixed>\r\n              ) : (\r\n                <Button width=\"fit-content\" onClick={handleImport}>\r\n                  {t('Import')}\r\n                </Button>\r\n              )}\r\n            </RowBetween>\r\n          </Card>\r\n        </AutoColumn>\r\n      )}\r\n      <ListContainer>\r\n        <AutoColumn gap=\"md\">\r\n          {sortedLists.map((listUrl) => (\r\n            <ListRow key={listUrl} listUrl={listUrl} />\r\n          ))}\r\n        </AutoColumn>\r\n      </ListContainer>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default ManageLists\r\n","import React, { useRef, RefObject, useCallback, useState, useMemo } from 'react'\r\nimport { Token } from '@pancakeswap/sdk'\r\nimport { Text, Button, CloseIcon, IconButton, LinkExternal, Input, Link } from '@pancakeswap/uikit'\r\nimport styled from 'styled-components'\r\nimport Row, { RowBetween, RowFixed } from 'components/Layout/Row'\r\nimport { useToken } from 'hooks/Tokens'\r\nimport { useRemoveUserAddedToken } from 'state/user/hooks'\r\nimport useUserAddedTokens from 'state/user/hooks/useUserAddedTokens'\r\nimport { CurrencyLogo } from 'components/Logo'\r\nimport { getBscScanLink, isAddress } from 'utils'\r\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport Column, { AutoColumn } from '../Layout/Column'\r\nimport ImportRow from './ImportRow'\r\nimport { CurrencyModalView } from './types'\r\n\r\nconst Wrapper = styled.div`\r\n  width: 100%;\r\n  height: calc(100% - 60px);\r\n  position: relative;\r\n  padding-bottom: 60px;\r\n`\r\n\r\nconst Footer = styled.div`\r\n  position: absolute;\r\n  bottom: 0;\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`\r\n\r\nexport default function ManageTokens({\r\n  setModalView,\r\n  setImportToken,\r\n}: {\r\n  setModalView: (view: CurrencyModalView) => void\r\n  setImportToken: (token: Token) => void\r\n}) {\r\n  const { chainId } = useActiveWeb3React()\r\n\r\n  const { t } = useTranslation()\r\n\r\n  const [searchQuery, setSearchQuery] = useState<string>('')\r\n\r\n  // manage focus on modal show\r\n  const inputRef = useRef<HTMLInputElement>()\r\n  const handleInput = useCallback((event) => {\r\n    const input = event.target.value\r\n    const checksummedInput = isAddress(input)\r\n    setSearchQuery(checksummedInput || input)\r\n  }, [])\r\n\r\n  // if they input an address, use it\r\n  const searchToken = useToken(searchQuery)\r\n\r\n  // all tokens for local list\r\n  const userAddedTokens: Token[] = useUserAddedTokens()\r\n  const removeToken = useRemoveUserAddedToken()\r\n\r\n  const handleRemoveAll = useCallback(() => {\r\n    if (chainId && userAddedTokens) {\r\n      userAddedTokens.map((token) => {\r\n        return removeToken(chainId, token.address)\r\n      })\r\n    }\r\n  }, [removeToken, userAddedTokens, chainId])\r\n\r\n  const tokenList = useMemo(() => {\r\n    return (\r\n      chainId &&\r\n      userAddedTokens.map((token) => (\r\n        <RowBetween key={token.address} width=\"100%\">\r\n          <RowFixed>\r\n            <CurrencyLogo currency={token} size=\"20px\" />\r\n            <Link external href={getBscScanLink(token.address, 'address', chainId)} color=\"textSubtle\" ml=\"10px\">\r\n              {token.symbol}\r\n            </Link>\r\n          </RowFixed>\r\n          <RowFixed>\r\n            <IconButton variant=\"text\" onClick={() => removeToken(chainId, token.address)}>\r\n              <CloseIcon />\r\n            </IconButton>\r\n            <LinkExternal href={getBscScanLink(token.address, 'address', chainId)} />\r\n          </RowFixed>\r\n        </RowBetween>\r\n      ))\r\n    )\r\n  }, [userAddedTokens, chainId, removeToken])\r\n\r\n  const isAddressValid = searchQuery === '' || isAddress(searchQuery)\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Column style={{ width: '100%', flex: '1 1' }}>\r\n        <AutoColumn gap=\"14px\">\r\n          <Row>\r\n            <Input\r\n              id=\"token-search-input\"\r\n              scale=\"lg\"\r\n              placeholder=\"0x0000\"\r\n              value={searchQuery}\r\n              autoComplete=\"off\"\r\n              ref={inputRef as RefObject<HTMLInputElement>}\r\n              onChange={handleInput}\r\n              isWarning={!isAddressValid}\r\n            />\r\n          </Row>\r\n          {!isAddressValid && <Text color=\"failure\">{t('Enter valid token address')}</Text>}\r\n          {searchToken && (\r\n            <ImportRow\r\n              token={searchToken}\r\n              showImportView={() => setModalView(CurrencyModalView.importToken)}\r\n              setImportToken={setImportToken}\r\n              style={{ height: 'fit-content' }}\r\n            />\r\n          )}\r\n        </AutoColumn>\r\n        {tokenList}\r\n        <Footer>\r\n          <Text bold color=\"textSubtle\">\r\n            {userAddedTokens?.length} {userAddedTokens.length === 1 ? t('Custom Token') : t('Custom Tokens')}\r\n          </Text>\r\n          {userAddedTokens.length > 0 && (\r\n            <Button variant=\"tertiary\" onClick={handleRemoveAll}>\r\n              {t('Clear all')}\r\n            </Button>\r\n          )}\r\n        </Footer>\r\n      </Column>\r\n    </Wrapper>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { Token } from '@pancakeswap/sdk'\r\nimport { ButtonMenu, ButtonMenuItem, ModalBody } from '@pancakeswap/uikit'\r\nimport styled from 'styled-components'\r\nimport { TokenList } from '@uniswap/token-lists'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport ManageLists from './ManageLists'\r\nimport ManageTokens from './ManageTokens'\r\nimport { CurrencyModalView } from './types'\r\n\r\nconst StyledButtonMenu = styled(ButtonMenu)`\r\n  width: 100%;\r\n`\r\n\r\nexport default function Manage({\r\n  setModalView,\r\n  setImportList,\r\n  setImportToken,\r\n  setListUrl,\r\n}: {\r\n  setModalView: (view: CurrencyModalView) => void\r\n  setImportToken: (token: Token) => void\r\n  setImportList: (list: TokenList) => void\r\n  setListUrl: (url: string) => void\r\n}) {\r\n  const [showLists, setShowLists] = useState(true)\r\n\r\n  const { t } = useTranslation()\r\n\r\n  return (\r\n    <ModalBody>\r\n      <StyledButtonMenu\r\n        activeIndex={showLists ? 0 : 1}\r\n        onItemClick={() => setShowLists((prev) => !prev)}\r\n        scale=\"sm\"\r\n        variant=\"subtle\"\r\n        mb=\"32px\"\r\n      >\r\n        <ButtonMenuItem width=\"50%\">{t('Lists')}</ButtonMenuItem>\r\n        <ButtonMenuItem width=\"50%\">{t('Tokens')}</ButtonMenuItem>\r\n      </StyledButtonMenu>\r\n      {showLists ? (\r\n        <ManageLists setModalView={setModalView} setImportList={setImportList} setListUrl={setListUrl} />\r\n      ) : (\r\n        <ManageTokens setModalView={setModalView} setImportToken={setImportToken} />\r\n      )}\r\n    </ModalBody>\r\n  )\r\n}\r\n","import React, { useState, useCallback } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Button, Text, Link, Flex, Checkbox, Message } from '@pancakeswap/uikit'\r\nimport Card from 'components/Card'\r\nimport { AutoColumn } from 'components/Layout/Column'\r\nimport { RowBetween, RowFixed } from 'components/Layout/Row'\r\nimport useTheme from 'hooks/useTheme'\r\nimport { ListLogo } from 'components/Logo'\r\nimport { TokenList } from '@uniswap/token-lists'\r\nimport { useDispatch } from 'react-redux'\r\nimport { AppDispatch } from 'state'\r\nimport useFetchListCallback from 'hooks/useFetchListCallback'\r\nimport { removeList, enableList } from 'state/lists/actions'\r\nimport { useAllLists } from 'state/lists/hooks'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\ninterface ImportProps {\r\n  listURL: string\r\n  list: TokenList\r\n  onImport: () => void\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n`\r\n\r\nconst TextDot = styled.div`\r\n  height: 3px;\r\n  width: 3px;\r\n  background-color: ${({ theme }) => theme.colors.text};\r\n  border-radius: 50%;\r\n`\r\n\r\nfunction ImportList({ listURL, list, onImport }: ImportProps) {\r\n  const { theme } = useTheme()\r\n  const dispatch = useDispatch<AppDispatch>()\r\n\r\n  const { t } = useTranslation()\r\n\r\n  // user must accept\r\n  const [confirmed, setConfirmed] = useState(false)\r\n\r\n  const lists = useAllLists()\r\n  const fetchList = useFetchListCallback()\r\n\r\n  // monitor is list is loading\r\n  const adding = Boolean(lists[listURL]?.loadingRequestId)\r\n  const [addError, setAddError] = useState<string | null>(null)\r\n\r\n  const handleAddList = useCallback(() => {\r\n    if (adding) return\r\n    setAddError(null)\r\n    fetchList(listURL)\r\n      .then(() => {\r\n        dispatch(enableList(listURL))\r\n        onImport()\r\n      })\r\n      .catch((error) => {\r\n        setAddError(error.message)\r\n        dispatch(removeList(listURL))\r\n      })\r\n  }, [adding, dispatch, fetchList, listURL, onImport])\r\n\r\n  return (\r\n    <Wrapper>\r\n      <AutoColumn gap=\"md\">\r\n        <AutoColumn gap=\"md\">\r\n          <Card padding=\"12px 20px\">\r\n            <RowBetween>\r\n              <RowFixed>\r\n                {list.logoURI && <ListLogo logoURI={list.logoURI} size=\"40px\" />}\r\n                <AutoColumn gap=\"sm\" style={{ marginLeft: '20px' }}>\r\n                  <RowFixed>\r\n                    <Text bold mr=\"6px\">\r\n                      {list.name}\r\n                    </Text>\r\n                    <TextDot />\r\n                    <Text small color=\"textSubtle\" ml=\"6px\">\r\n                      {list.tokens.length} tokens\r\n                    </Text>\r\n                  </RowFixed>\r\n                  <Link\r\n                    small\r\n                    external\r\n                    ellipsis\r\n                    maxWidth=\"90%\"\r\n                    href={`https://tokenlists.org/token-list?url=${listURL}`}\r\n                  >\r\n                    {listURL}\r\n                  </Link>\r\n                </AutoColumn>\r\n              </RowFixed>\r\n            </RowBetween>\r\n          </Card>\r\n\r\n          <Message variant=\"danger\">\r\n            <Flex flexDirection=\"column\">\r\n              <Text fontSize=\"20px\" textAlign=\"center\" color={theme.colors.failure} mb=\"16px\">\r\n                {t('Import at your own risk')}\r\n              </Text>\r\n              <Text color={theme.colors.failure} mb=\"8px\">\r\n                {t(\r\n                  'By adding this list you are implicitly trusting that the data is correct. Anyone can create a list, including creating fake versions of existing lists and lists that claim to represent projects that do not have one.',\r\n                )}\r\n              </Text>\r\n              <Text bold color={theme.colors.failure} mb=\"16px\">\r\n                {typeof 'If you purchase a token from this list, you may not be able to sell it back.'}\r\n              </Text>\r\n              <Flex alignItems=\"center\">\r\n                <Checkbox\r\n                  name=\"confirmed\"\r\n                  type=\"checkbox\"\r\n                  checked={confirmed}\r\n                  onChange={() => setConfirmed(!confirmed)}\r\n                  scale=\"sm\"\r\n                />\r\n                <Text ml=\"10px\" style={{ userSelect: 'none' }}>\r\n                  {t('I understand')}\r\n                </Text>\r\n              </Flex>\r\n            </Flex>\r\n          </Message>\r\n\r\n          <Button disabled={!confirmed} onClick={handleAddList}>\r\n            {t('Import')}\r\n          </Button>\r\n          {addError ? (\r\n            <Text color=\"failure\" style={{ textOverflow: 'ellipsis', overflow: 'hidden' }}>\r\n              {addError}\r\n            </Text>\r\n          ) : null}\r\n        </AutoColumn>\r\n      </AutoColumn>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default ImportList\r\n","import React, { useCallback, useState } from 'react'\r\nimport { Currency, Token } from '@pancakeswap/sdk'\r\nimport {\r\n  ModalContainer,\r\n  ModalHeader,\r\n  ModalTitle,\r\n  ModalBackButton,\r\n  ModalCloseButton,\r\n  ModalBody,\r\n  InjectedModalProps,\r\n  Heading,\r\n  Button,\r\n} from '@pancakeswap/uikit'\r\nimport styled from 'styled-components'\r\nimport usePrevious from 'hooks/usePreviousValue'\r\nimport { TokenList } from '@uniswap/token-lists'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport CurrencySearch from './CurrencySearch'\r\nimport ImportToken from './ImportToken'\r\nimport Manage from './Manage'\r\nimport ImportList from './ImportList'\r\nimport { CurrencyModalView } from './types'\r\n\r\nconst Footer = styled.div`\r\n  width: 100%;\r\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\r\n  text-align: center;\r\n`\r\n\r\nconst StyledModalContainer = styled(ModalContainer)`\r\n  max-width: 420px;\r\n  width: 100%;\r\n`\r\n\r\nconst StyledModalBody = styled(ModalBody)`\r\n  padding: 12px 24px;\r\n`\r\n\r\ninterface CurrencySearchModalProps extends InjectedModalProps {\r\n  selectedCurrency?: Currency | null\r\n  onCurrencySelect: (currency: Currency) => void\r\n  otherSelectedCurrency?: Currency | null\r\n  showCommonBases?: boolean\r\n}\r\n\r\nexport default function CurrencySearchModal({\r\n  onDismiss = () => null,\r\n  onCurrencySelect,\r\n  selectedCurrency,\r\n  otherSelectedCurrency,\r\n  showCommonBases = false,\r\n}: CurrencySearchModalProps) {\r\n  const [modalView, setModalView] = useState<CurrencyModalView>(CurrencyModalView.search)\r\n\r\n  const handleCurrencySelect = useCallback(\r\n    (currency: Currency) => {\r\n      onDismiss()\r\n      onCurrencySelect(currency)\r\n    },\r\n    [onDismiss, onCurrencySelect],\r\n  )\r\n\r\n  // for token import view\r\n  const prevView = usePrevious(modalView)\r\n\r\n  // used for import token flow\r\n  const [importToken, setImportToken] = useState<Token | undefined>()\r\n\r\n  // used for import list\r\n  const [importList, setImportList] = useState<TokenList | undefined>()\r\n  const [listURL, setListUrl] = useState<string | undefined>()\r\n\r\n  const { t } = useTranslation()\r\n\r\n  const config = {\r\n    [CurrencyModalView.search]: { title: t('Select a Token'), onBack: undefined },\r\n    [CurrencyModalView.manage]: { title: t('Manage'), onBack: () => setModalView(CurrencyModalView.search) },\r\n    [CurrencyModalView.importToken]: {\r\n      title: t('Import Tokens'),\r\n      onBack: () =>\r\n        setModalView(prevView && prevView !== CurrencyModalView.importToken ? prevView : CurrencyModalView.search),\r\n    },\r\n    [CurrencyModalView.importList]: { title: t('Import List'), onBack: () => setModalView(CurrencyModalView.search) },\r\n  }\r\n\r\n  return (\r\n    <StyledModalContainer minWidth=\"320px\">\r\n      <ModalHeader>\r\n        <ModalTitle>\r\n          {config[modalView].onBack && <ModalBackButton onBack={config[modalView].onBack} />}\r\n          <Heading>{config[modalView].title}</Heading>\r\n        </ModalTitle>\r\n        <ModalCloseButton onDismiss={onDismiss} />\r\n      </ModalHeader>\r\n      <StyledModalBody>\r\n        {modalView === CurrencyModalView.search ? (\r\n          <CurrencySearch\r\n            onCurrencySelect={handleCurrencySelect}\r\n            selectedCurrency={selectedCurrency}\r\n            otherSelectedCurrency={otherSelectedCurrency}\r\n            showCommonBases={showCommonBases}\r\n            showImportView={() => setModalView(CurrencyModalView.importToken)}\r\n            setImportToken={setImportToken}\r\n          />\r\n        ) : modalView === CurrencyModalView.importToken && importToken ? (\r\n          <ImportToken tokens={[importToken]} handleCurrencySelect={handleCurrencySelect} />\r\n        ) : modalView === CurrencyModalView.importList && importList && listURL ? (\r\n          <ImportList list={importList} listURL={listURL} onImport={() => setModalView(CurrencyModalView.manage)} />\r\n        ) : modalView === CurrencyModalView.manage ? (\r\n          <Manage\r\n            setModalView={setModalView}\r\n            setImportToken={setImportToken}\r\n            setImportList={setImportList}\r\n            setListUrl={setListUrl}\r\n          />\r\n        ) : (\r\n          ''\r\n        )}\r\n        {modalView === CurrencyModalView.search && (\r\n          <Footer>\r\n            <Button\r\n              scale=\"sm\"\r\n              variant=\"text\"\r\n              onClick={() => setModalView(CurrencyModalView.manage)}\r\n              className=\"list-token-manage-button\"\r\n            >\r\n              {t('Manage Tokens')}\r\n            </Button>\r\n          </Footer>\r\n        )}\r\n      </StyledModalBody>\r\n    </StyledModalContainer>\r\n  )\r\n}\r\n"],"sourceRoot":""}
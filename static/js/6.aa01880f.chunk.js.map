{"version":3,"sources":["views/Pool/index.tsx","components/Layout/Row.tsx","components/Layout/Column.tsx","components/Logo/DoubleLogo.tsx","components/Logo/ListLogo.tsx","utils/getTokenLogoURL.ts","components/Logo/CurrencyLogo.tsx","components/Card/index.tsx","components/Loader/Dots.tsx","utils/currencyId.ts","hooks/useTotalSupply.ts","components/Logo/Logo.tsx","views/Page.tsx","components/PositionCard/index.tsx","components/App/AppHeader.tsx","components/App/AppBody.tsx","hooks/useHttpLocations.ts","hooks/ENS/useENSContentHash.ts","components/Menu/SubNav.tsx"],"names":["Body","styled","CardBody","Pool","account","useActiveWeb3React","t","useTranslation","trackedTokenPairs","useTrackedTokenPairs","tokenPairsWithLiquidityTokens","useMemo","map","tokens","liquidityToken","toV2LiquidityToken","liquidityTokens","tpwlt","useTokenBalancesWithLoadingIndicator","undefined","v2PairsBalances","fetchingV2PairBalances","liquidityTokensWithBalances","filter","address","greaterThan","v2Pairs","usePairs","v2IsLoading","length","some","V2Pair","allV2PairsWithLiquidity","v2Pair","Boolean","style","marginRight","opacity","title","subtitle","id","as","Link","to","width","startIcon","color","alignItems","mb","fontWeight","text","placement","ml","padding","textAlign","index","pair","flexDirection","mt","fontSize","variant","scale","Row","Box","align","justify","border","borderRadius","RowBetween","AutoRow","div","gap","RowFixed","Column","ColumnCenter","AutoColumn","Wrapper","margin","DoubleCurrencyLogo","currency0","currency1","size","CurrencyLogo","currency","toString","StyledListLogo","Logo","ListLogo","logoURI","alt","srcs","useHttpLocations","getTokenLogoURL","StyledLogo","uriLocations","WrappedTokenInfo","ETHER","Token","symbol","Card","theme","colors","background","LightCard","backgroundAlt","LightGreyCard","cardBorder","dropdown","Dots","span","currencyId","Error","useTotalSupply","token","contract","useTokenContract","totalSupply","useSingleCallResult","result","TokenAmount","BAD_SRCS","rest","useState","refresh","src","find","s","onError","i","StyledPage","mediaQueries","xs","sm","lg","Page","children","props","flexGrow","FixedHeightRow","MinimalPositionCard","showUnwrapped","token0","unwrappedToken","token1","showMore","setShowMore","userPoolBalance","useTokenBalance","totalPoolTokens","poolTokenPercentage","JSBI","greaterThanOrEqual","raw","Percent","getLiquidityValue","token0Deposited","token1Deposited","BigInt","bold","onClick","small","toSignificant","toFixed","asset","role","FullPositionCard","justifyContent","p","BIG_INT_ZERO","AppHeaderContainer","Flex","cardDivider","AppHeader","helper","backTo","noConfig","useExpertModeManager","expertMode","mr","QuestionHelper","show","GlobalSettings","BodyWrapper","AppBody","uri","ens","parseENSAddress","resolvedContentHash","ensName","ensNodeArgument","namehash","error","registrarContract","useENSRegistrarContract","resolverAddressResult","resolverAddress","resolverContract","useENSResolverContract","isZero","contenthash","loading","useENSContentHash","uriToHttp","contenthashToUri","StyledNav","nav","getActiveIndex","pathname","includes","Nav","location","useLocation","activeIndex"],"mappings":"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","file":"static/js/6.aa01880f.chunk.js","sourcesContent":["import React, { useMemo } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Pair } from '@pancakeswap/sdk'\r\nimport { Text, Flex, Box, CardBody, CardFooter, Button, AddIcon, CardDivider } from '@pancakeswap/uikit'\r\nimport { Link } from 'react-router-dom'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport SubNav from 'components/Menu/SubNav'\r\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\r\nimport FullPositionCard from '../../components/PositionCard'\r\nimport QuestionHelper from '../../components/QuestionHelper'\r\nimport { useTokenBalancesWithLoadingIndicator } from '../../state/wallet/hooks'\r\nimport { usePairs } from '../../hooks/usePairs'\r\nimport { toV2LiquidityToken, useTrackedTokenPairs } from '../../state/user/hooks'\r\nimport Dots from '../../components/Loader/Dots'\r\nimport { AppHeader, AppBody } from '../../components/App'\r\nimport Page from '../Page'\r\n\r\n// const Body = styled(CardBody)`\r\n//   background-color: ${({ theme }) => theme.colors.dropdownDeep};\r\n// `\r\n\r\nconst Body = styled(CardBody)`\r\n  background-color: transparent;\r\n`\r\n\r\nexport default function Pool() {\r\n  const { account } = useActiveWeb3React()\r\n  const { t } = useTranslation()\r\n\r\n  // fetch the user's balances of all tracked V2 LP tokens\r\n  const trackedTokenPairs = useTrackedTokenPairs()\r\n  const tokenPairsWithLiquidityTokens = useMemo(\r\n    () => trackedTokenPairs.map((tokens) => ({ liquidityToken: toV2LiquidityToken(tokens), tokens })),\r\n    [trackedTokenPairs],\r\n  )\r\n  const liquidityTokens = useMemo(\r\n    () => tokenPairsWithLiquidityTokens.map((tpwlt) => tpwlt.liquidityToken),\r\n    [tokenPairsWithLiquidityTokens],\r\n  )\r\n  const [v2PairsBalances, fetchingV2PairBalances] = useTokenBalancesWithLoadingIndicator(\r\n    account ?? undefined,\r\n    liquidityTokens,\r\n  )\r\n\r\n  // fetch the reserves for all V2 pools in which the user has a balance\r\n  const liquidityTokensWithBalances = useMemo(\r\n    () =>\r\n      tokenPairsWithLiquidityTokens.filter(({ liquidityToken }) =>\r\n        v2PairsBalances[liquidityToken.address]?.greaterThan('0'),\r\n      ),\r\n    [tokenPairsWithLiquidityTokens, v2PairsBalances],\r\n  )\r\n\r\n  const v2Pairs = usePairs(liquidityTokensWithBalances.map(({ tokens }) => tokens))\r\n  const v2IsLoading =\r\n    fetchingV2PairBalances || v2Pairs?.length < liquidityTokensWithBalances.length || v2Pairs?.some((V2Pair) => !V2Pair)\r\n\r\n  const allV2PairsWithLiquidity = v2Pairs.map(([, pair]) => pair).filter((v2Pair): v2Pair is Pair => Boolean(v2Pair))\r\n\r\n  const renderBody = () => {\r\n    if (!account) {\r\n      return (\r\n        <Box padding=\"24px 0px\">\r\n          <Text color=\"textSubtle\" textAlign=\"center\" padding=\"40px\">\r\n            {t('Connect to a wallet to view your liquidity.')}\r\n          </Text>\r\n        </Box>\r\n      )\r\n    }\r\n    if (v2IsLoading) {\r\n      return (\r\n        <Box padding=\"24px 0px\">\r\n          <Text color=\"textSubtle\" textAlign=\"center\" padding=\"40px\">\r\n            <Dots>{t('Loading')}</Dots>\r\n          </Text>\r\n        </Box>\r\n      )\r\n    }\r\n    if (allV2PairsWithLiquidity?.length > 0) {\r\n      return allV2PairsWithLiquidity.map((v2Pair, index) => (\r\n        <FullPositionCard\r\n          key={v2Pair.liquidityToken.address}\r\n          pair={v2Pair}\r\n          mb={index < allV2PairsWithLiquidity.length - 1 ? '16px' : 0}\r\n        />\r\n      ))\r\n    }\r\n    return (\r\n      <Box padding=\"24px 0px\">\r\n        <Text color=\"textSubtle\" textAlign=\"center\" padding=\"40px\">\r\n          {t('No liquidity found.')}\r\n        </Text>\r\n      </Box>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Page>\r\n      <AppBody>\r\n        <div style={{marginRight: '16px'}}>\r\n          <SubNav />\r\n        </div>\r\n        <CardDivider opacity={0.6} />\r\n        <AppHeader title={t('Liquidity')} subtitle={t('Add liquidity to receive LP tokens.')} />\r\n        <Body>\r\n          <Button id=\"join-pool-button\" as={Link} to=\"/add\" width=\"100%\" startIcon={<AddIcon color=\"white\" />}>\r\n            {t('Add Liquidity')}\r\n          </Button>\r\n        </Body>\r\n        <CardDivider opacity={0.6} />\r\n        <Body>\r\n          <Flex alignItems=\"center\">\r\n            <Text color=\"primaryBright\" mb=\"8px\" fontWeight=\"600\">\r\n              {t(\"Your Liquidity\")}\r\n            </Text>\r\n            <QuestionHelper text={t('When you add liquidity, you are given pool tokens representing your position. There tokens automatically earn fees proportional to your share of the pool, and can be redeemed at any time')} \r\n                            placement=\"top-start\" \r\n                            ml=\"4px\" \r\n            />\r\n          </Flex>\r\n          {renderBody()}\r\n          {account && !v2IsLoading && (\r\n            <Flex flexDirection=\"column\" mt=\"24px\">\r\n              <Text color=\"textSubtle\" mb=\"8px\" fontSize=\"14px\">\r\n                {t(\"Don't see a pool you joined? \")}\r\n              </Text>\r\n              <Button id=\"import-pool-link\" variant=\"secondary\" scale=\"sm\" as={Link} to=\"/find\">\r\n                {t('Find other LP tokens')}\r\n              </Button>\r\n            </Flex>\r\n          )}\r\n        </Body>\r\n      </AppBody>\r\n    </Page>\r\n  )\r\n}\r\n","import styled from 'styled-components'\r\nimport { Box } from '@pancakeswap/uikit'\r\n\r\nconst Row = styled(Box)<{\r\n  width?: string\r\n  align?: string\r\n  justify?: string\r\n  padding?: string\r\n  border?: string\r\n  borderRadius?: string\r\n}>`\r\n  width: ${({ width }) => width ?? '100%'};\r\n  display: flex;\r\n  padding: 0;\r\n  align-items: ${({ align }) => align ?? 'center'};\r\n  justify-content: ${({ justify }) => justify ?? 'flex-start'};\r\n  padding: ${({ padding }) => padding};\r\n  border: ${({ border }) => border};\r\n  border-radius: ${({ borderRadius }) => borderRadius};\r\n`\r\n\r\nexport const RowBetween = styled(Row)`\r\n  justify-content: space-between;\r\n`\r\n\r\nexport const RowFlat = styled.div`\r\n  display: flex;\r\n  align-items: flex-end;\r\n`\r\n\r\nexport const AutoRow = styled(Row)<{ gap?: string; justify?: string }>`\r\n  flex-wrap: wrap;\r\n  margin: ${({ gap }) => gap && `-${gap}`};\r\n  justify-content: ${({ justify }) => justify && justify};\r\n\r\n  & > * {\r\n    margin: ${({ gap }) => gap} !important;\r\n  }\r\n`\r\n\r\nexport const RowFixed = styled(Row)<{ gap?: string; justify?: string }>`\r\n  width: fit-content;\r\n  margin: ${({ gap }) => gap && `-${gap}`};\r\n`\r\n\r\nexport default Row\r\n","import styled from 'styled-components'\r\n\r\nconst Column = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-start;\r\n`\r\nexport const ColumnCenter = styled(Column)`\r\n  width: 100%;\r\n  align-items: center;\r\n`\r\n\r\nexport const AutoColumn = styled.div<{\r\n  gap?: 'sm' | 'md' | 'lg' | string\r\n  justify?: 'stretch' | 'center' | 'start' | 'end' | 'flex-start' | 'flex-end' | 'space-between'\r\n}>`\r\n  display: grid;\r\n  grid-auto-rows: auto;\r\n  grid-row-gap: ${({ gap }) => (gap === 'sm' && '8px') || (gap === 'md' && '12px') || (gap === 'lg' && '24px') || gap};\r\n  justify-items: ${({ justify }) => justify && justify};\r\n`\r\n\r\nexport default Column\r\n","import { Currency } from '@pancakeswap/sdk'\r\nimport React from 'react'\r\nimport styled from 'styled-components'\r\nimport CurrencyLogo from './CurrencyLogo'\r\n\r\nconst Wrapper = styled.div<{ margin: boolean }>`\r\n  display: flex;\r\n  flex-direction: row;\r\n  margin-right: ${({ margin }) => margin && '4px'};\r\n`\r\n\r\ninterface DoubleCurrencyLogoProps {\r\n  margin?: boolean\r\n  size?: number\r\n  currency0?: Currency\r\n  currency1?: Currency\r\n}\r\n\r\nexport default function DoubleCurrencyLogo({\r\n  currency0,\r\n  currency1,\r\n  size = 20,\r\n  margin = false,\r\n}: DoubleCurrencyLogoProps) {\r\n  return (\r\n    <Wrapper margin={margin}>\r\n      {currency0 && <CurrencyLogo currency={currency0} size={`${size.toString()}px`} style={{ marginRight: '4px' }} />}\r\n      {currency1 && <CurrencyLogo currency={currency1} size={`${size.toString()}px`} />}\r\n    </Wrapper>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport useHttpLocations from '../../hooks/useHttpLocations'\r\nimport Logo from './Logo'\r\n\r\nconst StyledListLogo = styled(Logo)<{ size: string }>`\r\n  width: ${({ size }) => size};\r\n  height: ${({ size }) => size};\r\n`\r\n\r\nexport default function ListLogo({\r\n  logoURI,\r\n  style,\r\n  size = '24px',\r\n  alt,\r\n}: {\r\n  logoURI: string\r\n  size?: string\r\n  style?: React.CSSProperties\r\n  alt?: string\r\n}) {\r\n  const srcs: string[] = useHttpLocations(logoURI)\r\n\r\n  return <StyledListLogo alt={alt} size={size} srcs={srcs} style={style} />\r\n}\r\n","const getTokenLogoURL = (address: string) =>\r\n  `https://assets.trustwalletapp.com/blockchains/smartchain/assets/${address}/logo.png`\r\n\r\nexport default getTokenLogoURL\r\n","import { Currency, ETHER, Token } from '@pancakeswap/sdk'\r\nimport { BinanceIcon } from '@pancakeswap/uikit'\r\nimport React, { useMemo } from 'react'\r\nimport styled from 'styled-components'\r\nimport useHttpLocations from '../../hooks/useHttpLocations'\r\nimport { WrappedTokenInfo } from '../../state/lists/hooks'\r\nimport getTokenLogoURL from '../../utils/getTokenLogoURL'\r\nimport Logo from './Logo'\r\n\r\nconst StyledLogo = styled(Logo)<{ size: string }>`\r\n  width: ${({ size }) => size};\r\n  height: ${({ size }) => size};\r\n`\r\n\r\nexport default function CurrencyLogo({\r\n  currency,\r\n  size = '24px',\r\n  style,\r\n}: {\r\n  currency?: Currency\r\n  size?: string\r\n  style?: React.CSSProperties\r\n}) {\r\n  const uriLocations = useHttpLocations(currency instanceof WrappedTokenInfo ? currency.logoURI : undefined)\r\n\r\n  const srcs: string[] = useMemo(() => {\r\n    if (currency === ETHER) return []\r\n\r\n    if (currency instanceof Token) {\r\n      if (currency instanceof WrappedTokenInfo) {\r\n        return [...uriLocations, getTokenLogoURL(currency.address)]\r\n      }\r\n      return [getTokenLogoURL(currency.address)]\r\n    }\r\n    return []\r\n  }, [currency, uriLocations])\r\n\r\n  if (currency === ETHER) {\r\n    return <BinanceIcon width={size} style={style} />\r\n  }\r\n\r\n  return <StyledLogo size={size} srcs={srcs} alt={`${currency?.symbol ?? 'token'} logo`} style={style} />\r\n}\r\n","import styled from 'styled-components'\r\nimport { Box } from '@pancakeswap/uikit'\r\n\r\nconst Card = styled(Box)<{\r\n  width?: string\r\n  padding?: string\r\n  border?: string\r\n  borderRadius?: string\r\n}>`\r\n  width: ${({ width }) => width ?? '100%'};\r\n  border-radius: 16px;\r\n  padding: 1.25rem;\r\n  padding: ${({ padding }) => padding};\r\n  border: ${({ border }) => border};\r\n  border-radius: ${({ borderRadius }) => borderRadius};\r\n  background-color: ${({ theme }) => theme.colors.background};\r\n`\r\nexport default Card\r\n\r\nexport const LightCard = styled(Card)`\r\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\r\n`\r\n\r\nexport const LightGreyCard = styled(Card)`\r\n  border: 1px solid ${({ theme }) => theme.colors.cardBorder};\r\n  background-color: ${({ theme }) => theme.colors.background};\r\n`\r\n\r\nexport const GreyCard = styled(Card)`\r\n  background-color: ${({ theme }) => theme.colors.dropdown};\r\n`\r\n","import styled from 'styled-components'\r\n\r\nconst Dots = styled.span`\r\n  &::after {\r\n    display: inline-block;\r\n    animation: ellipsis 1.25s infinite;\r\n    content: '.';\r\n    width: 1em;\r\n    text-align: left;\r\n  }\r\n  @keyframes ellipsis {\r\n    0% {\r\n      content: '.';\r\n    }\r\n    33% {\r\n      content: '..';\r\n    }\r\n    66% {\r\n      content: '...';\r\n    }\r\n  }\r\n`\r\n\r\nexport default Dots\r\n","import { Currency, ETHER, Token } from '@pancakeswap/sdk'\r\n\r\nexport function currencyId(currency: Currency): string {\r\n  if (currency === ETHER) return 'BNB'\r\n  if (currency instanceof Token) return currency.address\r\n  throw new Error('invalid currency')\r\n}\r\n\r\nexport default currencyId\r\n","import { BigNumber } from '@ethersproject/bignumber'\r\nimport { Token, TokenAmount } from '@pancakeswap/sdk'\r\nimport { useTokenContract } from './useContract'\r\nimport { useSingleCallResult } from '../state/multicall/hooks'\r\n\r\n// returns undefined if input token is undefined, or fails to get token contract,\r\n// or contract total supply cannot be fetched\r\nfunction useTotalSupply(token?: Token): TokenAmount | undefined {\r\n  const contract = useTokenContract(token?.address, false)\r\n\r\n  const totalSupply: BigNumber = useSingleCallResult(contract, 'totalSupply')?.result?.[0]\r\n\r\n  return token && totalSupply ? new TokenAmount(token, totalSupply.toString()) : undefined\r\n}\r\n\r\nexport default useTotalSupply\r\n","import React, { useState } from 'react'\r\nimport { HelpIcon } from '@pancakeswap/uikit'\r\n\r\nconst BAD_SRCS: { [tokenAddress: string]: true } = {}\r\n\r\nexport interface LogoProps extends React.ImgHTMLAttributes<HTMLImageElement> {\r\n  srcs: string[]\r\n}\r\n\r\n/**\r\n * Renders an image by sequentially trying a list of URIs, and then eventually a fallback triangle alert\r\n */\r\nconst Logo: React.FC<LogoProps> = ({ srcs, alt, ...rest }) => {\r\n  const [, refresh] = useState<number>(0)\r\n\r\n  const src: string | undefined = srcs.find((s) => !BAD_SRCS[s])\r\n\r\n  if (src) {\r\n    return (\r\n      <img\r\n        {...rest}\r\n        alt={alt}\r\n        src={src}\r\n        onError={() => {\r\n          if (src) BAD_SRCS[src] = true\r\n          refresh((i) => i + 1)\r\n        }}\r\n      />\r\n    )\r\n  }\r\n\r\n  return <HelpIcon {...rest} />\r\n}\r\n\r\nexport default Logo\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Flex } from '@pancakeswap/uikit'\r\nimport SubNav from 'components/Menu/SubNav'\r\n\r\nconst StyledPage = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  width: 100%;\r\n  padding: 16px;\r\n  padding-bottom: 0;\r\n  min-height: calc(100vh - 64px);\r\n  background: ${({ theme }) => theme.colors.background};\r\n\r\n  ${({ theme }) => theme.mediaQueries.xs} {\r\n    background-size: auto;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    padding: 24px;\r\n    padding-bottom: 0;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    padding-top: 32px;\r\n    min-height: calc(100vh - 64px);\r\n  }\r\n`\r\n\r\nconst Page: React.FC<React.HTMLAttributes<HTMLDivElement>> = ({ children, ...props }) => {\r\n  return (\r\n    <StyledPage {...props}>\r\n      {/* <SubNav /> */}\r\n      {children}\r\n      <Flex flexGrow={1} />\r\n    </StyledPage>\r\n  )\r\n}\r\n\r\nexport default Page\r\n","import React, { useState } from 'react'\r\nimport { JSBI, Pair, Percent } from '@pancakeswap/sdk'\r\nimport {\r\n  Button,\r\n  Text,\r\n  ChevronUpIcon,\r\n  ChevronDownIcon,\r\n  Card,\r\n  CardBody,\r\n  Flex,\r\n  CardProps,\r\n  AddIcon,\r\n} from '@pancakeswap/uikit'\r\nimport { Link } from 'react-router-dom'\r\nimport styled from 'styled-components'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\r\nimport useTotalSupply from '../../hooks/useTotalSupply'\r\n\r\nimport { useTokenBalance } from '../../state/wallet/hooks'\r\nimport { currencyId } from '../../utils/currencyId'\r\nimport { unwrappedToken } from '../../utils/wrappedCurrency'\r\n\r\nimport { LightCard } from '../Card'\r\nimport { AutoColumn } from '../Layout/Column'\r\nimport CurrencyLogo from '../Logo/CurrencyLogo'\r\nimport { DoubleCurrencyLogo } from '../Logo'\r\nimport { RowBetween, RowFixed } from '../Layout/Row'\r\nimport { BIG_INT_ZERO } from '../../config/constants'\r\nimport Dots from '../Loader/Dots'\r\n\r\nconst FixedHeightRow = styled(RowBetween)`\r\n  height: 24px;\r\n`\r\n\r\ninterface PositionCardProps extends CardProps {\r\n  pair: Pair\r\n  showUnwrapped?: boolean\r\n}\r\n\r\nexport function MinimalPositionCard({ pair, showUnwrapped = false }: PositionCardProps) {\r\n  const { account } = useActiveWeb3React()\r\n\r\n  const { t } = useTranslation()\r\n\r\n  const currency0 = showUnwrapped ? pair.token0 : unwrappedToken(pair.token0)\r\n  const currency1 = showUnwrapped ? pair.token1 : unwrappedToken(pair.token1)\r\n\r\n  const [showMore, setShowMore] = useState(false)\r\n\r\n  const userPoolBalance = useTokenBalance(account ?? undefined, pair.liquidityToken)\r\n  const totalPoolTokens = useTotalSupply(pair.liquidityToken)\r\n\r\n  const poolTokenPercentage =\r\n    !!userPoolBalance && !!totalPoolTokens && JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\r\n      ? new Percent(userPoolBalance.raw, totalPoolTokens.raw)\r\n      : undefined\r\n\r\n  const [token0Deposited, token1Deposited] =\r\n    !!pair &&\r\n    !!totalPoolTokens &&\r\n    !!userPoolBalance &&\r\n    // this condition is a short-circuit in the case where useTokenBalance updates sooner than useTotalSupply\r\n    JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\r\n      ? [\r\n          pair.getLiquidityValue(pair.token0, totalPoolTokens, userPoolBalance, false),\r\n          pair.getLiquidityValue(pair.token1, totalPoolTokens, userPoolBalance, false),\r\n        ]\r\n      : [undefined, undefined]\r\n\r\n  return (\r\n    <>\r\n      {userPoolBalance && JSBI.greaterThan(userPoolBalance.raw, JSBI.BigInt(0)) ? (\r\n        <Card>\r\n          <CardBody>\r\n            <AutoColumn gap=\"16px\">\r\n              <FixedHeightRow>\r\n                <RowFixed>\r\n                  <Text color=\"secondary\" bold>\r\n                    {t('LP tokens in your wallet')}\r\n                  </Text>\r\n                </RowFixed>\r\n              </FixedHeightRow>\r\n              <FixedHeightRow onClick={() => setShowMore(!showMore)}>\r\n                <RowFixed>\r\n                  <DoubleCurrencyLogo currency0={currency0} currency1={currency1} margin size={20} />\r\n                  <Text small color=\"textSubtle\">\r\n                    {currency0.symbol}-{currency1.symbol} LP\r\n                  </Text>\r\n                </RowFixed>\r\n                <RowFixed>\r\n                  <Text>{userPoolBalance ? userPoolBalance.toSignificant(4) : '-'}</Text>\r\n                </RowFixed>\r\n              </FixedHeightRow>\r\n              <AutoColumn gap=\"4px\">\r\n                <FixedHeightRow>\r\n                  <Text color=\"textSubtle\" small>\r\n                    {t('Share of Pool')}:\r\n                  </Text>\r\n                  <Text>{poolTokenPercentage ? `${poolTokenPercentage.toFixed(6)}%` : '-'}</Text>\r\n                </FixedHeightRow>\r\n                <FixedHeightRow>\r\n                  <Text color=\"textSubtle\" small>\r\n                    {t('Pooled %asset%', { asset: currency0.symbol })}:\r\n                  </Text>\r\n                  {token0Deposited ? (\r\n                    <RowFixed>\r\n                      <Text ml=\"6px\">{token0Deposited?.toSignificant(6)}</Text>\r\n                    </RowFixed>\r\n                  ) : (\r\n                    '-'\r\n                  )}\r\n                </FixedHeightRow>\r\n                <FixedHeightRow>\r\n                  <Text color=\"textSubtle\" small>\r\n                    {t('Pooled %asset%', { asset: currency1.symbol })}:\r\n                  </Text>\r\n                  {token1Deposited ? (\r\n                    <RowFixed>\r\n                      <Text ml=\"6px\">{token1Deposited?.toSignificant(6)}</Text>\r\n                    </RowFixed>\r\n                  ) : (\r\n                    '-'\r\n                  )}\r\n                </FixedHeightRow>\r\n              </AutoColumn>\r\n            </AutoColumn>\r\n          </CardBody>\r\n        </Card>\r\n      ) : (\r\n        <LightCard>\r\n          <Text fontSize=\"14px\" style={{ textAlign: 'center' }}>\r\n            <span role=\"img\" aria-label=\"pancake-icon\">\r\n              🥞\r\n            </span>{' '}\r\n            {t(\r\n              \"By adding liquidity you'll earn 0.17% of all trades on this pair proportional to your share of the pool. Fees are added to the pool, accrue in real time and can be claimed by withdrawing your liquidity.\",\r\n            )}\r\n          </Text>\r\n        </LightCard>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default function FullPositionCard({ pair, ...props }: PositionCardProps) {\r\n  const { account } = useActiveWeb3React()\r\n\r\n  const currency0 = unwrappedToken(pair.token0)\r\n  const currency1 = unwrappedToken(pair.token1)\r\n\r\n  const [showMore, setShowMore] = useState(false)\r\n\r\n  const userPoolBalance = useTokenBalance(account ?? undefined, pair.liquidityToken)\r\n  const totalPoolTokens = useTotalSupply(pair.liquidityToken)\r\n\r\n  const poolTokenPercentage =\r\n    !!userPoolBalance && !!totalPoolTokens && JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\r\n      ? new Percent(userPoolBalance.raw, totalPoolTokens.raw)\r\n      : undefined\r\n\r\n  const [token0Deposited, token1Deposited] =\r\n    !!pair &&\r\n    !!totalPoolTokens &&\r\n    !!userPoolBalance &&\r\n    // this condition is a short-circuit in the case where useTokenBalance updates sooner than useTotalSupply\r\n    JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\r\n      ? [\r\n          pair.getLiquidityValue(pair.token0, totalPoolTokens, userPoolBalance, false),\r\n          pair.getLiquidityValue(pair.token1, totalPoolTokens, userPoolBalance, false),\r\n        ]\r\n      : [undefined, undefined]\r\n\r\n  return (\r\n    <Card style={{ borderRadius: '12px' }} {...props}>\r\n      <Flex justifyContent=\"space-between\" role=\"button\" onClick={() => setShowMore(!showMore)} p=\"16px\">\r\n        <Flex flexDirection=\"column\">\r\n          <Flex alignItems=\"center\" mb=\"4px\">\r\n            <DoubleCurrencyLogo currency0={currency0} currency1={currency1} size={20} />\r\n            <Text bold ml=\"8px\">\r\n              {!currency0 || !currency1 ? <Dots>Loading</Dots> : `${currency0.symbol}/${currency1.symbol}`}\r\n            </Text>\r\n          </Flex>\r\n          <Text fontSize=\"14px\" color=\"textSubtle\">\r\n            {userPoolBalance?.toSignificant(4)}\r\n          </Text>\r\n        </Flex>\r\n        {showMore ? <ChevronUpIcon /> : <ChevronDownIcon />}\r\n      </Flex>\r\n\r\n      {showMore && (\r\n        <AutoColumn gap=\"8px\" style={{ padding: '16px' }}>\r\n          <FixedHeightRow>\r\n            <RowFixed>\r\n              <CurrencyLogo size=\"20px\" currency={currency0} />\r\n              <Text color=\"textSubtle\" ml=\"4px\">\r\n                Pooled {currency0.symbol}\r\n              </Text>\r\n            </RowFixed>\r\n            {token0Deposited ? (\r\n              <RowFixed>\r\n                <Text ml=\"6px\">{token0Deposited?.toSignificant(6)}</Text>\r\n              </RowFixed>\r\n            ) : (\r\n              '-'\r\n            )}\r\n          </FixedHeightRow>\r\n\r\n          <FixedHeightRow>\r\n            <RowFixed>\r\n              <CurrencyLogo size=\"20px\" currency={currency1} />\r\n              <Text color=\"textSubtle\" ml=\"4px\">\r\n                Pooled {currency1.symbol}\r\n              </Text>\r\n            </RowFixed>\r\n            {token1Deposited ? (\r\n              <RowFixed>\r\n                <Text ml=\"6px\">{token1Deposited?.toSignificant(6)}</Text>\r\n              </RowFixed>\r\n            ) : (\r\n              '-'\r\n            )}\r\n          </FixedHeightRow>\r\n\r\n          <FixedHeightRow>\r\n            <Text color=\"textSubtle\">Share of pool</Text>\r\n            <Text>\r\n              {poolTokenPercentage\r\n                ? `${poolTokenPercentage.toFixed(2) === '0.00' ? '<0.01' : poolTokenPercentage.toFixed(2)}%`\r\n                : '-'}\r\n            </Text>\r\n          </FixedHeightRow>\r\n\r\n          {userPoolBalance && JSBI.greaterThan(userPoolBalance.raw, BIG_INT_ZERO) && (\r\n            <Flex flexDirection=\"column\">\r\n              <Button\r\n                as={Link}\r\n                to={`/remove/${currencyId(currency0)}/${currencyId(currency1)}`}\r\n                variant=\"primary\"\r\n                width=\"100%\"\r\n                mb=\"8px\"\r\n              >\r\n                Remove\r\n              </Button>\r\n              <Button\r\n                as={Link}\r\n                to={`/add/${currencyId(currency0)}/${currencyId(currency1)}`}\r\n                variant=\"text\"\r\n                startIcon={<AddIcon color=\"primary\" />}\r\n                width=\"100%\"\r\n              >\r\n                Add liquidity instead\r\n              </Button>\r\n            </Flex>\r\n          )}\r\n        </AutoColumn>\r\n      )}\r\n    </Card>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Text, Flex, Heading, IconButton, ArrowBackIcon, NotificationDot } from '@pancakeswap/uikit'\r\nimport { Link } from 'react-router-dom'\r\nimport { useExpertModeManager } from 'state/user/hooks'\r\nimport GlobalSettings from 'components/Menu/GlobalSettings'\r\nimport Transactions from './Transactions'\r\nimport QuestionHelper from '../QuestionHelper'\r\n\r\ninterface Props {\r\n  title: string\r\n  subtitle: string\r\n  helper?: string\r\n  backTo?: string\r\n  noConfig?: boolean\r\n}\r\n\r\nconst AppHeaderContainer = styled(Flex)`\r\n  margin-top: 20px;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  padding: 6px 12px;\r\n  width: 100%;\r\n  margin-bottom: 10px;\r\n  // border-bottom: 1px solid ${({ theme }) => theme.colors.cardDivider};\r\n`\r\n\r\nconst AppHeader: React.FC<Props> = ({ title, subtitle, helper, backTo, noConfig = false }) => {\r\n  const [expertMode] = useExpertModeManager()\r\n\r\n  return (\r\n    <AppHeaderContainer>\r\n      <Flex alignItems=\"center\" mr={noConfig ? 0 : '16px'}>\r\n        {backTo && (\r\n          <IconButton as={Link} to={backTo}>\r\n            <ArrowBackIcon width=\"32px\" />\r\n          </IconButton>\r\n        )}\r\n        <Flex flexDirection=\"column\">\r\n          <Heading scale=\"lg\" mb=\"8px\">\r\n            {title}\r\n          </Heading>\r\n          <Flex alignItems=\"center\">\r\n            {helper && <QuestionHelper text={helper} mr=\"4px\" />}\r\n            <Text color=\"textSubtle\" fontSize=\"16px\">\r\n              {subtitle}\r\n            </Text>\r\n          </Flex>\r\n        </Flex>\r\n      </Flex>\r\n      {!noConfig && (\r\n        <Flex alignItems=\"center\">\r\n          <NotificationDot show={expertMode}>\r\n            <GlobalSettings />\r\n          </NotificationDot>\r\n          {/* <Transactions /> */}\r\n        </Flex>\r\n      )}\r\n    </AppHeaderContainer>\r\n  )\r\n}\r\n\r\nexport default AppHeader\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Card } from '@pancakeswap/uikit'\r\n\r\nexport const BodyWrapper = styled(Card)`\r\n  border-radius: 24px;\r\n  margin-top: 3%;\r\n  max-width: 500px;\r\n  padding: 16px;\r\n  width: 100%;\r\n  z-index: 1;\r\n`\r\n\r\n/**\r\n * The styled container element that wraps the content of most pages and the tabs.\r\n */\r\nexport default function AppBody({ children }: { children: React.ReactNode }) {\r\n  return <BodyWrapper>{children}</BodyWrapper>\r\n}\r\n","import { useMemo } from 'react'\r\nimport contenthashToUri from 'utils/contenthashToUri'\r\nimport { parseENSAddress } from 'utils/ENS/parseENSAddress'\r\nimport uriToHttp from 'utils/uriToHttp'\r\nimport useENSContentHash from './ENS/useENSContentHash'\r\n\r\nexport default function useHttpLocations(uri: string | undefined): string[] {\r\n  const ens = useMemo(() => (uri ? parseENSAddress(uri) : undefined), [uri])\r\n  const resolvedContentHash = useENSContentHash(ens?.ensName)\r\n  return useMemo(() => {\r\n    if (ens) {\r\n      return resolvedContentHash.contenthash ? uriToHttp(contenthashToUri(resolvedContentHash.contenthash)) : []\r\n    }\r\n    return uri ? uriToHttp(uri) : []\r\n  }, [ens, resolvedContentHash.contenthash, uri])\r\n}\r\n","import { namehash } from 'ethers/lib/utils'\r\nimport { useMemo } from 'react'\r\nimport { useSingleCallResult } from '../../state/multicall/hooks'\r\nimport isZero from '../../utils/isZero'\r\nimport { useENSRegistrarContract, useENSResolverContract } from '../useContract'\r\n\r\n/**\r\n * Does a lookup for an ENS name to find its contenthash.\r\n */\r\nexport default function useENSContentHash(ensName?: string | null): { loading: boolean; contenthash: string | null } {\r\n  const ensNodeArgument = useMemo(() => {\r\n    if (!ensName) return [undefined]\r\n    try {\r\n      return ensName ? [namehash(ensName)] : [undefined]\r\n    } catch (error) {\r\n      return [undefined]\r\n    }\r\n  }, [ensName])\r\n  const registrarContract = useENSRegistrarContract(false)\r\n  const resolverAddressResult = useSingleCallResult(registrarContract, 'resolver', ensNodeArgument)\r\n  const resolverAddress = resolverAddressResult.result?.[0]\r\n  const resolverContract = useENSResolverContract(\r\n    resolverAddress && isZero(resolverAddress) ? undefined : resolverAddress,\r\n    false,\r\n  )\r\n  const contenthash = useSingleCallResult(resolverContract, 'contenthash', ensNodeArgument)\r\n\r\n  return {\r\n    contenthash: contenthash.result?.[0] ?? null,\r\n    loading: resolverAddressResult.loading || contenthash.loading,\r\n  }\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Link, useLocation } from 'react-router-dom'\r\nimport { ButtonMenu, ButtonMenuItem, IconButton, ArrowBackIcon, Flex } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { RowBetween } from '../Layout/Row'\r\n\r\ninterface Props {\r\n  backTo?: string\r\n}\r\n\r\nconst StyledNav = styled.nav`\r\n  margin-bottom: 10px;\r\n  text-align: right;\r\n  padding: 10px 0px;\r\n`\r\n\r\nconst getActiveIndex = (pathname: string): number => {\r\n  if (\r\n    pathname.includes('/pool') ||\r\n    pathname.includes('/create') ||\r\n    pathname.includes('/add') ||\r\n    pathname.includes('/remove') ||\r\n    pathname.includes('/find') ||\r\n    pathname.includes('/liquidity')\r\n  ) {\r\n    return 1\r\n  }\r\n  return 0\r\n}\r\n\r\nconst Nav: React.FC<Props> = ({ backTo }) => {\r\n  const location = useLocation()\r\n  const { t } = useTranslation()\r\n\r\n  return (\r\n\r\n    <StyledNav>\r\n      <RowBetween>\r\n        <Flex alignItems=\"center\">\r\n          {backTo && (\r\n            <IconButton as={Link} to={backTo} scale=\"sm\">\r\n              <ArrowBackIcon width=\"20px\" />\r\n            </IconButton>\r\n          )}\r\n        </Flex>\r\n        <ButtonMenu activeIndex={getActiveIndex(location.pathname)} scale=\"sm\" variant=\"subtle\">\r\n          <ButtonMenuItem id=\"swap-nav-link\" to=\"/swap\" as={Link}>\r\n            {t('Swap')}\r\n          </ButtonMenuItem>\r\n          <ButtonMenuItem id=\"pool-nav-link\" to=\"/pool\" as={Link}>\r\n            {t('Liquidity')}\r\n          </ButtonMenuItem>\r\n        </ButtonMenu>\r\n      </RowBetween>\r\n    </StyledNav>\r\n  )\r\n}\r\n\r\nconst Nav1 = () => {\r\n  const location = useLocation()\r\n  const { t } = useTranslation()\r\n  return (\r\n\r\n    <StyledNav>\r\n      <ButtonMenu activeIndex={getActiveIndex(location.pathname)} scale=\"sm\" variant=\"subtle\">\r\n        <ButtonMenuItem id=\"swap-nav-link\" to=\"/swap\" as={Link}>\r\n          {t('Swap')}\r\n        </ButtonMenuItem>\r\n        <ButtonMenuItem id=\"pool-nav-link\" to=\"/pool\" as={Link}>\r\n          {t('Liquidity')}\r\n        </ButtonMenuItem>\r\n      </ButtonMenu>\r\n    </StyledNav>\r\n  )\r\n}\r\n\r\nexport default Nav\r\n"],"sourceRoot":""}